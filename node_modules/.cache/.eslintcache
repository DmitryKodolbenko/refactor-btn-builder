[{"/Users/sepezho/Work/tonana/fe/src/index.tsx":"1","/Users/sepezho/Work/tonana/fe/src/App.tsx":"2","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/ton.js":"3","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/solana.js":"4","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/eth.js":"5","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/cosmos.js":"6","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/near.js":"7","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/aurora.js":"8","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/back.js":"9","/Users/sepezho/Work/tonana/fe/src/styles/style.ts":"10","/Users/sepezho/Work/tonana/fe/src/logic/fetch/getATOMMaxAmount.ts":"11","/Users/sepezho/Work/tonana/fe/src/logic/fetch/getTONMaxAmount.ts":"12","/Users/sepezho/Work/tonana/fe/src/logic/fetch/fetchMarkets.ts":"13","/Users/sepezho/Work/tonana/fe/src/logic/fetch/getAURMaxAmount.ts":"14","/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletAUR.ts":"15","/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletATOM.ts":"16","/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletTON.ts":"17","/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletNEAR.ts":"18","/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletETH.ts":"19","/Users/sepezho/Work/tonana/fe/src/logic/fetch/getETHMaxAmount.ts":"20","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeNEARTrx.ts":"21","/Users/sepezho/Work/tonana/fe/src/logic/wallet/initializeWalletNEAR.ts":"22","/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletSOL.ts":"23","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeUSNTrx.ts":"24","/Users/sepezho/Work/tonana/fe/src/styles/gstyles.ts":"25","/Users/sepezho/Work/tonana/fe/src/logic/fetch/getSOLMaxAmount.ts":"26","/Users/sepezho/Work/tonana/fe/src/components/SwapForm.tsx":"27","/Users/sepezho/Work/tonana/fe/src/components/MenuBuilder.tsx":"28","/Users/sepezho/Work/tonana/fe/src/components/Social.tsx":"29","/Users/sepezho/Work/tonana/fe/src/components/IcoBuilder.tsx":"30","/Users/sepezho/Work/tonana/fe/src/components/BtnBuilder.tsx":"31","/Users/sepezho/Work/tonana/fe/src/components/Header.tsx":"32","/Users/sepezho/Work/tonana/fe/src/components/Rpcs.tsx":"33","/Users/sepezho/Work/tonana/fe/src/logic/transaction/formatUsn.js":"34","/Users/sepezho/Work/tonana/fe/src/logic/trxBuilder.js":"35","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeTONJettonsBurnTrx.ts":"36","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeTONTrx.ts":"37","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeAURORATrx.ts":"38","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeETHTrx.ts":"39","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeATOMTrx.ts":"40","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeSOLTrx.ts":"41","/Users/sepezho/Work/tonana/fe/src/logic/transaction/auroraABI.ts":"42","/Users/sepezho/Work/tonana/fe/src/logic/transaction/BOCcontent.ts":"43","/Users/sepezho/Work/tonana/fe/src/contexts/WalletSelectorContext.tsx":"44"},{"size":476,"mtime":1673685136030,"results":"45","hashOfConfig":"46"},{"size":11231,"mtime":1677001870322,"results":"47","hashOfConfig":"46"},{"size":384,"mtime":1671736395948,"results":"48","hashOfConfig":"46"},{"size":532,"mtime":1671736395948,"results":"49","hashOfConfig":"46"},{"size":419,"mtime":1671736395948,"results":"50","hashOfConfig":"46"},{"size":319,"mtime":1673685136032,"results":"51","hashOfConfig":"46"},{"size":657,"mtime":1671736395948,"results":"52","hashOfConfig":"46"},{"size":386,"mtime":1671736395946,"results":"53","hashOfConfig":"46"},{"size":437,"mtime":1673685136032,"results":"54","hashOfConfig":"46"},{"size":615,"mtime":1671736395973,"results":"55","hashOfConfig":"46"},{"size":329,"mtime":1671736395945,"results":"56","hashOfConfig":"46"},{"size":541,"mtime":1671736395946,"results":"57","hashOfConfig":"46"},{"size":894,"mtime":1671736395944,"results":"58","hashOfConfig":"46"},{"size":607,"mtime":1671736395945,"results":"59","hashOfConfig":"46"},{"size":384,"mtime":1671736395952,"results":"60","hashOfConfig":"46"},{"size":832,"mtime":1671736395952,"results":"61","hashOfConfig":"46"},{"size":436,"mtime":1671736395953,"results":"62","hashOfConfig":"46"},{"size":8490,"mtime":1677007901207,"results":"63","hashOfConfig":"46"},{"size":386,"mtime":1671736395952,"results":"64","hashOfConfig":"46"},{"size":403,"mtime":1671736395945,"results":"65","hashOfConfig":"46"},{"size":1909,"mtime":1671736395950,"results":"66","hashOfConfig":"46"},{"size":1598,"mtime":1671736395954,"results":"67","hashOfConfig":"46"},{"size":486,"mtime":1671736395953,"results":"68","hashOfConfig":"46"},{"size":1946,"mtime":1671736395951,"results":"69","hashOfConfig":"46"},{"size":5524,"mtime":1673685136038,"results":"70","hashOfConfig":"46"},{"size":929,"mtime":1673685136031,"results":"71","hashOfConfig":"46"},{"size":8940,"mtime":1671736395943,"results":"72","hashOfConfig":"46"},{"size":6069,"mtime":1671736395942,"results":"73","hashOfConfig":"46"},{"size":1634,"mtime":1671736395943,"results":"74","hashOfConfig":"46"},{"size":758,"mtime":1671736395942,"results":"75","hashOfConfig":"46"},{"size":7325,"mtime":1677001918306,"results":"76","hashOfConfig":"46"},{"size":330,"mtime":1671736395942,"results":"77","hashOfConfig":"46"},{"size":368,"mtime":1671736395943,"results":"78","hashOfConfig":"46"},{"size":3533,"mtime":1671736395951,"results":"79","hashOfConfig":"46"},{"size":5123,"mtime":1671736395952,"results":"80","hashOfConfig":"46"},{"size":4293,"mtime":1673685136034,"results":"81","hashOfConfig":"46"},{"size":2793,"mtime":1673685136035,"results":"82","hashOfConfig":"46"},{"size":2306,"mtime":1671736395949,"results":"83","hashOfConfig":"46"},{"size":2368,"mtime":1671736395949,"results":"84","hashOfConfig":"46"},{"size":5307,"mtime":1671736395949,"results":"85","hashOfConfig":"46"},{"size":2726,"mtime":1671736395950,"results":"86","hashOfConfig":"46"},{"size":3259,"mtime":1671736395951,"results":"87","hashOfConfig":"46"},{"size":1588,"mtime":1673685136033,"results":"88","hashOfConfig":"46"},{"size":4615,"mtime":1676999605818,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"1rxhvrq",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"155","usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"93"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"93"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"93"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/Users/sepezho/Work/tonana/fe/src/index.tsx",["193"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter as Router, useSearchParams } from \"react-router-dom\";\nimport { WalletSelectorContextProvider } from \"./contexts/WalletSelectorContext\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<WalletSelectorContextProvider>\n\t\t\t\t<App />\n\t\t\t</WalletSelectorContextProvider>\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n",["194","195"],"/Users/sepezho/Work/tonana/fe/src/App.tsx",["196","197"],"import { useEffect, useState } from \"react\";\nimport { Button, message, Dropdown } from \"antd\";\nimport { DownOutlined, SwapOutlined } from \"@ant-design/icons\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\n\nimport SwapForm from \"./components/SwapForm\";\nimport getTONMaxAmount from \"./logic/fetch/getTONMaxAmount\";\nimport getATOMMaxAmount from \"./logic/fetch/getATOMMaxAmount\";\nimport getSOLMaxAmount from \"./logic/fetch/getSOLMaxAmount\";\nimport fetchMarkets from \"./logic/fetch/fetchMarkets\";\nimport connectWalletSOL from \"./logic/wallet/connectWalletSOL\";\nimport connectWalletATOM from \"./logic/wallet/connectWalletATOM\";\nimport connectWalletAUR from \"./logic/wallet/connectWalletAUR\";\nimport connectWalletTON from \"./logic/wallet/connectWalletTON\";\nimport connectWalletNEAR from \"./logic/wallet/connectWalletNEAR\";\nimport { menuBuilder } from \"./components/MenuBuilder\";\nimport { generateBtn } from \"./components/BtnBuilder\";\nimport { icoBuilder } from \"./components/IcoBuilder\";\nimport { initializeWalletNEAR } from \"./logic/wallet/initializeWalletNEAR\";\nimport { makeNEARTrxAfterLoad } from \"./logic/transaction/MakeNEARTrx\";\nimport { makeUSNTrxAfterLoad } from \"./logic/transaction/MakeUSNTrx\";\nimport connectWalletETH from \"./logic/wallet/connectWalletETH\";\nimport getAURMaxAmount from \"./logic/fetch/getAURMaxAmount\";\nimport getETHMaxAmount from \"./logic/fetch/getETHMaxAmount\";\nimport Social from \"./components/Social\";\nimport Header from \"./components/Header\";\nimport Rpcs from \"./components/Rpcs\";\nimport Gstyles from \"./styles/gstyles\";\nimport tonRpcStatus from \"./logic/rpcsStatus/ton\";\nimport solRpcStatus from \"./logic/rpcsStatus/solana\";\nimport auroraRpcStatus from \"./logic/rpcsStatus/aurora\";\nimport cosmosRpcStatus from \"./logic/rpcsStatus/cosmos\";\nimport nearRpcStatus from \"./logic/rpcsStatus/near\";\nimport ethRpcStatus from \"./logic/rpcsStatus/eth\";\nimport callBackStatus from \"./logic/rpcsStatus/back\";\n\nimport \"@near-wallet-selector/modal-ui/styles.css\";\nimport { Loader } from \"./styles/style\";\nimport \"antd/dist/antd.css\";\nimport { useWalletSelector } from \"./contexts/WalletSelectorContext\";\n\nimport bnn from \"./static/img/logo.svg\";\n\nconst App = () => {\n\tconst { selector, modal, accounts, accountId } = useWalletSelector();\n\n\tconst [ex, sex] = useState(true);\n\tconst [tu, stu] = useState(0);\n\tconst [su, ssu] = useState(0);\n\tconst [au, sau] = useState(0);\n\tconst [nu, snu] = useState(0);\n\tconst [usnu, susn] = useState(0);\n\tconst [auru, sauruu] = useState(0);\n\tconst [ethu, sethu] = useState(0);\n\tconst [SOLwalletKey, setSOLWalletKey] = useState(\"\");\n\tconst [TONwalletKey, setTONwalletKey] = useState(\"\");\n\tconst [NEARwalletKey, setNEARwalletKey] = useState(\"\");\n\tconst [ATOMwalletKey, setATOMwalletKey] = useState(\"\");\n\tconst [AURwalletKey, setAURwalletKey] = useState(\"\");\n\tconst [AURMaxAmount, setAURMaxAmount] = useState(0);\n\tconst [SOLMaxAmount, setSOLMaxAmount] = useState(0);\n\tconst [TONMaxAmount, setTONMaxAmount] = useState(0);\n\tconst [ATOMMaxAmount, setATOMMaxAmount] = useState(0);\n\tconst [NEARMaxAmount, setNEARMaxAmount] = useState(0);\n\tconst [ETHMaxAmount, setETHMaxAmount] = useState(0);\n\tconst [USNMaxAmount, setUSNMaxAmount] = useState(0);\n\tconst [firstCurrAmount, setFirstCurrAmount] = useState<string>(\"\");\n\tconst [secCurrAmount, setSecCurrAmount] = useState<string>(\"\");\n\tconst [ETHwalletKey, setETHWalletKey] = useState(\"\");\n\n\tconst [isload, setIsload] = useState(false);\n\tconst [hexString, sHexString] = useState(\"\");\n\tconst [networkSource, setNetworkSource] = useState(\"NEAR\");\n\tconst [networkDestination, setNetworkDestination] = useState(\"TON\");\n\tconst [rpcEthStatus, setRpcEthStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Ethereum RPC\",\n\t\tkey: \"eth\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcSolStatus, setRpcSolStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Solana RPC\",\n\t\tkey: \"sol\",\n\t\tstatus: false,\n\t});\n\tconst [rpcNearStatus, setRpcNearStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Near RPC\",\n\t\tkey: \"near\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcAuroraStatus, setRpcAuroraStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Aurora RPC\",\n\t\tkey: \"aurora\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcTonStatus, setRpcTonStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Ton RPC\",\n\t\tkey: \"ton\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcCosmosStatus, setRpcCosmosStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Cosmos RPC\",\n\t\tkey: \"atom\",\n\t\tstatus: false,\n\t});\n\tconst [backStatus, setBackStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Tonana oracle\",\n\t\tkey: \"tnn\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcsStatuses, setRpcsStatuses] = useState<\n\t\tArray<{\n\t\t\tkey: string;\n\t\t\ttitle: string;\n\t\t\tstatus: boolean;\n\t\t}>\n\t>([]);\n\n\tuseEffect(() => {\n\t\tsetRpcsStatuses([\n\t\t\tbackStatus,\n\t\t\trpcTonStatus,\n\t\t\trpcEthStatus,\n\t\t\trpcNearStatus,\n\t\t\trpcSolStatus,\n\t\t\trpcCosmosStatus,\n\t\t\trpcAuroraStatus,\n\t\t]);\n\t}, [\n\t\trpcAuroraStatus,\n\t\trpcNearStatus,\n\t\trpcSolStatus,\n\t\trpcTonStatus,\n\t\trpcCosmosStatus,\n\t\trpcEthStatus,\n\t\tbackStatus,\n\t]);\n\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst transactionHashes = searchParams.get(\"transactionHashes\");\n\tconst nearAccountId = searchParams.get(\"account_id\");\n\tconst isusn = searchParams.get(\"isusn\");\n\tconst isnear = searchParams.get(\"isnear\");\n\n\tvar connection = new Connection(\n\t\t\"https://solana-mainnet.g.alchemy.com/v2/B9sqdnSJnFWSdKlCTFqEQjMr8pnj7RAb\"\n\t);\n\n\tuseEffect(() => {\n\t\tconst getStatuses = () => {\n\t\t\t(async () => {\n\t\t\t\tsetRpcTonStatus(await tonRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcSolStatus(await solRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcNearStatus(await nearRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcAuroraStatus(await auroraRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcEthStatus(await ethRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcCosmosStatus(await cosmosRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetBackStatus(await callBackStatus());\n\t\t\t})();\n\t\t};\n\t\tgetStatuses();\n\t\tsetInterval(() => {\n\t\t\tgetStatuses();\n\t\t}, 30000);\n\n\t\tgetTONMaxAmount(setTONMaxAmount);\n\t\tgetSOLMaxAmount(setSOLMaxAmount);\n\t\tgetATOMMaxAmount(setATOMMaxAmount);\n\t\tgetAURMaxAmount(setAURMaxAmount);\n\t\tgetETHMaxAmount(setETHMaxAmount);\n\n\t\tfetchMarkets(stu, ssu, sau, snu, sauruu, susn, sethu);\n\t\tsetInterval(() => {\n\t\t\tfetchMarkets(stu, ssu, sau, snu, sauruu, susn, sethu);\n\t\t}, 15000);\n\n\t\tsHexString(\n\t\t\tArray(16)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map(() => Math.round(Math.random() * 0xf).toString(16))\n\t\t\t\t.join(\"\")\n\t\t);\n\n\t\tif (localStorage.getItem(\"tonana_data\") && nearAccountId) {\n\t\t\t//@ts-ignore\n\t\t\tconst storedData = JSON.parse(localStorage.getItem(\"tonana_data\"));\n\t\t\tsex(storedData.ex);\n\t\t\tsetSOLWalletKey(storedData.SOLwalletKey);\n\t\t\tsetTONwalletKey(storedData.TONwalletKey);\n\t\t\tsetAURwalletKey(storedData.AURwalletKey);\n\t\t\tsetNEARwalletKey(storedData.NEARwalletKey);\n\t\t\tsetATOMwalletKey(storedData.ATOMwalletKey);\n\t\t\tsetETHWalletKey(storedData.ETHwalletKey);\n\t\t\tsHexString(storedData.hexString);\n\t\t\tsetNetworkSource(storedData.networkSource);\n\t\t\tsetNetworkDestination(storedData.networkDestination);\n\t\t}\n\n\t\tinitializeWalletNEAR(setNEARMaxAmount, setNEARwalletKey, setUSNMaxAmount);\n\t\tif (isnear)\n\t\t\tmakeNEARTrxAfterLoad(transactionHashes, setSearchParams, searchParams);\n\t\tif (isusn)\n\t\t\tmakeUSNTrxAfterLoad(transactionHashes, setSearchParams, searchParams);\n\t\tmessage.success(\"Use Chrome with TonWallet & Phantom extensions\", 10);\n\t\tmessage.success(\"Connect both and make trx, then wait a little bit\", 11);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t\"tonana_data\",\n\t\t\tJSON.stringify({\n\t\t\t\tex,\n\t\t\t\tSOLwalletKey,\n\t\t\t\tTONwalletKey,\n\t\t\t\tETHwalletKey,\n\t\t\t\tAURwalletKey,\n\t\t\t\tNEARwalletKey,\n\t\t\t\tATOMwalletKey,\n\t\t\t\thexString,\n\t\t\t\tnetworkSource,\n\t\t\t\tnetworkDestination,\n\t\t\t})\n\t\t);\n\t}, [\n\t\tex,\n\t\tSOLwalletKey,\n\t\tTONwalletKey,\n\t\tAURwalletKey,\n\t\tETHwalletKey,\n\t\tNEARwalletKey,\n\t\tATOMwalletKey,\n\t\thexString,\n\t\tnetworkSource,\n\t\tnetworkDestination,\n\t]);\n\n\tconst btnProps = {\n\t\tconnectWalletSOL,\n\t\tconnectWalletETH,\n\t\tsetSOLWalletKey,\n\t\tsetETHWalletKey,\n\t\tconnectWalletTON,\n\t\tsetTONwalletKey,\n\t\tsetAURwalletKey,\n\t\tconnectWalletNEAR,\n\t\tsetNEARwalletKey,\n\t\tconnectWalletATOM,\n\t\tconnectWalletAUR,\n\t\tsetATOMwalletKey,\n\t\tTONwalletKey,\n\t\tAURwalletKey,\n\t\tSOLwalletKey,\n\t\tNEARwalletKey,\n\t\tATOMwalletKey,\n\t\tETHwalletKey,\n\t\tselector,\n\t\tmodal,\n\t\taccounts,\n\t\taccountId,\n\t};\n\n\tconst menuSource = menuBuilder(networkDestination, setNetworkSource);\n\tconst menuDestination = menuBuilder(networkSource, setNetworkDestination);\n\tconst coinIco = icoBuilder(networkSource);\n\tconst coinIcoDest = icoBuilder(networkDestination);\n\tconst btnDest = generateBtn(networkDestination, btnProps);\n\tconst btnSource = generateBtn(networkSource, btnProps);\n\n\tconst swap = () => {\n\t\tsetNetworkDestination(networkSource);\n\t\tsetNetworkSource(networkDestination);\n\t\tsetFirstCurrAmount(secCurrAmount);\n\t\tsetSecCurrAmount(firstCurrAmount);\n\t\tsex(!ex);\n\t};\n\n\tconst btnSelectSource = (\n\t\t<>\n\t\t\t<Dropdown overlay={menuSource} placement=\"bottom\">\n\t\t\t\t<Button id={\"selectCoin\"}>\n\t\t\t\t\t<img src={coinIco} alt={\"#\"} />\n\t\t\t\t\t{networkSource}\n\t\t\t\t\t<DownOutlined />\n\t\t\t\t</Button>\n\t\t\t</Dropdown>\n\t\t</>\n\t);\n\n\tconst btnSelectDirection = (\n\t\t<>\n\t\t\t<Dropdown overlay={menuDestination} placement=\"bottom\">\n\t\t\t\t<Button id={\"selectCoin\"}>\n\t\t\t\t\t<img src={coinIcoDest} alt={\"#\"} />\n\t\t\t\t\t{networkDestination}\n\t\t\t\t\t<DownOutlined />\n\t\t\t\t</Button>\n\t\t\t</Dropdown>\n\t\t</>\n\t);\n\n\tconst changeDirection = (\n\t\t<div id={\"directionBtn\"}>\n\t\t\t<SwapOutlined onClick={swap} />\n\t\t</div>\n\t);\n\n\tconst fromProps = {\n\t\tau,\n\t\tsu,\n\t\ttu,\n\t\tnu,\n\t\tusnu,\n\t\tauru,\n\t\tethu,\n\t\tATOMwalletKey,\n\t\tETHwalletKey,\n\t\tSOLwalletKey,\n\t\tTONwalletKey,\n\t\tAURwalletKey,\n\t\tNEARwalletKey,\n\t\tATOMMaxAmount,\n\t\tSOLMaxAmount,\n\t\tETHMaxAmount,\n\t\tAURMaxAmount,\n\t\tTONMaxAmount,\n\t\tUSNMaxAmount,\n\t\tNEARMaxAmount,\n\t\tbtnSelectSource,\n\t\tbtnSelectDirection,\n\t\tbtnDest,\n\t\tbtnSource,\n\t\tsetIsload,\n\t\tisload,\n\t\thexString,\n\t\tchangeDirection,\n\t\tconnection,\n\t\tdirectionNetwork: networkDestination.toLowerCase(),\n\t\tnetworkSource: networkSource.toLowerCase(),\n\t\tsetFirstCurrAmount,\n\t\tsetSecCurrAmount,\n\t\tfirstCurrAmount,\n\t\tsecCurrAmount,\n\t\trpcsStatuses,\n\t};\n\n\tconst tvl =\n\t\tAURMaxAmount * auru +\n\t\tUSNMaxAmount * usnu +\n\t\tETHMaxAmount * ethu +\n\t\tNEARMaxAmount * nu +\n\t\tATOMMaxAmount * au +\n\t\tTONMaxAmount * tu +\n\t\tSOLMaxAmount * su;\n\t// console.log(\"aur\", AURMaxAmount * auru);\n\t// console.log(\"sol\", SOLMaxAmount * su);\n\t// console.log(\"ton\", TONMaxAmount * tu);\n\t// console.log(\"atom\", ATOMMaxAmount * au);\n\t// console.log(\"near\", NEARMaxAmount * nu);\n\t// console.log(\"eth\", ETHMaxAmount * ethu);\n\t// console.log(\"usn\", USNMaxAmount * usnu);\n\t// console.log(\"total\", tvl);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className=\"App\">\n\t\t\t\t<SwapForm {...fromProps} />\n\t\t\t\t{isload ? <Loader src={bnn} /> : null}\n\t\t\t</div>\n\t\t\t<Rpcs rpcsStatuses={rpcsStatuses} />\n\t\t\t<Social />\n\t\t\t<div className=\"version\">\n\t\t\t\tTonana TVL: ${tvl.toFixed(2)}\n\t\t\t\t<br />\n\t\t\t\tv1.0.84 (alpha)\n\t\t\t</div>\n\t\t\t<Gstyles />\n\t\t</>\n\t);\n};\n\nexport default App;\n","/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/ton.js",[],["198","199"],"/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/solana.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/eth.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/cosmos.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/near.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/aurora.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/rpcsStatus/back.js",[],"/Users/sepezho/Work/tonana/fe/src/styles/style.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/fetch/getATOMMaxAmount.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/fetch/getTONMaxAmount.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/fetch/fetchMarkets.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/fetch/getAURMaxAmount.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletAUR.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletATOM.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletTON.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletNEAR.ts",["200","201","202","203","204"],"/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletETH.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/fetch/getETHMaxAmount.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeNEARTrx.ts",["205","206","207","208","209"],"import { message } from \"antd\";\nimport { connect,Contract, utils,transactions, keyStores, WalletConnection } from 'near-api-js';\nimport TonWeb from \"tonweb\";\nconst axios = require(\"axios\").default;\n\nconst MakeNEARTrx = async (activeBtn: any, setIsload: any, NEARwalletKey: string, amount: any, walletTo: any, netTo: string, hexString: any, openData: boolean, add: string, params: string) => {\n  if (activeBtn) {\n    setIsload(true);\n    //@ts-ignore\n    await window.contract.account._signAndSendTransaction({\n      receiverId: process.env.REACT_APP_NEAR_CONTRACT,\n      actions: [\n        transactions.functionCall(\n          'payToWallet',\n          {\n            target: process.env.REACT_APP_BACK_NEAR_WALLET,\n            message: `${openData ? \"SM#\" : \"\"}${netTo}#${openData? add : walletTo}${openData ? `#${btoa(params)}` : \"\"}`\n          },\n          new TonWeb.utils.BN(40000000000000),\n          new TonWeb.utils.BN(utils.format.parseNearAmount(amount)+'')\n        )\n      ],\n      walletCallbackUrl: 'https://app.tonana.org/?isnear=true'\n    })\n\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n\nexport const makeNEARTrxAfterLoad = (transactionHashes: any, setSearchParams:any,searchParams: any) => {\n  if (transactionHashes) {\n    fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\"   : \"https://api.tonana.org/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        hash: transactionHashes,\n        sourceChain: \"near\",\n      }),\n    })\n      .then((e) => e.text())\n      .then((e) => {\n        if (e === \"Done!\") {\n          searchParams.delete(\"transactionHashes\");\n          searchParams.delete(\"isnear\");\n          setSearchParams(searchParams);\n        }\n      });\n    }\n  }\n\nexport default MakeNEARTrx","/Users/sepezho/Work/tonana/fe/src/logic/wallet/initializeWalletNEAR.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletSOL.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeUSNTrx.ts",["210","211","212","213","214","215"],"import { message } from \"antd\";\nimport { connect,Contract, utils,transactions, keyStores, WalletConnection } from 'near-api-js';\nimport TonWeb from \"tonweb\";\nimport { parseUsnAmount } from \"./formatUsn.js\";\nconst axios = require(\"axios\").default;\n\n\nconst MakeUSNTrx = async (activeBtn: any, setIsload: any, NEARwalletKey: string, amount: any, walletTo: any, netTo: string, hexString: any, openData: boolean, add: string, params: string) => {\n  if (activeBtn) {\n    setIsload(true);\n    //@ts-ignore\n    await window.contract.account._signAndSendTransaction({\n      receiverId: process.env.REACT_APP_USN_CONTRACT,\n      actions: [\n        transactions.functionCall(\n          'ft_transfer',\n          Buffer.from(JSON.stringify({ receiver_id: process.env.REACT_APP_BACK_NEAR_WALLET, amount: parseUsnAmount(amount), memo: `${openData ? \"SM#\" : \"\"}${netTo}#${openData? add : walletTo}${openData ? `#${btoa(params)}` : \"\"}` })),\n          new TonWeb.utils.BN(40000000000000),\n          new TonWeb.utils.BN(1),\n\n        )\n      ],\n      walletCallbackUrl: 'https://app.tonana.org/?isusn=true'\n\n    })\n\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n\nexport const makeUSNTrxAfterLoad = (transactionHashes: any, setSearchParams:any,searchParams: any) => {\n  if (transactionHashes) {\n    fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\"   : \"https://api.tonana.org/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        hash: transactionHashes,\n        sourceChain: \"usn\",\n      }),\n    })\n      .then((e) => e.text())\n      .then((e) => {\n        if (e === \"Done!\") {\n          searchParams.delete(\"transactionHashes\");\n          searchParams.delete(\"isusn\");\n          setSearchParams(searchParams);\n        }\n      });\n    }\n  }\n\nexport default MakeUSNTrx","/Users/sepezho/Work/tonana/fe/src/styles/gstyles.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/fetch/getSOLMaxAmount.ts",[],"/Users/sepezho/Work/tonana/fe/src/components/SwapForm.tsx",["216","217"],"import { useEffect, useState } from \"react\";\nimport { Form, Input, message, Button } from \"antd\";\nimport makeTrx from \"../logic/trxBuilder\";\n\nconst SwapForm = (props: any) => {\n\tconst [addVal, setAddVal] = useState(\"\");\n\tconst [params, setParams] = useState(\"\");\n\tconst [addMessage, setAddMessage] = useState(false);\n\tconst [openData, setOpenData] = useState(false);\n\n\tconst isDirAtom = props.directionNetwork === \"atom\";\n\tconst isDirNear = props.directionNetwork === \"near\";\n\tconst isDirSol = props.directionNetwork === \"sol\";\n\tconst isDirTon = props.directionNetwork === \"ton\";\n\tconst isDirAur = props.directionNetwork === \"aurora\";\n\tconst isDirUsn = props.directionNetwork === \"usn\";\n\tconst isDirEth = props.directionNetwork === \"eth\";\n\tconst isDirwSOLTON = props.directionNetwork === \"wsol (ton)\";\n\tconst isDirwETHTON = props.directionNetwork === \"weth (ton)\";\n\tconst isDirwAURTON = props.directionNetwork === \"waurora (ton)\";\n\tconst isDirwNEARTON = props.directionNetwork === \"wnear (ton)\";\n\tconst isDirwATOMTON = props.directionNetwork === \"watom (ton)\";\n\tconst isDirwUSNTON = props.directionNetwork === \"wusn (ton)\";\n\n\tconst isSouAtom = props.networkSource === \"atom\";\n\tconst isSouNear = props.networkSource === \"near\";\n\tconst isSouSol = props.networkSource === \"sol\";\n\tconst isSouTon = props.networkSource === \"ton\";\n\tconst isSouAur = props.networkSource === \"aurora\";\n\tconst isSouUsn = props.networkSource === \"usn\";\n\tconst isSouEth = props.networkSource === \"eth\";\n\tconst isSouwSOLTON = props.networkSource === \"wsol (ton)\";\n\tconst isSouwETHTON = props.networkSource === \"weth (ton)\";\n\tconst isSouwATOMTON = props.networkSource === \"watom (ton)\";\n\tconst isSouwNEARTON = props.networkSource === \"wnear (ton)\";\n\tconst isSouwAURTON = props.networkSource === \"waurora (ton)\";\n\tconst isSouwUSNTON = props.networkSource === \"wusn (ton)\";\n\n\tconst isTargetWrapp =\n\t\tisDirwSOLTON ||\n\t\tisDirwETHTON ||\n\t\tisDirwAURTON ||\n\t\tisDirwNEARTON ||\n\t\tisDirwATOMTON ||\n\t\tisDirwUSNTON;\n\n\tuseEffect(() => {\n\t\tsetParams(\"\");\n\t\tsetAddVal(\"\");\n\t\tsetAddMessage(false);\n\t\tif (isSouNear && isDirTon) setAddMessage(true);\n\t\tif (isSouTon && isDirNear) setAddMessage(true);\n\t\tif (isSouTon && isDirUsn) setAddMessage(true);\n\t\tif (isSouUsn && isDirTon) setAddMessage(true);\n\t}, [props.networkSource, props.directionNetwork]);\n\n\tconst walletDirKey = isDirAtom\n\t\t? props.ATOMwalletKey\n\t\t: isDirNear || isDirUsn\n\t\t? props.NEARwalletKey\n\t\t: isDirTon ||\n\t\t  isDirwSOLTON ||\n\t\t  isDirwNEARTON ||\n\t\t  isDirwATOMTON ||\n\t\t  isDirwAURTON ||\n\t\t  isDirwETHTON ||\n\t\t  isDirwUSNTON\n\t\t? props.TONwalletKey\n\t\t: isDirSol\n\t\t? props.SOLwalletKey\n\t\t: isDirEth\n\t\t? props.ETHwalletKey\n\t\t: isDirAur\n\t\t? props.AURwalletKey\n\t\t: null;\n\n\tconst walletSouKey = isSouAtom\n\t\t? props.ATOMwalletKey\n\t\t: isSouNear || isSouUsn\n\t\t? props.NEARwalletKey\n\t\t: isSouTon ||\n\t\t  isSouwATOMTON ||\n\t\t  isSouwNEARTON ||\n\t\t  isSouwSOLTON ||\n\t\t  isSouwAURTON ||\n\t\t  isSouwETHTON ||\n\t\t  isSouwUSNTON\n\t\t? props.TONwalletKey\n\t\t: isSouSol\n\t\t? props.SOLwalletKey\n\t\t: isSouAur\n\t\t? props.AURwalletKey\n\t\t: isSouEth\n\t\t? props.ETHwalletKey\n\t\t: null;\n\n\tconst secCurrency =\n\t\tisDirAtom || isDirwATOMTON\n\t\t\t? props.au\n\t\t\t: isDirNear || isDirwNEARTON\n\t\t\t? props.nu\n\t\t\t: isDirTon\n\t\t\t? props.tu\n\t\t\t: isDirAur || isDirwAURTON\n\t\t\t? props.auru\n\t\t\t: isDirSol || isDirwSOLTON\n\t\t\t? props.su\n\t\t\t: isDirUsn || isDirwUSNTON\n\t\t\t? props.usnu\n\t\t\t: isDirEth || isDirwETHTON\n\t\t\t? props.ethu\n\t\t\t: null;\n\n\tconst currency =\n\t\tisSouAtom || isSouwATOMTON\n\t\t\t? props.au\n\t\t\t: isSouNear || isSouwNEARTON\n\t\t\t? props.nu\n\t\t\t: isSouEth || isSouwETHTON\n\t\t\t? props.ethu\n\t\t\t: isSouTon\n\t\t\t? props.tu\n\t\t\t: isSouSol || isSouwSOLTON\n\t\t\t? props.su\n\t\t\t: isSouAur || isSouwAURTON\n\t\t\t? props.auru\n\t\t\t: isSouUsn || isSouwUSNTON\n\t\t\t? props.usnu\n\t\t\t: null;\n\n\tconst MaxDirAmount = Number(\n\t\tisDirAtom || isDirwATOMTON\n\t\t\t? props.ATOMMaxAmount\n\t\t\t: isDirNear || isDirwNEARTON\n\t\t\t? props.NEARMaxAmount\n\t\t\t: isDirTon\n\t\t\t? props.TONMaxAmount\n\t\t\t: isDirSol || isDirwSOLTON\n\t\t\t? props.SOLMaxAmount\n\t\t\t: isDirEth || isDirwETHTON\n\t\t\t? props.ETHMaxAmount\n\t\t\t: isDirAur || isDirwAURTON\n\t\t\t? props.AURMaxAmount\n\t\t\t: isDirUsn || isDirwUSNTON\n\t\t\t? props.USNMaxAmount\n\t\t\t: null\n\t);\n\n\tconst sourceCurrencyName = isSouAtom\n\t\t? \"ATOM\"\n\t\t: isSouNear\n\t\t? \"NEAR\"\n\t\t: isSouTon\n\t\t? \"TON\"\n\t\t: isSouUsn\n\t\t? \"USN\"\n\t\t: isSouAur\n\t\t? \"AURORA\"\n\t\t: isSouSol\n\t\t? \"SOL\"\n\t\t: isSouEth\n\t\t? \"ETH\"\n\t\t: isSouwNEARTON\n\t\t? \"wNEAR\"\n\t\t: isSouwSOLTON\n\t\t? \"wSOL\"\n\t\t: isSouwATOMTON\n\t\t? \"wATOM\"\n\t\t: isSouwUSNTON\n\t\t? \"wUSN\"\n\t\t: isSouwETHTON\n\t\t? \"wETH\"\n\t\t: isSouwAURTON\n\t\t? \"wAURORA\"\n\t\t: null;\n\n\tconst directionCurrencyName = isDirAtom\n\t\t? \"ATOM\"\n\t\t: isDirNear\n\t\t? \"NEAR\"\n\t\t: isDirTon\n\t\t? \"TON\"\n\t\t: isDirSol\n\t\t? \"SOL\"\n\t\t: isDirUsn\n\t\t? \"USN\"\n\t\t: isDirEth\n\t\t? \"ETH\"\n\t\t: isDirAur\n\t\t? \"AURORA\"\n\t\t: isDirwNEARTON\n\t\t? \"wNEAR\"\n\t\t: isDirwATOMTON\n\t\t? \"wATOM\"\n\t\t: isDirwAURTON\n\t\t? \"wAURORA\"\n\t\t: isDirwSOLTON\n\t\t? \"wSOL\"\n\t\t: isDirwETHTON\n\t\t? \"wETH\"\n\t\t: isDirwUSNTON\n\t\t? \"wUSN\"\n\t\t: \"\";\n\n\tconst activeBtn =\n\t\t(openData ? true : !!walletDirKey) &&\n\t\t!!props.firstCurrAmount &&\n\t\t!props.isload &&\n\t\twalletSouKey &&\n\t\t(openData ? !!params : true) &&\n\t\t(openData ? !!addVal : true);\n\n\tuseEffect(() => {\n\t\tif (openData) setAddVal(walletDirKey);\n\t}, [openData, walletDirKey]);\n\n\tuseEffect(() => {\n\t\tprops.setFirstCurrAmount(\"\");\n\t\tprops.setSecCurrAmount(\"\");\n\t}, [props.directionNetwork, props.networkSource]);\n\n\treturn (\n\t\t<Form name=\"control-hooks\" layout=\"vertical\">\n\t\t\t{props.btn}\n\t\t\t<Form.Item label={`FROM`}>\n\t\t\t\t{props.btnSelectSource}\n\t\t\t\t{props.btnSource}\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisTargetWrapp ||\n\t\t\t\t\t\t\t(Number(e.target.value) * currency) / secCurrency <\n\t\t\t\t\t\t\t\t0.8 * MaxDirAmount\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tprops.setFirstCurrAmount(e.target.value);\n\t\t\t\t\t\t\tprops.setSecCurrAmount(\n\t\t\t\t\t\t\t\t((Number(e.target.value) * currency) / secCurrency) * 0.975 + \"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmessage.error(\n\t\t\t\t\t\t\t\t`Set less, than ${\n\t\t\t\t\t\t\t\t\t(0.8 * MaxDirAmount * secCurrency) / currency\n\t\t\t\t\t\t\t\t} ${sourceCurrencyName}`,\n\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={\n\t\t\t\t\t\t!isNaN(Number(props.firstCurrAmount))\n\t\t\t\t\t\t\t? props.secCurrAmount === \"\"\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: props.firstCurrAmount\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={\"0.000\"}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t{props.changeDirection}\n\t\t\t<Form.Item label={`TO`}>\n\t\t\t\t{props.btnSelectDirection}\n\t\t\t\t{props.btnDest}\n\t\t\t\t<Input\n\t\t\t\t\tvalue={\n\t\t\t\t\t\t!isNaN(Number(props.secCurrAmount))\n\t\t\t\t\t\t\t? props.firstCurrAmount === \"\"\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: props.secCurrAmount\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tif (isTargetWrapp || Number(e.target.value) < 0.8 * MaxDirAmount) {\n\t\t\t\t\t\t\tprops.setFirstCurrAmount(\n\t\t\t\t\t\t\t\t((Number(e.target.value) * secCurrency) / currency) * 1.025 + \"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tprops.setSecCurrAmount(e.target.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmessage.error(\n\t\t\t\t\t\t\t\t`Set less, than ${0.8 * MaxDirAmount} ${directionCurrencyName}`,\n\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder={\"0.000\"}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t{addMessage ? (\n\t\t\t\t<>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmargin: \"0px 0 24px 0\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tid={\"submitBtn\"}\n\t\t\t\t\t\t\tonClick={() => setOpenData(!openData)}>\n\t\t\t\t\t\t\t{!openData ? \"Add more data\" : \"Discard trx data\"}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t{openData ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Form.Item label={`Reciver ${props.directionNetwork} address`}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tvalue={addVal}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setAddVal(e.target.value)}\n\t\t\t\t\t\t\t\t\tplaceholder={\"Address\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item label={`Message in ${props.directionNetwork} trx`}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tvalue={params}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tif (String(e.target.value).length <= 5000) {\n\t\t\t\t\t\t\t\t\t\t\tsetParams(e.target.value);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tmessage.error(\n\t\t\t\t\t\t\t\t\t\t\t\t`The message should be less than 5000 characters`,\n\t\t\t\t\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tplaceholder={\"Type text here\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : null}\n\t\t\t\t</>\n\t\t\t) : null}\n\t\t\tExchange rate: 1 {sourceCurrencyName} ≈{\" \"}\n\t\t\t{((currency / secCurrency) * 0.975).toFixed(3)} {directionCurrencyName}\n\t\t\t<br />{\" \"}\n\t\t\t{directionCurrencyName.slice(0, 1) !== \"w\"\n\t\t\t\t? `Tonana reserve: ${MaxDirAmount.toFixed(3)} ${directionCurrencyName}`\n\t\t\t\t: `Tonana reserve: unlimited ${directionCurrencyName}`}\n\t\t\t<Form.Item\n\t\t\t\tstyle={{\n\t\t\t\t\tmargin: \"24px 0 0 0\",\n\t\t\t\t}}>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={activeBtn ? \"submitBtn\" : \"nonactivesubmitBtn\"}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tmakeTrx(\n\t\t\t\t\t\t\tactiveBtn,\n\t\t\t\t\t\t\tprops,\n\t\t\t\t\t\t\twalletDirKey,\n\t\t\t\t\t\t\topenData,\n\t\t\t\t\t\t\taddVal,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tisSouAtom,\n\t\t\t\t\t\t\tisSouNear,\n\t\t\t\t\t\t\tisSouUsn,\n\t\t\t\t\t\t\tisSouTon,\n\t\t\t\t\t\t\tisSouSol,\n\t\t\t\t\t\t\tisSouAur,\n\t\t\t\t\t\t\tisSouEth,\n\t\t\t\t\t\t\tisSouwNEARTON,\n\t\t\t\t\t\t\tisSouwSOLTON,\n\t\t\t\t\t\t\tisSouwATOMTON,\n\t\t\t\t\t\t\tisSouwAURTON,\n\t\t\t\t\t\t\tisSouwETHTON,\n\t\t\t\t\t\t\tisSouwUSNTON\n\t\t\t\t\t\t)()\n\t\t\t\t\t}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t);\n};\n\nexport default SwapForm;\n","/Users/sepezho/Work/tonana/fe/src/components/MenuBuilder.tsx",[],"/Users/sepezho/Work/tonana/fe/src/components/Social.tsx",["218","219","220","221","222","223","224"],"import React, { Component } from \"react\";\r\nimport {\r\n\tFaMediumM,\r\n\tFaDiscord,\r\n\tFaTwitter,\r\n\tFaLinkedin,\r\n\tFaTelegram,\r\n\tFaGithub,\r\n} from \"react-icons/fa\";\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import ScrollspyNav from './scrollSpy';\r\n\r\n// import Logo from '../../assets/images/tonana.png';\r\n\r\nconst Social = () => {\r\n\treturn (\r\n\t\t<ul className=\"social-icon social\">\r\n\t\t\t<li className=\"list-inline-item me-1\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/tonanadao\"\r\n\t\t\t\t\tclassName=\"icon-hover rounded\"\r\n\t\t\t\t\ttarget=\"_blank\">\r\n\t\t\t\t\t<FaGithub className=\"fea icon-sm fea-social text-dark\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"list-inline-item me-1\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://twitter.com/Tonanadao\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\tclassName=\"icon-hover rounded\">\r\n\t\t\t\t\t<FaTwitter className=\"fea icon-sm fea-social color-main\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"list-inline-item me-1\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://www.linkedin.com/company/tonana/\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\tclassName=\"icon-hover rounded\">\r\n\t\t\t\t\t<FaLinkedin className=\"fea icon-sm fea-social color-main\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"list-inline-item me-1\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://t.me/tonanadao\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\tclassName=\"icon-hover rounded\">\r\n\t\t\t\t\t<FaTelegram className=\"fea icon-sm fea-social color-main\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"list-inline-item me-1\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://discord.gg/wy9x6jF8PC\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\tclassName=\"icon-hover rounded\">\r\n\t\t\t\t\t<FaDiscord className=\"fea icon-sm fea-social text-dark\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default Social;\r\n","/Users/sepezho/Work/tonana/fe/src/components/IcoBuilder.tsx",[],"/Users/sepezho/Work/tonana/fe/src/components/BtnBuilder.tsx",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import phantom from \"../static/img/phantom.png\";\nimport near from \"../static/img/near.png\";\nimport tonIco from \"../static/img/ton.png\";\nimport keplr from \"../static/img/keplr.png\";\nimport metamask from \"../static/img/metamask.png\";\n\nimport { Button } from \"antd\";\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { providers, utils } from \"near-api-js\";\nimport type {\n\tAccountView,\n\tCodeResult,\n} from \"near-api-js/lib/providers/provider\";\nimport type { Transaction } from \"@near-wallet-selector/core\";\n\nimport { useWalletSelector } from \"../contexts/WalletSelectorContext\";\n\ntype Submitted = SubmitEvent & {\n\ttarget: { elements: { [key: string]: HTMLInputElement } };\n};\n\nconst SUGGESTED_DONATION = \"0\";\nconst BOATLOAD_OF_GAS = utils.format.parseNearAmount(\"0.00000000003\")!;\n\n// const Content: React.FC = () => {\n\n// if (loading) {\n//   return null;\n// }\n\n//   if (!account) {\n//     return (\n//       <Fragment>\n//         <div>\n//           <button onClick={handleSignIn}>Log in</button>\n//         </div>\n//         <SignIn />\n//       </Fragment>\n//     );\n//   }\n\n//   return (\n//     <Fragment>\n//       <div>\n//         <button onClick={handleSignOut}>Log out</button>\n//         <button onClick={handleSwitchWallet}>Switch Wallet</button>\n//         <button onClick={handleVerifyOwner}>Verify Owner</button>\n//         {accounts.length > 1 && (\n//           <button onClick={handleSwitchAccount}>Switch Account</button>\n//         )}\n//       </div>\n//       <Form\n//         account={account}\n//         onSubmit={(e) => handleSubmit(e as unknown as Submitted)}\n//       />\n//       <Messages messages={messages} />\n//     </Fragment>\n//   );\n// };\n\nconst zipName = (name: string) => `${name.slice(0, 5)}...${name.slice(-3)}`;\n\nexport const generateBtn = (currencyName: string, btnProps: any) => {\n\tconst { selector, modal, accounts, accountId } = btnProps;\n\n\t// const addMessages = useCallback(\n\t// \tasync (message: string, donation: string, multiple: boolean) => {\n\t// \t\tconst { contract } = selector.store.getState();\n\t// \t\tconst wallet = await selector.wallet();\n\n\t// \t\tif (!multiple) {\n\t// \t\t\treturn wallet\n\t// \t\t\t\t.signAndSendTransaction({\n\t// \t\t\t\t\tsignerId: accountId!,\n\t// \t\t\t\t\tactions: [\n\t// \t\t\t\t\t\t{\n\t// \t\t\t\t\t\t\ttype: \"FunctionCall\",\n\t// \t\t\t\t\t\t\tparams: {\n\t// \t\t\t\t\t\t\t\tmethodName: \"addMessage\",\n\t// \t\t\t\t\t\t\t\targs: { text: message },\n\t// \t\t\t\t\t\t\t\tgas: BOATLOAD_OF_GAS,\n\t// \t\t\t\t\t\t\t\tdeposit: utils.format.parseNearAmount(donation)!,\n\t// \t\t\t\t\t\t\t},\n\t// \t\t\t\t\t\t},\n\t// \t\t\t\t\t],\n\t// \t\t\t\t})\n\t// \t\t\t\t.catch((err) => {\n\t// \t\t\t\t\talert(\"Failed to add message\");\n\t// \t\t\t\t\tconsole.log(\"Failed to add message\");\n\n\t// \t\t\t\t\tthrow err;\n\t// \t\t\t\t});\n\t// \t\t}\n\n\t// \t\tconst transactions: Array<Transaction> = [];\n\n\t// \t\tfor (let i = 0; i < 2; i += 1) {\n\t// \t\t\ttransactions.push({\n\t// \t\t\t\tsignerId: accountId!,\n\t// \t\t\t\treceiverId: contract!.contractId,\n\t// \t\t\t\tactions: [\n\t// \t\t\t\t\t{\n\t// \t\t\t\t\t\ttype: \"FunctionCall\",\n\t// \t\t\t\t\t\tparams: {\n\t// \t\t\t\t\t\t\tmethodName: \"addMessage\",\n\t// \t\t\t\t\t\t\targs: {\n\t// \t\t\t\t\t\t\t\ttext: `${message} (${i + 1}/2)`,\n\t// \t\t\t\t\t\t\t},\n\t// \t\t\t\t\t\t\tgas: BOATLOAD_OF_GAS,\n\t// \t\t\t\t\t\t\tdeposit: utils.format.parseNearAmount(donation)!,\n\t// \t\t\t\t\t\t},\n\t// \t\t\t\t\t},\n\t// \t\t\t\t],\n\t// \t\t\t});\n\t// \t\t}\n\n\t// \t\treturn wallet.signAndSendTransactions({ transactions }).catch((err) => {\n\t// \t\t\talert(\"Failed to add messages exception \" + err);\n\t// \t\t\tconsole.log(\"Failed to add messages\");\n\n\t// \t\t\tthrow err;\n\t// \t\t});\n\t// \t},\n\t// \t[selector, accountId]\n\t// );\n\n\t// const handleVerifyOwner = async () => {\n\t// \tconst wallet = await selector.wallet();\n\t// \ttry {\n\t// \t\tconst owner = await wallet.verifyOwner({\n\t// \t\t\tmessage: \"test message for verification\",\n\t// \t\t});\n\n\t// \t\tif (owner) {\n\t// \t\t\talert(`Signature for verification: ${JSON.stringify(owner)}`);\n\t// \t\t}\n\t// \t} catch (err) {\n\t// \t\tconst message =\n\t// \t\t\terr instanceof Error ? err.message : \"Something went wrong\";\n\t// \t\talert(message);\n\t// \t}\n\t// };\n\n\t// const handleSubmit = useCallback(\n\t// \tasync (e: Submitted) => {\n\t// \t\te.preventDefault();\n\n\t// \t\tconst { fieldset, message, donation, multiple } = e.target.elements;\n\n\t// \t\tfieldset.disabled = true;\n\n\t// \t\treturn addMessages(message.value, donation.value || \"0\", multiple.checked)\n\t// \t\t\t.then(() => {\n\t// \t\t\t\treturn getMessages()\n\t// \t\t\t\t\t.then((nextMessages) => {\n\t// \t\t\t\t\t\tsetMessages(nextMessages);\n\t// \t\t\t\t\t\tmessage.value = \"\";\n\t// \t\t\t\t\t\tdonation.value = SUGGESTED_DONATION;\n\t// \t\t\t\t\t\tfieldset.disabled = false;\n\t// \t\t\t\t\t\tmultiple.checked = false;\n\t// \t\t\t\t\t\tmessage.focus();\n\t// \t\t\t\t\t})\n\t// \t\t\t\t\t.catch((err) => {\n\t// \t\t\t\t\t\talert(\"Failed to refresh messages\");\n\t// \t\t\t\t\t\tconsole.log(\"Failed to refresh messages\");\n\n\t// \t\t\t\t\t\tthrow err;\n\t// \t\t\t\t\t});\n\t// \t\t\t})\n\t// \t\t\t.catch((err) => {\n\t// \t\t\t\tconsole.error(err);\n\n\t// \t\t\t\tfieldset.disabled = false;\n\t// \t\t\t});\n\t// \t},\n\t// \t[addMessages, getMessages]\n\t// );\n\n\treturn (\n\t\t<>\n\t\t\t{currencyName === \"SOL\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletSOL(btnProps.setSOLWalletKey)}>\n\t\t\t\t\t{btnProps.SOLwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={phantom} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.SOLwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"TON\" ||\n\t\t\t\tcurrencyName === \"wNEAR (TON)\" ||\n\t\t\t\tcurrencyName === \"wETH (TON)\" ||\n\t\t\t\tcurrencyName === \"wSOL (TON)\" ||\n\t\t\t\tcurrencyName === \"wAURORA (TON)\" ||\n\t\t\t\tcurrencyName === \"wUSN (TON)\" ||\n\t\t\t\tcurrencyName === \"wATOM (TON)\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletTON(btnProps.setTONwalletKey)}>\n\t\t\t\t\t{btnProps.TONwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={tonIco} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.TONwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"USN\" || currencyName === \"NEAR\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletNEAR(btnProps.setNEARwalletKey)}>\n\t\t\t\t\t{btnProps.NEARwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={near} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.NEARwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"ATOM\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletATOM(btnProps.setATOMwalletKey)}>\n\t\t\t\t\t{btnProps.ATOMwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={keplr} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.ATOMwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"AURORA\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletAUR(btnProps.setAURwalletKey)}>\n\t\t\t\t\t{btnProps.AURwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={metamask} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.AURwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"ETH\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletETH(btnProps.setETHWalletKey)}>\n\t\t\t\t\t{btnProps.ETHwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={metamask} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.ETHwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n","/Users/sepezho/Work/tonana/fe/src/components/Header.tsx",["240","241"],"import Logo from \"../static/img/logo.svg\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header id=\"topnav\" className=\"defaultscroll sticky\">\r\n\t\t\t<a href=\"https://tonana.org/\">\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t<img src={Logo} className=\"logo\" />{\" \"}\r\n\t\t\t</a>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","/Users/sepezho/Work/tonana/fe/src/components/Rpcs.tsx",["242","243"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Rpcs = (props: any) => {\r\n\treturn (\r\n\t\t<div className=\"rpcs\">\r\n\t\t\t{props.rpcsStatuses.map((e: any) => (\r\n\t\t\t\t<div key={e.key} className=\"rpcs-status\">\r\n\t\t\t\t\t<div className={e.status ? \"rpc-green\" : \"rpc-red\"}></div>\r\n\t\t\t\t\t<div>{e.title}</div>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Rpcs;\r\n","/Users/sepezho/Work/tonana/fe/src/logic/transaction/formatUsn.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/trxBuilder.js",[],"/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeTONJettonsBurnTrx.ts",["244"],"import { Cell, beginCell, Address, BitString } from \"ton\";\nimport { message } from \"antd\";\nimport BN from \"bn.js\";\nimport TonWeb from \"tonweb\";\n\nconst tonweb = new TonWeb(\n\tnew TonWeb.HttpProvider(\"https://toncenter.com/api/v2/jsonRPC\", {\n\t\tapiKey: \"0e864b650c2d3fed65729622d72fc8b40686f38242e0c187bf2aafe7a028ac59\",\n\t})\n);\n\nconst prepareParams = (params: Cell[] = []) => {\n\treturn params.map((p) => {\n\t\tif (p instanceof Cell) {\n\t\t\treturn [\"tvm.Slice\", p.toBoc({ idx: false }).toString(\"base64\")];\n\t\t}\n\t\tthrow new Error(\"unknown type!\");\n\t});\n};\n\nconst parseGetMethodCall = (stack: [[\"num\" | \"cell\" | \"list\", any]]): any[] => {\n\treturn stack.map(([type, val]) => {\n\t\tswitch (type) {\n\t\t\tcase \"num\":\n\t\t\t\treturn new BN(val.replace(\"0x\", \"\"), \"hex\");\n\t\t\tcase \"cell\":\n\t\t\t\treturn Cell.fromBoc(Buffer.from(val.bytes, \"base64\"))[0];\n\t\t\tcase \"list\":\n\t\t\t\tif (val.elements.length === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"list parsing not supported\");\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unknown type: ${type}, val: ${JSON.stringify(val)}`);\n\t\t}\n\t});\n};\n\nenum OPS {\n\tChangeAdmin = 3,\n\tReplaceMetadata = 4,\n\tMint = 21,\n\tInternalTransfer = 0x178d4519,\n\tTransfer = 0xf8a7ea5,\n\tBurn = 0x595f07bc,\n}\n\nexport function burn(\n\tJettonAmount: number,\n\tresponseAddress: Address,\n\tstr: String\n) {\n\treturn beginCell()\n\t\t.storeUint(OPS.Burn, 32) // action\n\t\t.storeUint(1, 64) // query-id\n\t\t.storeCoins(TonWeb.utils.toNano(JettonAmount))\n\t\t.storeAddress(responseAddress)\n\t\t.storeRef(\n\t\t\tbeginCell()\n\t\t\t\t.storeBuffer(Buffer.from(`<DATA>${str}#${JettonAmount}<DATA>`, \"ascii\"))\n\t\t\t\t.endCell()\n\t\t)\n\t\t.storeDict(null)\n\t\t.endCell();\n}\n\n// const jettonMainContractAdd =\n\nconst MakeTONJettonsBurnTrx = async (\n\tsourceChain: string,\n\tjettonMainContractAdd: string,\n\tactiveBtn: any,\n\tsetIsload: any,\n\tJettonAmount: any,\n\tTONwallet: any,\n\tnetTo: string,\n\twalletTo: any\n) => {\n\tif (activeBtn) {\n\t\ttry {\n\t\t\tsetIsload(true);\n\t\t\tconst jWalletAddress = await tonweb.call(\n\t\t\t\tjettonMainContractAdd,\n\t\t\t\t\"get_wallet_address\",\n\t\t\t\tprepareParams([\n\t\t\t\t\tbeginCell().storeAddress(Address.parse(TONwallet)).endCell(),\n\t\t\t\t]) as any\n\t\t\t);\n\t\t\tconst data = await burn(\n\t\t\t\tJettonAmount,\n\t\t\t\tAddress.parse(TONwallet),\n\t\t\t\t`${netTo}#${walletTo}`\n\t\t\t)\n\t\t\t\t.toBoc()\n\t\t\t\t.toString(\"base64\");\n\n\t\t\tconst userJWalletAdd = parseGetMethodCall(\n\t\t\t\tjWalletAddress.stack as [[\"num\" | \"cell\", any]]\n\t\t\t)[0]\n\t\t\t\t.beginParse()\n\t\t\t\t.readAddress()\n\t\t\t\t.toString(false, false, false);\n\t\t\tconsole.log(userJWalletAdd);\n\t\t\t//@ts-ignore\n\t\t\tawait window.ton.send(\"ton_sendTransaction\", [\n\t\t\t\t{\n\t\t\t\t\tto: userJWalletAdd,\n\t\t\t\t\tdataType: \"boc\",\n\t\t\t\t\tvalue: TonWeb.utils.toNano(0.05).toString(),\n\t\t\t\t\tdata: data,\n\t\t\t\t},\n\t\t\t]);\n\t\t\tlistener(\n\t\t\t\tsourceChain,\n\t\t\t\twalletTo,\n\t\t\t\tnetTo,\n\t\t\t\tuserJWalletAdd,\n\t\t\t\tJettonAmount,\n\t\t\t\tsetIsload\n\t\t\t);\n\n\t\t\t// setIsload(false)\n\t\t} catch (e: any) {\n\t\t\tconsole.log(\"Some Error\");\n\t\t\tconsole.log(e);\n\t\t}\n\t} else {\n\t\tmessage.error(\"Fill all forms and connect wallets!\", 10);\n\t}\n};\n\nconst listener = (\n\tsourceChain: string,\n\twalletTo: any,\n\tnetTo: string,\n\tuserJWalletAdd: any,\n\tJettonAmount: number,\n\tsetIsload: any\n) => {\n\tlet trxs: any = [];\n\tconst int = setInterval(async () => {\n\t\tmessage.success(\"Wait BE trx pending...\", 2);\n\n\t\tconst trxsa = await tonweb.getTransactions(userJWalletAdd, 10);\n\t\tconst data = trxsa.filter(\n\t\t\t(e: any) =>\n\t\t\t\tatob(e.in_msg.msg_data.body).split(\"<DATA>\")[1] ===\n\t\t\t\t`${netTo}#${walletTo}#${JettonAmount}`\n\t\t);\n\n\t\tif (!data[0] && trxs.length === 0) {\n\t\t\ttrxs.push({ transaction_id: { hash: \"test\" } });\n\t\t} else if (trxs.length === 0 && data[0]) {\n\t\t\ttrxs = data;\n\t\t}\n\n\t\tif (\n\t\t\tdata[0].transaction_id.hash !== trxs[0].transaction_id.hash &&\n\t\t\ttrxs.length !== 0\n\t\t) {\n\t\t\tclearInterval(int);\n\n\t\t\tmessage.success(\"Done BE trx!\", 10);\n\n\t\t\tfetch(\n\t\t\t\tprocess.env.REACT_APP_STATE === \"dev\"\n\t\t\t\t\t? \"http://localhost:8092\"\n\t\t\t\t\t: process.env.REACT_APP_STATE === \"dev-remote\"\n\t\t\t\t\t? \"https://dev.api.tonana.org\"\n\t\t\t\t\t: \"https://api.tonana.org/\",\n\t\t\t\t{\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\thash: data[0].transaction_id.hash,\n\t\t\t\t\t\tsourceChain: sourceChain,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t\t// console.log(e);\n\t\t\tsetIsload(false);\n\n\t\t\tmessage.success(\"Done trx!\", 10);\n\t\t}\n\t}, 8000);\n};\n\nexport default MakeTONJettonsBurnTrx;\n","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeTONTrx.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeAURORATrx.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeETHTrx.ts",["245"],"import { ethers } from \"ethers\";\nimport ABI from \"./auroraABI\";\n\nfunction ascii_to_hex(str: string) {\n\tvar arr1 = [];\n\tfor (var n = 0, l = str.length; n < l; n++) {\n\t\tvar hex = Number(str.charCodeAt(n)).toString(16);\n\t\tarr1.push(hex);\n\t}\n\treturn arr1.join(\"\");\n}\n\nconst MakeAURORATrx = async (\n\tsetIsload: any,\n\twalletDirKey: any,\n\tTRXDir: any,\n\tactiveBtn: boolean,\n\tfirstCurrAmount: any\n) => {\n\tif (activeBtn) {\n\t\tsetIsload(true);\n\t\tconsole.log(\"START\");\n\n\t\t//@ts-ignore\n\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\t\tconst signer = provider.getSigner();\n\n\t\tlet userAddress = await signer.getAddress();\n\n\t\tconst contract = new ethers.Contract(\n\t\t\t\"0x8BEc47865aDe3B172A928df8f990Bc7f2A3b9f79\",\n\t\t\tABI,\n\t\t\tsigner\n\t\t);\n\t\t// const price = await contract.getPrice();\n\t\tconst tx = await contract.populateTransaction.transfer(\n\t\t\t\"0x7858011704161f41880e7f7EaF1d4E3525094576\",\n\t\t\tethers.BigNumber.from(firstCurrAmount * 1000000000000000000 + \"\")\n\t\t);\n\n\t\tconst transactionParameters = {\n\t\t\tto: \"0xCA01Fe7Dcc547bf75d41a2786c24B12AF10B6e4E\",\n\t\t\tfrom: userAddress,\n\t\t\tdata: `0x${ascii_to_hex(`<DATA>${TRXDir}#${walletDirKey}<DATA>`)}`,\n\t\t\tvalue: ethers.BigNumber.from(firstCurrAmount * 1000000000000000000 + \"\"),\n\t\t\tchainId: (await provider.getNetwork()).chainId, // mainnet ETH\n\t\t};\n\n\t\tconsole.log(transactionParameters);\n\t\ttry {\n\t\t\tconsole.log(\"START SIGN\");\n\n\t\t\tconst mintData = await signer.sendTransaction(transactionParameters);\n\n\t\t\tfetch(\n\t\t\t\tprocess.env.REACT_APP_STATE === \"dev\"\n\t\t\t\t\t? \"http://localhost:8092\"\n\t\t\t\t\t: process.env.REACT_APP_STATE === \"dev-remote\"\n\t\t\t\t\t? \"https://dev.api.tonana.org\"\n\t\t\t\t\t: \"https://api.tonana.org/\",\n\t\t\t\t{\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\thash: mintData.hash,\n\t\t\t\t\t\tsourceChain: \"eth\",\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconsole.log(mintData); // const transactionParameters = {\n\t\t\t//   to: '0x7858011704161f41880e7f7EaF1d4E3525094576', // Required except during contract publications.\n\t\t\t//   from: userAddress, // must match user's active address.\n\t\t\t//   value: '0x01', // Only required to send ether to the recipient from the initiating external account.\n\t\t\t// };\n\n\t\t\t// txHash is a hex string\n\t\t\t// As with any RPC call, it may throw an error\n\t\t\tsetIsload(false);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n};\n\nexport default MakeAURORATrx;\n","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeATOMTrx.ts",["246","247","248","249","250","251"],"import {\n\tassertIsDeliverTxSuccess,\n\tSigningStargateClient,\n} from \"@cosmjs/stargate\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { message } from \"antd\";\nconst bs58 = require(\"bs58\");\nconst { Buffer } = require(\"buffer\");\nconst web3 = require(\"@solana/web3.js\");\nconst axios = require(\"axios\").default;\n\n\nconst MakeATOMTrx = async (\n  activeBtn: any,\n  setIsload: any,\n  connection: any,\n  ATOMwalletKey: any,\n  walletTo: any,\n  netTo: string,\n  ATOMAmount: any\n) => {\n  if (activeBtn) {\n    setIsload(true);\n    try {\n      if (window) {\n        if (window[\"keplr\"]) {\n          const chainId = \"cosmoshub-4\"; //theta-testnet-001\n          await window.keplr.enable(chainId);\n          //@ts-ignore\n          if (typeof window === \"undefined\") return;\n          await window.keplr.enable(chainId);\n          const offlineSigner =\n            window.getOfflineSigner != null\n              ? window.getOfflineSigner(chainId)\n              : null;\n          if (offlineSigner == null) return \"error\";\n          const accounts = await offlineSigner.getAccounts();\n          // return\n          const client = await SigningStargateClient.connectWithSigner(\n            \"https://proxy.tonana.org/https://rpc.cosmos.network/\",\n            // \"https://rpc.sentry-01.theta-testnet.polypore.xyz/\",\n            offlineSigner\n          );\n          message.success(\"Wait BE trx pending...\", 2);\n  \n          const amountFinal = {\n            denom: \"uatom\",\n            amount: (Number(ATOMAmount) * 1000000).toString(),\n          };\n          const fee = {\n            amount: [\n              {\n                denom: \"uatom\",\n                amount: \"5000\",\n              },\n            ],\n            gas: \"200000\",\n          };\n          const result = await client.sendTokens(\n            accounts[0].address,\n            process.env.REACT_APP_BACK_COSMOS_WALLET\n              ? process.env.REACT_APP_BACK_COSMOS_WALLET\n              : \"\",\n            [amountFinal],\n            fee,\n            `${netTo}#${walletTo}`\n          );\n          await assertIsDeliverTxSuccess(result);\n          if (result.code !== undefined && result.code !== 0) {\n          \talert(\"Failed to send tx: \");\n          } else {\n\n            fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\"   : \"https://api.tonana.org/\", {method: \"POST\", headers: { \"Content-Type\": \"application/json\" },body: JSON.stringify({\n              hash:result.transactionHash,\n              sourceChain:\"cosmos\"\n            })})\n              setIsload(false);\n              message.success(\"Done trx!\", 10);\n\n    //     axios.get(\n    //           `https://us-central1-hoteloffice-293914.cloudfunctions.net/ton_solana_bridge/attr?=`\n    //         ).then((e:any)=>{\n    //           console.log(e);\n    // setIsload(false);\n\n    //           message.success(\"Done trx!\", 10);\n\n    //         })\n\n    // const int = setInterval(() => {\n    //   // return\n    //   fetch(`https://api.${process.env.REACT_APP_SOL_NET}.solana.com/`, {\n    //     method: \"POST\",\n    //     headers: {\n    //       Accept: \"application/json, text/plain, */*\",\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       jsonrpc: \"2.0\",\n    //       id: 1,\n    //       method: \"getTransaction\",\n\n    //       params: [\"json\"],\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then(async (res) => {\n    //       if (res.result == null) {\n    //         console.log(\"res: null \");\n    //         return false;\n    //       }\n    //       const buf = bs58.decode(\n    //         res.result.transaction.message.instructions[0].data.toString(16)\n    //       );\n    //       if (buf.toString() === `TON_WALLET_${walletTo}`) {\n    //         clearInterval(int);\n    //         message.success(\"Done BE trx!\", 10);\n\n    //         axios.get(\n    //           `https://us-central1-hoteloffice-293914.cloudfunctions.net/ton_solana_bridge/attr?=`\n    //         );\n\n    //         const int2 = setInterval(() => {\n    //           message.success(\"Wallet trx pending...\", 2);\n\n    //           fetch(\n    //             `https://toncenter.com/api/v2/getTransactions?address=${process.env.REACT_APP_BACK_TON_WALLET}&limit=10&to_lt=0&archival=false`\n    //           )\n    //             .then((e: any) => e.json())\n    //             .then((e: any) => {\n    //               console.log(e.result);\n    //               const data = e.result.filter((e: any) =>\n    //                 e.out_msgs[0]\n    //                   ? e.out_msgs[0].message === true\n    //                   : false\n    //               );\n    //               if (data[0]) {\n    //                 clearInterval(int2);\n    //                 setIsload(false);\n    //                 message.success(\"Done wallet trx, check it!\", 10);\n    //               }\n    //             });\n    //         }, 10000);\n    //       }\n    //     });\n    // }, 5000);\n\n\n    //       \talert(\"Succeed to send tx:\" + result.transactionHash);\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n\nexport default MakeATOMTrx\n","/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeSOLTrx.ts",["252"],"import { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { message } from \"antd\";\nconst bs58 = require(\"bs58\");\nconst { Buffer } = require(\"buffer\");\nconst web3 = require(\"@solana/web3.js\");\nconst axios = require(\"axios\").default;\n\nconst MakeSOLTrx = async (\n\tactiveBtn: any,\n\tsetIsload: any,\n\tconnection: any,\n\tSOLwalletKey: any,\n\twalletTo: any,\n\tnetTo: string,\n\tSOLAmount: any\n) => {\n\tif (activeBtn) {\n\t\tsetIsload(true);\n\n\t\tlet recentBlockhash = await connection.getRecentBlockhash();\n\t\tlet allocateTransaction = new web3.Transaction({\n\t\t\trecentBlockhash: recentBlockhash.blockhash,\n\t\t\tfeePayer: new PublicKey(SOLwalletKey),\n\t\t});\n\n\t\tconst instructionMessage = await new TransactionInstruction({\n\t\t\tkeys: [],\n\t\t\tprogramId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n\t\t\tdata: Buffer.from(`${netTo}#${walletTo}`),\n\t\t});\n\n\t\tconst instructionTransfer = web3.SystemProgram.transfer({\n\t\t\tfromPubkey: new PublicKey(SOLwalletKey),\n\t\t\ttoPubkey: new PublicKey(process.env.REACT_APP_BACK_SOL_WALLET as string),\n\t\t\tlamports: Number(SOLAmount) * 1000000000,\n\t\t});\n\t\tallocateTransaction.add(instructionMessage).add(instructionTransfer);\n\t\t//@ts-ignore\n\t\tconst { signature } = await window.solana.signAndSendTransaction(\n\t\t\tallocateTransaction\n\t\t);\n\t\tawait connection.confirmTransaction(signature);\n\t\tconst int = setInterval(() => {\n\t\t\tfetch(\n\t\t\t\t`https://solana-mainnet.g.alchemy.com/v2/B9sqdnSJnFWSdKlCTFqEQjMr8pnj7RAb`,\n\t\t\t\t{\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: \"application/json, text/plain, */*\",\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tjsonrpc: \"2.0\",\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\tmethod: \"getTransaction\",\n\t\t\t\t\t\tparams: [signature, \"json\"],\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tmessage.success(\"Wait BE trx pending...\", 2);\n\n\t\t\t\t\tif (res.result == null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst buf = bs58.decode(\n\t\t\t\t\t\tres.result.transaction.message.instructions[0].data.toString(16)\n\t\t\t\t\t);\n\t\t\t\t\tif (buf.toString() === `${netTo}#${walletTo}`) {\n\t\t\t\t\t\tfetch(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_STATE === \"dev\"\n\t\t\t\t\t\t\t\t? \"http://localhost:8092\"\n\t\t\t\t\t\t\t\t: process.env.REACT_APP_STATE === \"dev-remote\"\n\t\t\t\t\t\t\t\t? \"https://dev.api.tonana.org\"\n\t\t\t\t\t\t\t\t: \"https://api.tonana.org/\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\thash: signature,\n\t\t\t\t\t\t\t\t\tsourceChain: \"solana\",\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tclearInterval(int);\n\t\t\t\t\t\tsetIsload(false);\n\t\t\t\t\t\tmessage.success(\"Done trx!\", 10);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, 5000);\n\t} else {\n\t\tmessage.error(\"Fill all forms and connect wallets!\", 10);\n\t}\n};\n\nexport default MakeSOLTrx;\n","/Users/sepezho/Work/tonana/fe/src/logic/transaction/auroraABI.ts",[],"/Users/sepezho/Work/tonana/fe/src/logic/transaction/BOCcontent.ts",[],"/Users/sepezho/Work/tonana/fe/src/contexts/WalletSelectorContext.tsx",[],{"ruleId":"253","severity":1,"message":"254","line":5,"column":35,"nodeType":"255","messageId":"256","endLine":5,"endColumn":50},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"253","severity":1,"message":"261","line":5,"column":22,"nodeType":"255","messageId":"256","endLine":5,"endColumn":35},{"ruleId":"262","severity":1,"message":"263","line":251,"column":5,"nodeType":"264","endLine":251,"endColumn":7,"suggestions":"265"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"253","severity":1,"message":"266","line":2,"column":2,"nodeType":"255","messageId":"256","endLine":2,"endColumn":9},{"ruleId":"253","severity":1,"message":"267","line":4,"column":2,"nodeType":"255","messageId":"256","endLine":4,"endColumn":7},{"ruleId":"253","severity":1,"message":"268","line":5,"column":2,"nodeType":"255","messageId":"256","endLine":5,"endColumn":14},{"ruleId":"253","severity":1,"message":"269","line":16,"column":10,"nodeType":"255","messageId":"256","endLine":16,"endColumn":27},{"ruleId":"253","severity":1,"message":"270","line":23,"column":10,"nodeType":"255","messageId":"256","endLine":23,"endColumn":21},{"ruleId":"253","severity":1,"message":"266","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":17},{"ruleId":"253","severity":1,"message":"271","line":2,"column":18,"nodeType":"255","messageId":"256","endLine":2,"endColumn":26},{"ruleId":"253","severity":1,"message":"272","line":2,"column":48,"nodeType":"255","messageId":"256","endLine":2,"endColumn":57},{"ruleId":"253","severity":1,"message":"273","line":2,"column":59,"nodeType":"255","messageId":"256","endLine":2,"endColumn":75},{"ruleId":"253","severity":1,"message":"274","line":4,"column":7,"nodeType":"255","messageId":"256","endLine":4,"endColumn":12},{"ruleId":"253","severity":1,"message":"266","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":17},{"ruleId":"253","severity":1,"message":"271","line":2,"column":18,"nodeType":"255","messageId":"256","endLine":2,"endColumn":26},{"ruleId":"253","severity":1,"message":"267","line":2,"column":28,"nodeType":"255","messageId":"256","endLine":2,"endColumn":33},{"ruleId":"253","severity":1,"message":"272","line":2,"column":48,"nodeType":"255","messageId":"256","endLine":2,"endColumn":57},{"ruleId":"253","severity":1,"message":"273","line":2,"column":59,"nodeType":"255","messageId":"256","endLine":2,"endColumn":75},{"ruleId":"253","severity":1,"message":"274","line":5,"column":7,"nodeType":"255","messageId":"256","endLine":5,"endColumn":12},{"ruleId":"262","severity":1,"message":"275","line":55,"column":5,"nodeType":"264","endLine":55,"endColumn":50,"suggestions":"276"},{"ruleId":"262","severity":1,"message":"277","line":220,"column":5,"nodeType":"264","endLine":220,"endColumn":50,"suggestions":"278"},{"ruleId":"253","severity":1,"message":"279","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"280","line":3,"column":2,"nodeType":"255","messageId":"256","endLine":3,"endColumn":11},{"ruleId":"281","severity":1,"message":"282","line":20,"column":5,"nodeType":"283","messageId":"284","endLine":23,"endColumn":22,"fix":"285"},{"ruleId":"281","severity":1,"message":"282","line":29,"column":5,"nodeType":"283","messageId":"284","endLine":32,"endColumn":37,"fix":"286"},{"ruleId":"281","severity":1,"message":"282","line":38,"column":5,"nodeType":"283","messageId":"284","endLine":41,"endColumn":37,"fix":"287"},{"ruleId":"281","severity":1,"message":"282","line":46,"column":5,"nodeType":"283","messageId":"284","endLine":49,"endColumn":37,"fix":"288"},{"ruleId":"281","severity":1,"message":"282","line":55,"column":5,"nodeType":"283","messageId":"284","endLine":58,"endColumn":37,"fix":"289"},{"ruleId":"253","severity":1,"message":"290","line":9,"column":27,"nodeType":"255","messageId":"256","endLine":9,"endColumn":38},{"ruleId":"253","severity":1,"message":"291","line":9,"column":40,"nodeType":"255","messageId":"256","endLine":9,"endColumn":49},{"ruleId":"253","severity":1,"message":"292","line":9,"column":51,"nodeType":"255","messageId":"256","endLine":9,"endColumn":59},{"ruleId":"253","severity":1,"message":"293","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":19},{"ruleId":"253","severity":1,"message":"294","line":12,"column":2,"nodeType":"255","messageId":"256","endLine":12,"endColumn":13},{"ruleId":"253","severity":1,"message":"295","line":13,"column":2,"nodeType":"255","messageId":"256","endLine":13,"endColumn":12},{"ruleId":"253","severity":1,"message":"296","line":15,"column":15,"nodeType":"255","messageId":"256","endLine":15,"endColumn":26},{"ruleId":"253","severity":1,"message":"297","line":17,"column":10,"nodeType":"255","messageId":"256","endLine":17,"endColumn":27},{"ruleId":"253","severity":1,"message":"298","line":19,"column":6,"nodeType":"255","messageId":"256","endLine":19,"endColumn":15},{"ruleId":"253","severity":1,"message":"299","line":23,"column":7,"nodeType":"255","messageId":"256","endLine":23,"endColumn":25},{"ruleId":"253","severity":1,"message":"300","line":24,"column":7,"nodeType":"255","messageId":"256","endLine":24,"endColumn":22},{"ruleId":"253","severity":1,"message":"301","line":65,"column":10,"nodeType":"255","messageId":"256","endLine":65,"endColumn":18},{"ruleId":"253","severity":1,"message":"302","line":65,"column":20,"nodeType":"255","messageId":"256","endLine":65,"endColumn":25},{"ruleId":"253","severity":1,"message":"303","line":65,"column":27,"nodeType":"255","messageId":"256","endLine":65,"endColumn":35},{"ruleId":"253","severity":1,"message":"304","line":65,"column":37,"nodeType":"255","messageId":"256","endLine":65,"endColumn":46},{"ruleId":"253","severity":1,"message":"279","line":2,"column":17,"nodeType":"255","messageId":"256","endLine":2,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":9,"column":5,"nodeType":"283","endLine":9,"endColumn":40},{"ruleId":"253","severity":1,"message":"291","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"292","line":1,"column":28,"nodeType":"255","messageId":"256","endLine":1,"endColumn":36},{"ruleId":"253","severity":1,"message":"307","line":1,"column":36,"nodeType":"255","messageId":"256","endLine":1,"endColumn":45},{"ruleId":"253","severity":1,"message":"308","line":37,"column":9,"nodeType":"255","messageId":"256","endLine":37,"endColumn":11},{"ruleId":"253","severity":1,"message":"309","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":19},{"ruleId":"253","severity":1,"message":"310","line":5,"column":21,"nodeType":"255","messageId":"256","endLine":5,"endColumn":43},{"ruleId":"253","severity":1,"message":"311","line":7,"column":7,"nodeType":"255","messageId":"256","endLine":7,"endColumn":11},{"ruleId":"253","severity":1,"message":"312","line":8,"column":9,"nodeType":"255","messageId":"256","endLine":8,"endColumn":15},{"ruleId":"253","severity":1,"message":"313","line":9,"column":7,"nodeType":"255","messageId":"256","endLine":9,"endColumn":11},{"ruleId":"253","severity":1,"message":"274","line":10,"column":7,"nodeType":"255","messageId":"256","endLine":10,"endColumn":12},{"ruleId":"253","severity":1,"message":"274","line":6,"column":7,"nodeType":"255","messageId":"256","endLine":6,"endColumn":12},"@typescript-eslint/no-unused-vars","'useSearchParams' is defined but never used.","Identifier","unusedVar","no-native-reassign",["314"],"no-negated-in-lhs",["315"],"'clusterApiUrl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isnear', 'isusn', 'nearAccountId', 'searchParams', 'setSearchParams', and 'transactionHashes'. Either include them or remove the dependency array.","ArrayExpression",["316"],"'connect' is defined but never used.","'utils' is defined but never used.","'transactions' is defined but never used.","'setupMyNearWallet' is defined but never used.","'setupLedger' is defined but never used.","'Contract' is defined but never used.","'keyStores' is defined but never used.","'WalletConnection' is defined but never used.","'axios' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isDirNear', 'isDirTon', 'isDirUsn', 'isSouNear', 'isSouTon', and 'isSouUsn'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["318"],"'Component' is defined but never used.","'FaMediumM' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"319","text":"320"},{"range":"321","text":"320"},{"range":"322","text":"320"},{"range":"323","text":"320"},{"range":"324","text":"320"},"'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'providers' is defined but never used.","'AccountView' is defined but never used.","'CodeResult' is defined but never used.","'Transaction' is defined but never used.","'useWalletSelector' is defined but never used.","'Submitted' is defined but never used.","'SUGGESTED_DONATION' is assigned a value but never used.","'BOATLOAD_OF_GAS' is assigned a value but never used.","'selector' is assigned a value but never used.","'modal' is assigned a value but never used.","'accounts' is assigned a value but never used.","'accountId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'BitString' is defined but never used.","'tx' is assigned a value but never used.","'PublicKey' is defined but never used.","'TransactionInstruction' is defined but never used.","'bs58' is assigned a value but never used.","'Buffer' is assigned a value but never used.","'web3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},[532,532]," rel=\"noreferrer\"",[772,772],[1025,1025],[1259,1259],[1502,1502],"Update the dependencies array to be: [isnear, isusn, nearAccountId, searchParams, setSearchParams, transactionHashes]",{"range":"331","text":"332"},"Update the dependencies array to be: [props.networkSource, props.directionNetwork, isSouNear, isDirTon, isSouTon, isDirNear, isDirUsn, isSouUsn]",{"range":"333","text":"334"},"Update the dependencies array to be: [props, props.directionNetwork, props.networkSource]",{"range":"335","text":"336"},[7755,7757],"[isnear, isusn, nearAccountId, searchParams, setSearchParams, transactionHashes]",[2254,2299],"[props.networkSource, props.directionNetwork, isSouNear, isDirTon, isSouTon, isDirNear, isDirUsn, isSouUsn]",[5266,5311],"[props, props.directionNetwork, props.networkSource]"]