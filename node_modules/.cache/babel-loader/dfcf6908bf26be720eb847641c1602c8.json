{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fold = exports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.chainW = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.right = exports.left = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.chainFirstW = exports.chainFirst = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\nvar _map = function _map(fa, f) {\n  return (0, function_1.pipe)(fa, (0, exports.map)(f));\n};\nvar _ap = function _ap(fab, fa) {\n  return (0, function_1.pipe)(fab, (0, exports.ap)(fa));\n};\n/* istanbul ignore next */\nvar _chain = function _chain(ma, f) {\n  return (0, function_1.pipe)(ma, (0, exports.chain)(f));\n};\n/* istanbul ignore next */\nvar _reduce = function _reduce(fa, b, f) {\n  return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMap = function _foldMap(M) {\n  return function (fa, f) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return (0, function_1.pipe)(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f));\n};\nvar _traverse = function _traverse(F) {\n  var traverseF = (0, exports.traverse)(F);\n  return function (ta, f) {\n    return (0, function_1.pipe)(ta, traverseF(f));\n  };\n};\nvar _bimap = function _bimap(fa, f, g) {\n  return (0, function_1.pipe)(fa, (0, exports.bimap)(f, g));\n};\nvar _mapLeft = function _mapLeft(fa, f) {\n  return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f));\n};\n/* istanbul ignore next */\nvar _alt = function _alt(fa, that) {\n  return (0, function_1.pipe)(fa, (0, exports.alt)(that));\n};\n/* istanbul ignore next */\nvar _extend = function _extend(wa, f) {\n  return (0, function_1.pipe)(wa, (0, exports.extend)(f));\n};\nvar _chainRec = function _chainRec(a, f) {\n  return (0, ChainRec_1.tailRec)(f(a), function (e) {\n    return (0, exports.isLeft)(e) ? (0, exports.right)((0, exports.left)(e.left)) : (0, exports.isLeft)(e.right) ? (0, exports.left)(f(e.right.left)) : (0, exports.right)((0, exports.right)(e.right.right));\n  });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function getShow(SE, SA) {\n  return {\n    show: function show(ma) {\n      return (0, exports.isLeft)(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\");\n    }\n  };\n};\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function getEq(EL, EA) {\n  return {\n    equals: function equals(x, y) {\n      return x === y || ((0, exports.isLeft)(x) ? (0, exports.isLeft)(y) && EL.equals(x.left, y.left) : (0, exports.isRight)(y) && EA.equals(x.right, y.right));\n    }\n  };\n};\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function getSemigroup(S) {\n  return {\n    concat: function concat(x, y) {\n      return (0, exports.isLeft)(y) ? x : (0, exports.isLeft)(x) ? y : (0, exports.right)(S.concat(x.right, y.right));\n    }\n  };\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function getCompactable(M) {\n  var empty = (0, exports.left)(M.empty);\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    compact: function compact(ma) {\n      return (0, exports.isLeft)(ma) ? ma : ma.right._tag === 'None' ? empty : (0, exports.right)(ma.right.value);\n    },\n    separate: function separate(ma) {\n      return (0, exports.isLeft)(ma) ? (0, Separated_1.separated)(ma, ma) : (0, exports.isLeft)(ma.right) ? (0, Separated_1.separated)((0, exports.right)(ma.right.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(ma.right.right));\n    }\n  };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getFilterable = function getFilterable(M) {\n  var empty = (0, exports.left)(M.empty);\n  var _a = (0, exports.getCompactable)(M),\n    compact = _a.compact,\n    separate = _a.separate;\n  var filter = function filter(ma, predicate) {\n    return (0, exports.isLeft)(ma) ? ma : predicate(ma.right) ? ma : empty;\n  };\n  var partition = function partition(ma, p) {\n    return (0, exports.isLeft)(ma) ? (0, Separated_1.separated)(ma, ma) : p(ma.right) ? (0, Separated_1.separated)(empty, (0, exports.right)(ma.right)) : (0, Separated_1.separated)((0, exports.right)(ma.right), empty);\n  };\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: filter,\n    filterMap: function filterMap(ma, f) {\n      if ((0, exports.isLeft)(ma)) {\n        return ma;\n      }\n      var ob = f(ma.right);\n      return ob._tag === 'None' ? empty : (0, exports.right)(ob.value);\n    },\n    partition: partition,\n    partitionMap: function partitionMap(ma, f) {\n      if ((0, exports.isLeft)(ma)) {\n        return (0, Separated_1.separated)(ma, ma);\n      }\n      var e = f(ma.right);\n      return (0, exports.isLeft)(e) ? (0, Separated_1.separated)((0, exports.right)(e.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(e.right));\n    }\n  };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nvar getWitherable = function getWitherable(M) {\n  var F_ = (0, exports.getFilterable)(M);\n  var C = (0, exports.getCompactable)(M);\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    compact: F_.compact,\n    separate: F_.separate,\n    filter: F_.filter,\n    filterMap: F_.filterMap,\n    partition: F_.partition,\n    partitionMap: F_.partitionMap,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    wither: (0, Witherable_1.witherDefault)(exports.Traversable, C),\n    wilt: (0, Witherable_1.wiltDefault)(exports.Traversable, C)\n  };\n};\nexports.getWitherable = getWitherable;\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getApplicativeValidation = function getApplicativeValidation(SE) {\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function ap(fab, fa) {\n      return (0, exports.isLeft)(fab) ? (0, exports.isLeft)(fa) ? (0, exports.left)(SE.concat(fab.left, fa.left)) : fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n    },\n    of: exports.of\n  };\n};\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getAltValidation = function getAltValidation(SE) {\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function alt(me, that) {\n      if ((0, exports.isRight)(me)) {\n        return me;\n      }\n      var ea = that();\n      return (0, exports.isLeft)(ea) ? (0, exports.left)(SE.concat(me.left, ea.left)) : ea;\n    }\n  };\n};\nexports.getAltValidation = getAltValidation;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function map(f) {\n  return function (fa) {\n    return (0, exports.isLeft)(fa) ? fa : (0, exports.right)(f(fa.right));\n  };\n};\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nvar apW = function apW(fa) {\n  return function (fab) {\n    return (0, exports.isLeft)(fab) ? fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n  };\n};\nexports.apW = apW;\n/**\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const e1: E.Either<string, number> = E.right(1)\n * const e2: E.Either<number, number> = E.right(2)\n *\n * export const result1 = pipe(\n *   // @ts-expect-error\n *   e1,\n *   E.chain(() => e2)\n * )\n *\n * // merged error types -----v-------------v\n * // const result2: E.Either<string | number, number>\n * export const result2 = pipe(\n *   e1, // no error\n *   E.chainW(() => e2)\n * )\n *\n * @category sequencing\n * @since 2.6.0\n */\nvar chainW = function chainW(f) {\n  return function (ma) {\n    return (0, exports.isLeft)(ma) ? ma : f(ma.right);\n  };\n};\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function reduce(b, f) {\n  return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(b, fa.right);\n  };\n};\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function foldMap(M) {\n  return function (f) {\n    return function (fa) {\n      return (0, exports.isLeft)(fa) ? M.empty : f(fa.right);\n    };\n  };\n};\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function reduceRight(b, f) {\n  return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(fa.right, b);\n  };\n};\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function traverse(F) {\n  return function (f) {\n    return function (ta) {\n      return (0, exports.isLeft)(ta) ? F.of((0, exports.left)(ta.left)) : F.map(f(ta.right), exports.right);\n    };\n  };\n};\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function sequence(F) {\n  return function (ma) {\n    return (0, exports.isLeft)(ma) ? F.of((0, exports.left)(ma.left)) : F.map(ma.right, exports.right);\n  };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar bimap = function bimap(f, g) {\n  return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : (0, exports.right)(g(fa.right));\n  };\n};\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nvar mapLeft = function mapLeft(f) {\n  return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : fa;\n  };\n};\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n  URI: exports.URI,\n  bimap: _bimap,\n  mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function altW(that) {\n  return function (fa) {\n    return (0, exports.isLeft)(fa) ? that() : fa;\n  };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @since 2.0.0\n */\nvar extend = function extend(f) {\n  return function (wa) {\n    return (0, exports.isLeft)(wa) ? wa : (0, exports.right)(f(wa));\n  };\n};\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n  URI: exports.URI,\n  fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = /*#__PURE__*/(0, FromEither_1.fromOption)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function matchW(onLeft, onRight) {\n  return function (ma) {\n    return (0, exports.isLeft)(ma) ? onLeft(ma.left) : onRight(ma.right);\n  };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function getOrElseW(onLeft) {\n  return function (ma) {\n    return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma.right;\n  };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chainFirst = /*#__PURE__*/(0, Chain_1.chainFirst)(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = /*#__PURE__*/(0, exports.chainW)(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexports.fromOptionK = /*#__PURE__*/(0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nvar swap = function swap(ma) {\n  return (0, exports.isLeft)(ma) ? (0, exports.right)(ma.left) : (0, exports.left)(ma.right);\n};\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar orElseW = function orElseW(onLeft) {\n  return function (ma) {\n    return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma;\n  };\n};\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function fromNullable(e) {\n  return function (a) {\n    return a == null ? (0, exports.left)(e) : (0, exports.right)(a);\n  };\n};\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function tryCatch(f, onThrow) {\n  try {\n    return (0, exports.right)(f());\n  } catch (e) {\n    return (0, exports.left)(onThrow(e));\n  }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function tryCatchK(f, onThrow) {\n  return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n    return (0, exports.tryCatch)(function () {\n      return f.apply(void 0, a);\n    }, onThrow);\n  };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * @category lifting\n * @since 2.9.0\n */\nvar fromNullableK = function fromNullableK(e) {\n  var from = (0, exports.fromNullable)(e);\n  return function (f) {\n    return (0, function_1.flow)(f, from);\n  };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category sequencing\n * @since 2.9.0\n */\nvar chainNullableK = function chainNullableK(e) {\n  var from = (0, exports.fromNullableK)(e);\n  return function (f) {\n    return (0, exports.chain)(from(f));\n  };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = (0, exports.foldW)(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n  return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\nfunction elem(E) {\n  return function (a, ma) {\n    if (ma === undefined) {\n      var elemE_1 = elem(E);\n      return function (ma) {\n        return elemE_1(a, ma);\n      };\n    }\n    return (0, exports.isLeft)(ma) ? false : E.equals(a, ma.right);\n  };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function exists(predicate) {\n  return function (ma) {\n    return (0, exports.isLeft)(ma) ? false : predicate(ma.right);\n  };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/(0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function traverseReadonlyNonEmptyArrayWithIndex(f) {\n  return function (as) {\n    var e = f(0, _.head(as));\n    if ((0, exports.isLeft)(e)) {\n      return e;\n    }\n    var out = [e.right];\n    for (var i = 1; i < as.length; i++) {\n      var e_1 = f(i, as[i]);\n      if ((0, exports.isLeft)(e_1)) {\n        return e_1;\n      }\n      out.push(e_1.right);\n    }\n    return (0, exports.right)(out);\n  };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function traverseReadonlyArrayWithIndex(f) {\n  var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n  return function (as) {\n    return _.isNonEmpty(as) ? g(as) : exports.ApT;\n  };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function traverseArray(f) {\n  return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) {\n    return f(a);\n  });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = /*#__PURE__*/(0, exports.traverseArray)(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n  return (0, exports.tryCatch)(function () {\n    return JSON.parse(s);\n  }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function stringifyJSON(u, onError) {\n  return (0, exports.tryCatch)(function () {\n    var s = JSON.stringify(u);\n    if (typeof s !== 'string') {\n      throw new Error('Converting unsupported structure to JSON');\n    }\n    return s;\n  }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n  URI: exports.URI,\n  map: _map,\n  of: exports.of,\n  ap: _ap,\n  chain: _chain,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  bimap: _bimap,\n  mapLeft: _mapLeft,\n  alt: _alt,\n  extend: _extend,\n  chainRec: _chainRec,\n  throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = /*#__PURE__*/(0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = /*#__PURE__*/(0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function getValidationSemigroup(SE, SA) {\n  return (0, Apply_1.getApplySemigroup)((0, exports.getApplicativeValidation)(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function getValidationMonoid(SE, MA) {\n  return (0, Applicative_1.getApplicativeMonoid)((0, exports.getApplicativeValidation)(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n  var ap = (0, exports.getApplicativeValidation)(SE).ap;\n  var alt = (0, exports.getAltValidation)(SE).alt;\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    of: exports.of,\n    chain: _chain,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    extend: _extend,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    chainRec: _chainRec,\n    throwError: exports.throwError,\n    ap: ap,\n    alt: alt\n  };\n}\nexports.getValidation = getValidation;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","fold","match","foldW","matchW","isRight","isLeft","fromOption","fromPredicate","FromEither","MonadThrow","throwError","ChainRec","Extend","extend","Alt","alt","altW","Bifunctor","mapLeft","bimap","Traversable","sequence","traverse","Foldable","reduceRight","foldMap","reduce","Monad","Chain","chain","chainW","Applicative","Apply","ap","apW","Pointed","of","Functor","map","getAltValidation","getApplicativeValidation","getWitherable","getFilterable","getCompactable","getSemigroup","getEq","getShow","URI","right","left","getValidation","getValidationMonoid","getValidationSemigroup","getApplyMonoid","getApplySemigroup","either","stringifyJSON","parseJSON","sequenceArray","traverseArray","traverseArrayWithIndex","traverseReadonlyArrayWithIndex","traverseReadonlyNonEmptyArrayWithIndex","ApT","apSW","apS","bindW","bind","let","bindTo","Do","exists","elem","toError","toUnion","chainNullableK","fromNullableK","tryCatchK","tryCatch","fromNullable","orElse","orElseW","swap","filterOrElseW","filterOrElse","chainOptionK","fromOptionK","duplicate","flatten","flattenW","chainFirstW","chainFirst","apSecondW","apSecond","apFirstW","apFirst","flap","getOrElse","getOrElseW","Applicative_1","require","Apply_1","Chain_1","ChainRec_1","FromEither_1","function_1","Functor_1","_","Separated_1","Witherable_1","_map","fa","f","pipe","_ap","fab","_chain","ma","_reduce","b","_foldMap","M","foldMapM","_reduceRight","_traverse","F","traverseF","ta","_bimap","g","_mapLeft","_alt","that","_extend","wa","_chainRec","a","tailRec","e","SE","SA","show","concat","EL","EA","equals","x","y","S","empty","_E","compact","_tag","separate","separated","_a","filter","predicate","partition","p","filterMap","ob","partitionMap","F_","C","wither","witherDefault","wilt","wiltDefault","me","ea","chainRec","fromEither","identity","onLeft","onRight","onThrow","_i","arguments","length","apply","from","flow","Error","String","E","elemE_1","emptyRecord","let_","emptyReadonlyArray","as","head","out","i","e_1","push","isNonEmpty","s","onError","JSON","parse","u","stringify","getApplicativeMonoid","MA"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/fp-ts/lib/Either.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fold = exports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.chainW = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.right = exports.left = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.chainFirstW = exports.chainFirst = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return (0, function_1.pipe)(ma, (0, exports.chain)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return (0, function_1.pipe)(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return (0, function_1.pipe)(fa, (0, exports.bimap)(f, g)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\nvar _chainRec = function (a, f) {\n    return (0, ChainRec_1.tailRec)(f(a), function (e) {\n        return (0, exports.isLeft)(e) ? (0, exports.right)((0, exports.left)(e.left)) : (0, exports.isLeft)(e.right) ? (0, exports.left)(f(e.right.left)) : (0, exports.right)((0, exports.right)(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (SE, SA) { return ({\n    show: function (ma) { return ((0, exports.isLeft)(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || ((0, exports.isLeft)(x) ? (0, exports.isLeft)(y) && EL.equals(x.left, y.left) : (0, exports.isRight)(y) && EA.equals(x.right, y.right));\n    }\n}); };\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isLeft)(y) ? x : (0, exports.isLeft)(x) ? y : (0, exports.right)(S.concat(x.right, y.right))); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return ((0, exports.isLeft)(ma) ? ma : ma.right._tag === 'None' ? empty : (0, exports.right)(ma.right.value)); },\n        separate: function (ma) {\n            return (0, exports.isLeft)(ma)\n                ? (0, Separated_1.separated)(ma, ma)\n                : (0, exports.isLeft)(ma.right)\n                    ? (0, Separated_1.separated)((0, exports.right)(ma.right.left), empty)\n                    : (0, Separated_1.separated)(empty, (0, exports.right)(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getFilterable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    var _a = (0, exports.getCompactable)(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return (0, exports.isLeft)(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return (0, exports.isLeft)(ma)\n            ? (0, Separated_1.separated)(ma, ma)\n            : p(ma.right)\n                ? (0, Separated_1.separated)(empty, (0, exports.right)(ma.right))\n                : (0, Separated_1.separated)((0, exports.right)(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : (0, exports.right)(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return (0, Separated_1.separated)(ma, ma);\n            }\n            var e = f(ma.right);\n            return (0, exports.isLeft)(e) ? (0, Separated_1.separated)((0, exports.right)(e.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(e.right));\n        }\n    };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nvar getWitherable = function (M) {\n    var F_ = (0, exports.getFilterable)(M);\n    var C = (0, exports.getCompactable)(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: (0, Witherable_1.witherDefault)(exports.Traversable, C),\n        wilt: (0, Witherable_1.wiltDefault)(exports.Traversable, C)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getApplicativeValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return (0, exports.isLeft)(fab)\n            ? (0, exports.isLeft)(fa)\n                ? (0, exports.left)(SE.concat(fab.left, fa.left))\n                : fab\n            : (0, exports.isLeft)(fa)\n                ? fa\n                : (0, exports.right)(fab.right(fa.right));\n    },\n    of: exports.of\n}); };\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getAltValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if ((0, exports.isRight)(me)) {\n            return me;\n        }\n        var ea = that();\n        return (0, exports.isLeft)(ea) ? (0, exports.left)(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\nexports.getAltValidation = getAltValidation;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? fa : (0, exports.right)(f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) {\n    return (0, exports.isLeft)(fab) ? fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n}; };\nexports.apW = apW;\n/**\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const e1: E.Either<string, number> = E.right(1)\n * const e2: E.Either<number, number> = E.right(2)\n *\n * export const result1 = pipe(\n *   // @ts-expect-error\n *   e1,\n *   E.chain(() => e2)\n * )\n *\n * // merged error types -----v-------------v\n * // const result2: E.Either<string | number, number>\n * export const result2 = pipe(\n *   e1, // no error\n *   E.chainW(() => e2)\n * )\n *\n * @category sequencing\n * @since 2.6.0\n */\nvar chainW = function (f) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? ma : f(ma.right);\n    };\n};\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isLeft)(ta) ? F.of((0, exports.left)(ta.left)) : F.map(f(ta.right), exports.right);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? F.of((0, exports.left)(ma.left)) : F.map(ma.right, exports.right);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : (0, exports.right)(g(fa.right));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isLeft)(wa) ? wa : (0, exports.right)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/ (0, FromEither_1.fromOption)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/ (0, exports.chainW)(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/ (0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nvar swap = function (ma) { return ((0, exports.isLeft)(ma) ? (0, exports.right)(ma.left) : (0, exports.left)(ma.right)); };\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma;\n    };\n};\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (e) {\n    return function (a) {\n        return a == null ? (0, exports.left)(e) : (0, exports.right)(a);\n    };\n};\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return (0, exports.right)(f());\n    }\n    catch (e) {\n        return (0, exports.left)(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * @category lifting\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = (0, exports.fromNullable)(e);\n    return function (f) { return (0, function_1.flow)(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category sequencing\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = (0, exports.fromNullableK)(e);\n    return function (f) { return (0, exports.chain)(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = (0, exports.foldW)(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isLeft)(ma) ? false : E.equals(a, ma.right);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? false : predicate(ma.right);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if ((0, exports.isLeft)(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if ((0, exports.isLeft)(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return (0, exports.right)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n    return (0, exports.tryCatch)(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return (0, exports.tryCatch)(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/ (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/ (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return (0, Apply_1.getApplySemigroup)((0, exports.getApplicativeValidation)(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return (0, Applicative_1.getApplicativeMonoid)((0, exports.getApplicativeValidation)(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = (0, exports.getApplicativeValidation)(SE).ap;\n    var alt = (0, exports.getAltValidation)(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n"],"mappings":"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,EAAEwE,IAAI;EACTjG,MAAM,EAAEwH;AACZ,CAAC;AACD;AACA;AACA;AACA;AACAtI,OAAO,CAACY,QAAQ,GAAG;EACfoC,GAAG,EAAEhD,OAAO,CAACgD,GAAG;EAChBT,GAAG,EAAEwE,IAAI;EACT7E,EAAE,EAAEiF,GAAG;EACPrF,KAAK,EAAEuF,MAAM;EACbuD,QAAQ,EAAEpC;AACd,CAAC;AACD;AACA;AACA;AACAxI,OAAO,CAACW,UAAU,GAAGX,OAAO,CAACkD,IAAI;AACjC;AACA;AACA;AACA;AACAlD,OAAO,CAACU,UAAU,GAAG;EACjBsC,GAAG,EAAEhD,OAAO,CAACgD,GAAG;EAChBT,GAAG,EAAEwE,IAAI;EACT7E,EAAE,EAAEiF,GAAG;EACP9E,EAAE,EAAErC,OAAO,CAACqC,EAAE;EACdP,KAAK,EAAEuF,MAAM;EACb1G,UAAU,EAAEX,OAAO,CAACW;AACxB,CAAC;AACD;AACA;AACA;AACA;AACAX,OAAO,CAACS,UAAU,GAAG;EACjBuC,GAAG,EAAEhD,OAAO,CAACgD,GAAG;EAChB6H,UAAU,EAAEnE,UAAU,CAACoE;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9K,OAAO,CAACQ,aAAa,GAAG,CAAC,CAAC,EAAEiG,YAAY,CAACjG,aAAa,EAAER,OAAO,CAACS,UAAU,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,OAAO,CAACO,UAAU,GAClB,aAAc,CAAC,CAAC,EAAEkG,YAAY,CAAClG,UAAU,EAAEP,OAAO,CAACS,UAAU,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,OAAO,CAACM,MAAM,GAAGsG,CAAC,CAACtG,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACAN,OAAO,CAACK,OAAO,GAAGuG,CAAC,CAACvG,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,SAATA,MAAM,CAAa2K,MAAM,EAAEC,OAAO,EAAE;EACpC,OAAO,UAAU1D,EAAE,EAAE;IACjB,OAAO,CAAC,CAAC,EAAEtH,OAAO,CAACM,MAAM,EAAEgH,EAAE,CAAC,GAAGyD,MAAM,CAACzD,EAAE,CAACpE,IAAI,CAAC,GAAG8H,OAAO,CAAC1D,EAAE,CAACrE,KAAK,CAAC;EACxE,CAAC;AACL,CAAC;AACDjD,OAAO,CAACI,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACAJ,OAAO,CAACG,KAAK,GAAGH,OAAO,CAACI,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,OAAO,CAACE,KAAK,GAAGF,OAAO,CAACI,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACAJ,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACE,KAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIiG,UAAU,GAAG,SAAbA,UAAU,CAAa4E,MAAM,EAAE;EAC/B,OAAO,UAAUzD,EAAE,EAAE;IACjB,OAAO,CAAC,CAAC,EAAEtH,OAAO,CAACM,MAAM,EAAEgH,EAAE,CAAC,GAAGyD,MAAM,CAACzD,EAAE,CAACpE,IAAI,CAAC,GAAGoE,EAAE,CAACrE,KAAK;EAC/D,CAAC;AACL,CAAC;AACDjD,OAAO,CAACmG,UAAU,GAAGA,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"script"}