{"ast":null,"code":"const {\n  Contract\n} = require(\"../../index.js\");\nconst {\n  Cell\n} = require(\"../../../boc\");\nconst {\n  Address\n} = require(\"../../../utils\");\nconst {\n  parseAddress\n} = require('./NftUtils.js');\n\n/**\n * Not release - will change\n */\nclass NftMarketplace extends Contract {\n  /**\n   * @param provider\n   * @param options   {{ownerAddress: Address, address?: Address | string, cell?: Cell}}\n   */\n  constructor(provider, options) {\n    options.wc = 0;\n    options.code = options.code || Cell.oneFromBoc('B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7');\n    super(provider, options);\n  }\n\n  /**\n   * @override\n   * @private\n   * @return {Cell} cell contains nft marketplace data\n   */\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeAddress(this.options.ownerAddress);\n    return cell;\n  }\n}\nmodule.exports = {\n  NftMarketplace\n};","map":{"version":3,"names":["Contract","require","Cell","Address","parseAddress","NftMarketplace","constructor","provider","options","wc","code","oneFromBoc","createDataCell","cell","bits","writeAddress","ownerAddress","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/contract/token/nft/NftMarketplace.js"],"sourcesContent":["const {Contract} = require(\"../../index.js\");\nconst {Cell} = require(\"../../../boc\");\nconst {Address} = require(\"../../../utils\");\nconst {parseAddress} = require('./NftUtils.js');\n\n/**\n * Not release - will change\n */\nclass NftMarketplace extends Contract {\n    /**\n     * @param provider\n     * @param options   {{ownerAddress: Address, address?: Address | string, cell?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc('B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7');\n        super(provider, options);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft marketplace data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.ownerAddress);\n        return cell;\n    }\n\n}\n\nmodule.exports = {NftMarketplace};\n"],"mappings":"AAAA,MAAM;EAACA;AAAQ,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC5C,MAAM;EAACC;AAAI,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;AACtC,MAAM;EAACE;AAAO,CAAC,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC3C,MAAM;EAACG;AAAY,CAAC,GAAGH,OAAO,CAAC,eAAe,CAAC;;AAE/C;AACA;AACA;AACA,MAAMI,cAAc,SAASL,QAAQ,CAAC;EAClC;AACJ;AACA;AACA;EACIM,WAAW,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAC3BA,OAAO,CAACC,EAAE,GAAG,CAAC;IACdD,OAAO,CAACE,IAAI,GAAGF,OAAO,CAACE,IAAI,IAAIR,IAAI,CAACS,UAAU,CAAC,0PAA0P,CAAC;IAC1S,KAAK,CAACJ,QAAQ,EAAEC,OAAO,CAAC;EAC5B;;EAEA;AACJ;AACA;AACA;AACA;EACII,cAAc,GAAG;IACb,MAAMC,IAAI,GAAG,IAAIX,IAAI,EAAE;IACvBW,IAAI,CAACC,IAAI,CAACC,YAAY,CAAC,IAAI,CAACP,OAAO,CAACQ,YAAY,CAAC;IACjD,OAAOH,IAAI;EACf;AAEJ;AAEAI,MAAM,CAACC,OAAO,GAAG;EAACb;AAAc,CAAC"},"metadata":{},"sourceType":"script"}