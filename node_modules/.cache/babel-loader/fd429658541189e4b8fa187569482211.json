{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{message}from\"antd\";var connectWalletATOM=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(setATOMWalletKey){var chainId,offlineSigner,accounts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!window[\"keplr\"]){_context.next=18;break;}chainId=\"cosmoshub-4\";//theta-testnet-001\n_context.next=5;return window.keplr.enable(chainId);case 5:if(!(typeof window===\"undefined\")){_context.next=7;break;}return _context.abrupt(\"return\");case 7:_context.next=9;return window.keplr.enable(chainId);case 9:offlineSigner=window.getOfflineSigner!=null?window.getOfflineSigner(chainId):null;if(!(offlineSigner==null)){_context.next=12;break;}return _context.abrupt(\"return\",\"error\");case 12:_context.next=14;return offlineSigner.getAccounts();case 14:accounts=_context.sent;setATOMWalletKey(accounts[0].address);_context.next=19;break;case 18:message.error(\"Install Keplr wallet. Close all Keplr wallet windows and try again pls\",5);case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 24:case\"end\":return _context.stop();}}},_callee,null,[[0,21]]);}));return function connectWalletATOM(_x){return _ref.apply(this,arguments);};}();export default connectWalletATOM;","map":{"version":3,"names":["message","connectWalletATOM","setATOMWalletKey","window","chainId","keplr","enable","offlineSigner","getOfflineSigner","getAccounts","accounts","address","error","console","log"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletATOM.ts"],"sourcesContent":["import { message } from \"antd\";\n\nconst connectWalletATOM = async (setATOMWalletKey: any) => {\n  try {\n    if (window[\"keplr\"]) {\n      const chainId = \"cosmoshub-4\"; //theta-testnet-001\n      await window.keplr.enable(chainId);\n      //@ts-ignore\n      if (typeof window === \"undefined\") return;\n      await window.keplr.enable(chainId);\n      const offlineSigner =\n        window.getOfflineSigner != null\n          ? window.getOfflineSigner(chainId)\n          : null;\n      if (offlineSigner == null) return \"error\";\n      const accounts = await offlineSigner.getAccounts();\n      setATOMWalletKey(accounts[0].address)\n    } else {\n      message.error(\n        \"Install Keplr wallet. Close all Keplr wallet windows and try again pls\",\n        5\n      );\n    }\n  } catch (err) {console.log(err)}\n};\n\nexport default connectWalletATOM"],"mappings":"sPAAA,OAASA,OAAO,KAAQ,MAAM,CAE9B,GAAMC,kBAAiB,4FAAG,iBAAOC,gBAAqB,2KAE9CC,MAAM,CAAC,OAAO,CAAC,0BACXC,OAAO,CAAG,aAAa,CAAE;AAAA,sBACzBD,OAAM,CAACE,KAAK,CAACC,MAAM,CAACF,OAAO,CAAC,aAE9B,MAAOD,OAAM,GAAK,WAAW,wFAC3BA,OAAM,CAACE,KAAK,CAACC,MAAM,CAACF,OAAO,CAAC,QAC5BG,aAAa,CACjBJ,MAAM,CAACK,gBAAgB,EAAI,IAAI,CAC3BL,MAAM,CAACK,gBAAgB,CAACJ,OAAO,CAAC,CAChC,IAAI,MACNG,aAAa,EAAI,IAAI,2DAAS,OAAO,iCAClBA,cAAa,CAACE,WAAW,EAAE,SAA5CC,QAAQ,eACdR,gBAAgB,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,gCAErCX,OAAO,CAACY,KAAK,CACX,wEAAwE,CACxE,CAAC,CACF,CAAC,yFAESC,OAAO,CAACC,GAAG,aAAK,sEAChC,kBAtBKb,kBAAiB,4CAsBtB,CAED,cAAeA,kBAAiB"},"metadata":{},"sourceType":"module"}