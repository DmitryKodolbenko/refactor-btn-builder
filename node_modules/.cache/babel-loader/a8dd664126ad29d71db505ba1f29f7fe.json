{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isJsonCompatibleDictionary = exports.isJsonCompatibleArray = exports.isJsonCompatibleValue = void 0;\nfunction isJsonCompatibleValue(value) {\n  if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\" || value === null ||\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  isJsonCompatibleArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  isJsonCompatibleDictionary(value)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexports.isJsonCompatibleValue = isJsonCompatibleValue;\nfunction isJsonCompatibleArray(value) {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n  for (const item of value) {\n    if (!isJsonCompatibleValue(item)) {\n      return false;\n    }\n  }\n  // all items okay\n  return true;\n}\nexports.isJsonCompatibleArray = isJsonCompatibleArray;\nfunction isJsonCompatibleDictionary(data) {\n  if (typeof data !== \"object\" || data === null) {\n    // data must be a non-null object\n    return false;\n  }\n  // Exclude special kind of objects like Array, Date or Uint8Array\n  // Object.prototype.toString() returns a specified value:\n  // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring\n  if (Object.prototype.toString.call(data) !== \"[object Object]\") {\n    return false;\n  }\n  return Object.values(data).every(isJsonCompatibleValue);\n}\nexports.isJsonCompatibleDictionary = isJsonCompatibleDictionary;","map":{"version":3,"sources":["../src/compatibility.ts"],"names":[],"mappings":";;;;;;AAwBA,SAAgB,qBAAqB,CAAC,KAAc,EAAA;EAClD,IACE,OAAO,KAAK,KAAK,QAAQ,IACzB,OAAO,KAAK,KAAK,QAAQ,IACzB,OAAO,KAAK,KAAK,SAAS,IAC1B,KAAK,KAAK,IAAI;EACd;EACA,qBAAqB,CAAC,KAAK,CAAC;EAC5B;EACA,0BAA0B,CAAC,KAAK,CAAC,EACjC;IACA,OAAO,IAAI;GACZ,MAAM;IACL,OAAO,KAAK;EACb;AACH;AAfA,OAAA,CAAA,qBAAA,GAAA,qBAAA;AAiBA,SAAgB,qBAAqB,CAAC,KAAc,EAAA;EAClD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IACzB,OAAO,KAAK;EACb;EAED,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;IACxB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE;MAChC,OAAO,KAAK;IACb;EACF;EAED;EACA,OAAO,IAAI;AACb;AAbA,OAAA,CAAA,qBAAA,GAAA,qBAAA;AAeA,SAAgB,0BAA0B,CAAC,IAAa,EAAA;EACtD,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE;IAC7C;IACA,OAAO,KAAK;EACb;EAED;EACA;EACA;EACA,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,iBAAiB,EAAE;IAC9D,OAAO,KAAK;EACb;EAED,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,qBAAqB,CAAC;AACzD;AAdA,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonCompatibleDictionary = exports.isJsonCompatibleArray = exports.isJsonCompatibleValue = void 0;\nfunction isJsonCompatibleValue(value) {\n    if (typeof value === \"string\" ||\n        typeof value === \"number\" ||\n        typeof value === \"boolean\" ||\n        value === null ||\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        isJsonCompatibleArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        isJsonCompatibleDictionary(value)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.isJsonCompatibleValue = isJsonCompatibleValue;\nfunction isJsonCompatibleArray(value) {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    for (const item of value) {\n        if (!isJsonCompatibleValue(item)) {\n            return false;\n        }\n    }\n    // all items okay\n    return true;\n}\nexports.isJsonCompatibleArray = isJsonCompatibleArray;\nfunction isJsonCompatibleDictionary(data) {\n    if (typeof data !== \"object\" || data === null) {\n        // data must be a non-null object\n        return false;\n    }\n    // Exclude special kind of objects like Array, Date or Uint8Array\n    // Object.prototype.toString() returns a specified value:\n    // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring\n    if (Object.prototype.toString.call(data) !== \"[object Object]\") {\n        return false;\n    }\n    return Object.values(data).every(isJsonCompatibleValue);\n}\nexports.isJsonCompatibleDictionary = isJsonCompatibleDictionary;\n//# sourceMappingURL=compatibility.js.map"]},"metadata":{},"sourceType":"script"}