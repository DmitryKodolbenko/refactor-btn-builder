{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{ethers}from\"ethers\";var connectWalletAUR=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(setAurWalletKey){var provider,signer,userAddress;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://@ts-ignore\nprovider=new ethers.providers.Web3Provider(window.ethereum);_context.next=3;return provider.send(\"eth_requestAccounts\",[]);case 3:signer=provider.getSigner();_context.next=6;return signer.getAddress();case 6:userAddress=_context.sent;setAurWalletKey(userAddress);case 8:case\"end\":return _context.stop();}}},_callee);}));return function connectWalletAUR(_x){return _ref.apply(this,arguments);};}();export default connectWalletAUR;","map":{"version":3,"names":["ethers","connectWalletAUR","setAurWalletKey","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","getAddress","userAddress"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletAUR.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\n\nconst connectWalletAUR = async (setAurWalletKey: any)=>{\n\n  //@ts-ignore\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n  await provider.send(\"eth_requestAccounts\", []);\n  const signer = provider.getSigner();\n\n    let userAddress = await signer.getAddress();\n\n  setAurWalletKey(userAddress)\n\n}\nexport default connectWalletAUR"],"mappings":"sPAAA,OAASA,MAAM,KAAQ,QAAQ,CAG/B,GAAMC,iBAAgB,4FAAG,iBAAOC,eAAoB,oJAElD;AACMC,QAAQ,CAAG,GAAIH,OAAM,CAACI,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC,uBAE7DJ,SAAQ,CAACK,IAAI,CAAC,qBAAqB,CAAE,EAAE,CAAC,QACxCC,MAAM,CAAGN,QAAQ,CAACO,SAAS,EAAE,uBAETD,OAAM,CAACE,UAAU,EAAE,QAAvCC,WAAW,eAEjBV,eAAe,CAACU,WAAW,CAAC,uDAE7B,kBAZKX,iBAAgB,4CAYrB,CACD,cAAeA,iBAAgB"},"metadata":{},"sourceType":"module"}