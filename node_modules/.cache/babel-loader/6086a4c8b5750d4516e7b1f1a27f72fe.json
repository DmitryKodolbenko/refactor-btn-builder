{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultValueProducer = void 0;\n// allows pre-producing values before anyone is listening\nvar DefaultValueProducer = /*#__PURE__*/function () {\n  function DefaultValueProducer(value, callbacks) {\n    _classCallCheck(this, DefaultValueProducer);\n    this.callbacks = callbacks;\n    this.internalValue = value;\n  }\n  _createClass(DefaultValueProducer, [{\n    key: \"value\",\n    get: function get() {\n      return this.internalValue;\n    }\n    /**\n     * Update the current value.\n     *\n     * If producer is active (i.e. someone is listening), this emits an event.\n     * If not, just the current value is updated.\n     */\n  }, {\n    key: \"update\",\n    value: function update(value) {\n      this.internalValue = value;\n      if (this.listener) {\n        this.listener.next(value);\n      }\n    }\n    /**\n     * Produce an error\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  }, {\n    key: \"error\",\n    value: function error(_error) {\n      if (this.listener) {\n        this.listener.error(_error);\n      }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n  }, {\n    key: \"start\",\n    value: function start(listener) {\n      this.listener = listener;\n      listener.next(this.internalValue);\n      if (this.callbacks) {\n        this.callbacks.onStarted();\n      }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.callbacks) {\n        this.callbacks.onStop();\n      }\n      this.listener = undefined;\n    }\n  }]);\n  return DefaultValueProducer;\n}();\nexports.DefaultValueProducer = DefaultValueProducer;","map":{"version":3,"sources":["../src/defaultvalueproducer.ts"],"names":[],"mappings":";;;;;;;;AAOA;AAAA,IACa,oBAAoB;EAS/B,8BAAmB,KAAQ,EAAE,SAA0C,EAAA;IAAA;IACrE,IAAI,CAAC,SAAS,GAAG,SAAS;IAC1B,IAAI,CAAC,aAAa,GAAG,KAAK;EAC5B;EAAC;IAAA;IAAA,KAXD,eAAgB;MACd,OAAO,IAAI,CAAC,aAAa;IAC3B;IAWA;;;;;AAKG;EALH;IAAA;IAAA,OAMO,gBAAO,KAAQ,EAAA;MACpB,IAAI,CAAC,aAAa,GAAG,KAAK;MAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;MAC1B;IACH;IAEA;;AAEG;IACH;EAAA;IAAA;IAAA,OACO,eAAM,MAAU,EAAA;MACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAK,CAAC;MAC3B;IACH;IAEA;;AAEG;EAFH;IAAA;IAAA,OAGO,eAAM,QAAqB,EAAA;MAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ;MACxB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;MAEjC,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;MAC3B;IACH;IAEA;;AAEG;EAFH;IAAA;IAAA,OAGO,gBAAI;MACT,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;MACxB;MACD,IAAI,CAAC,QAAQ,GAAG,SAAS;IAC3B;EAAC;EAAA;AAAA;AAzDH,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultValueProducer = void 0;\n// allows pre-producing values before anyone is listening\nclass DefaultValueProducer {\n    constructor(value, callbacks) {\n        this.callbacks = callbacks;\n        this.internalValue = value;\n    }\n    get value() {\n        return this.internalValue;\n    }\n    /**\n     * Update the current value.\n     *\n     * If producer is active (i.e. someone is listening), this emits an event.\n     * If not, just the current value is updated.\n     */\n    update(value) {\n        this.internalValue = value;\n        if (this.listener) {\n            this.listener.next(value);\n        }\n    }\n    /**\n     * Produce an error\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    error(error) {\n        if (this.listener) {\n            this.listener.error(error);\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    start(listener) {\n        this.listener = listener;\n        listener.next(this.internalValue);\n        if (this.callbacks) {\n            this.callbacks.onStarted();\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    stop() {\n        if (this.callbacks) {\n            this.callbacks.onStop();\n        }\n        this.listener = undefined;\n    }\n}\nexports.DefaultValueProducer = DefaultValueProducer;\n//# sourceMappingURL=defaultvalueproducer.js.map"]},"metadata":{},"sourceType":"script"}