{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpApi = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst version = require('../../../package.json').version;\nconst blockIdExt = t.type({\n  '@type': t.literal('ton.blockIdExt'),\n  workchain: t.number,\n  shard: t.string,\n  seqno: t.number,\n  root_hash: t.string,\n  file_hash: t.string\n});\nconst addressInformation = t.type({\n  balance: t.union([t.number, t.string]),\n  state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n  data: t.string,\n  code: t.string,\n  last_transaction_id: t.type({\n    '@type': t.literal('internal.transactionId'),\n    lt: t.string,\n    hash: t.string\n  }),\n  block_id: blockIdExt,\n  sync_utime: t.number\n});\nconst bocResponse = t.type({\n  '@type': t.literal('ok')\n});\nconst feeResponse = t.type({\n  '@type': t.literal('query.fees'),\n  source_fees: t.type({\n    '@type': t.literal('fees'),\n    in_fwd_fee: t.number,\n    storage_fee: t.number,\n    gas_fee: t.number,\n    fwd_fee: t.number\n  })\n});\nconst callGetMethod = t.type({\n  gas_used: t.number,\n  exit_code: t.number,\n  stack: t.array(t.unknown)\n});\nconst messageData = t.union([t.type({\n  '@type': t.literal('msg.dataRaw'),\n  'body': t.string\n}), t.type({\n  '@type': t.literal('msg.dataText'),\n  'text': t.string\n}), t.type({\n  '@type': t.literal('msg.dataDecryptedText'),\n  'text': t.string\n}), t.type({\n  '@type': t.literal('msg.dataEncryptedText'),\n  'text': t.string\n})]);\nconst message = t.type({\n  source: t.string,\n  destination: t.string,\n  value: t.string,\n  fwd_fee: t.string,\n  ihr_fee: t.string,\n  created_lt: t.string,\n  body_hash: t.string,\n  msg_data: messageData\n});\nconst transaction = t.type({\n  data: t.string,\n  utime: t.number,\n  transaction_id: t.type({\n    lt: t.string,\n    hash: t.string\n  }),\n  fee: t.string,\n  storage_fee: t.string,\n  other_fee: t.string,\n  in_msg: t.union([t.undefined, message]),\n  out_msgs: t.array(message)\n});\nconst getTransactions = t.array(transaction);\nconst getMasterchain = t.type({\n  state_root_hash: t.string,\n  last: blockIdExt,\n  init: blockIdExt\n});\nconst getShards = t.type({\n  shards: t.array(blockIdExt)\n});\nconst blockShortTxt = t.type({\n  '@type': t.literal('blocks.shortTxId'),\n  mode: t.number,\n  account: t.string,\n  lt: t.string,\n  hash: t.string\n});\nconst getBlockTransactions = t.type({\n  id: blockIdExt,\n  req_count: t.number,\n  incomplete: t.boolean,\n  transactions: t.array(blockShortTxt)\n});\nclass TypedCache {\n  constructor(namespace, cache, codec, keyEncoder) {\n    this.namespace = namespace;\n    this.cache = cache;\n    this.codec = codec;\n    this.keyEncoder = keyEncoder;\n  }\n  async get(key) {\n    let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n    if (ex) {\n      let decoded = this.codec.decode(JSON.parse(ex));\n      if ((0, Either_1.isRight)(decoded)) {\n        return decoded.right;\n      }\n    }\n    return null;\n  }\n  async set(key, value) {\n    if (value !== null) {\n      await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n    } else {\n      await this.cache.set(this.namespace, this.keyEncoder(key), null);\n    }\n  }\n}\nclass HttpApi {\n  constructor(endpoint, cache, parameters) {\n    this.endpoint = endpoint;\n    this.cache = cache;\n    this.parameters = {\n      timeout: (parameters === null || parameters === void 0 ? void 0 : parameters.timeout) || 30000,\n      apiKey: parameters === null || parameters === void 0 ? void 0 : parameters.apiKey\n    };\n    // Shard\n    this.shardCache = new TypedCache('ton-shard', cache, t.array(blockIdExt), src => src + '');\n    this.shardLoader = new dataloader_1.default(async src => {\n      return await Promise.all(src.map(async v => {\n        const cached = await this.shardCache.get(v);\n        if (cached) {\n          return cached;\n        }\n        let loaded = (await this.doCall('shards', {\n          seqno: v\n        }, getShards)).shards;\n        await this.shardCache.set(v, loaded);\n        return loaded;\n      }));\n    });\n    // Shard Transactions\n    this.shardTransactionsCache = new TypedCache('ton-shard-tx', cache, getBlockTransactions, src => src.workchain + ':' + src.shard + ':' + src.seqno);\n    this.shardTransactionsLoader = new dataloader_1.default(async src => {\n      return await Promise.all(src.map(async v => {\n        const cached = await this.shardTransactionsCache.get(v);\n        if (cached) {\n          return cached;\n        }\n        let loaded = await this.doCall('getBlockTransactions', {\n          workchain: v.workchain,\n          seqno: v.seqno,\n          shard: v.shard\n        }, getBlockTransactions);\n        await this.shardTransactionsCache.set(v, loaded);\n        return loaded;\n      }));\n    }, {\n      cacheKeyFn: src => src.workchain + ':' + src.shard + ':' + src.seqno\n    });\n  }\n  getAddressInformation(address) {\n    return this.doCall('getAddressInformation', {\n      address: address.toString()\n    }, addressInformation);\n  }\n  async getTransactions(address, opts) {\n    const inclusive = opts.inclusive;\n    delete opts.inclusive;\n    // Convert hash\n    let hash = undefined;\n    if (opts.hash) {\n      hash = Buffer.from(opts.hash, 'base64').toString('hex');\n    }\n    // Adjust limit\n    let limit = opts.limit;\n    if (opts.hash && opts.lt && inclusive !== true) {\n      limit++;\n    }\n    // Do request\n    let res = await this.doCall('getTransactions', {\n      address: address.toString(),\n      ...opts,\n      limit,\n      hash\n    }, getTransactions);\n    if (res.length > limit) {\n      res = res.slice(0, limit);\n    }\n    // Adjust result\n    if (opts.hash && opts.lt && inclusive !== true) {\n      res.shift();\n      return res;\n    } else {\n      return res;\n    }\n  }\n  async getMasterchainInfo() {\n    return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n  }\n  async getShards(seqno) {\n    return await this.shardLoader.load(seqno);\n  }\n  async getBlockTransactions(workchain, seqno, shard) {\n    return await this.shardTransactionsLoader.load({\n      workchain,\n      seqno,\n      shard\n    });\n  }\n  async getTransaction(address, lt, hash) {\n    let convHash = Buffer.from(hash, 'base64').toString('hex');\n    let res = await this.doCall('getTransactions', {\n      address: address.toString(),\n      lt,\n      hash: convHash,\n      limit: 1\n    }, getTransactions);\n    let ex = res.find(v => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n    if (ex) {\n      return ex;\n    } else {\n      return null;\n    }\n  }\n  async callGetMethod(address, method, params) {\n    return await this.doCall('runGetMethod', {\n      address: address.toString(),\n      method,\n      stack: params\n    }, callGetMethod);\n  }\n  async sendBoc(body) {\n    await this.doCall('sendBoc', {\n      boc: body.toString('base64')\n    }, bocResponse);\n  }\n  async estimateFee(address, args) {\n    return await this.doCall('estimateFee', {\n      address: address.toFriendly(),\n      body: (await args.body.toBoc({\n        idx: false\n      })).toString('base64'),\n      'init_data': args.initData ? (await args.initData.toBoc({\n        idx: false\n      })).toString('base64') : '',\n      'init_code': args.initCode ? (await args.initCode.toBoc({\n        idx: false\n      })).toString('base64') : '',\n      ignore_chksig: args.ignoreSignature\n    }, feeResponse);\n  }\n  async doCall(method, body, codec) {\n    let headers = {\n      'Content-Type': 'application/json',\n      'X-Ton-Client-Version': version\n    };\n    if (this.parameters.apiKey) {\n      headers['X-API-Key'] = this.parameters.apiKey;\n    }\n    let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n      id: '1',\n      jsonrpc: '2.0',\n      method: method,\n      params: body\n    }), {\n      headers,\n      timeout: this.parameters.timeout\n    });\n    if (res.status !== 200 || !res.data.ok) {\n      throw Error('Received error: ' + JSON.stringify(res.data));\n    }\n    let decoded = codec.decode(res.data.result);\n    if ((0, Either_1.isRight)(decoded)) {\n      return decoded.right;\n    } else {\n      throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n    }\n  }\n}\nexports.HttpApi = HttpApi;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","HttpApi","t","require","Either_1","io_ts_reporters_1","dataloader_1","axios_1","version","blockIdExt","type","literal","workchain","number","shard","string","seqno","root_hash","file_hash","addressInformation","balance","union","state","data","code","last_transaction_id","lt","hash","block_id","sync_utime","bocResponse","feeResponse","source_fees","in_fwd_fee","storage_fee","gas_fee","fwd_fee","callGetMethod","gas_used","exit_code","stack","array","unknown","messageData","message","source","destination","ihr_fee","created_lt","body_hash","msg_data","transaction","utime","transaction_id","fee","other_fee","in_msg","out_msgs","getTransactions","getMasterchain","state_root_hash","last","init","getShards","shards","blockShortTxt","mode","account","getBlockTransactions","id","req_count","incomplete","boolean","transactions","TypedCache","constructor","namespace","cache","codec","keyEncoder","key","ex","decoded","decode","JSON","parse","isRight","right","set","stringify","endpoint","parameters","timeout","apiKey","shardCache","src","shardLoader","default","Promise","all","map","cached","loaded","doCall","shardTransactionsCache","shardTransactionsLoader","cacheKeyFn","getAddressInformation","address","toString","opts","inclusive","Buffer","from","limit","res","length","slice","shift","getMasterchainInfo","load","getTransaction","convHash","find","method","params","sendBoc","body","boc","estimateFee","args","toFriendly","toBoc","idx","initData","initCode","ignore_chksig","ignoreSignature","headers","post","jsonrpc","status","ok","Error","report","join"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/client/api/HttpApi.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpApi = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst version = require('../../../package.json').version;\nconst blockIdExt = t.type({\n    '@type': t.literal('ton.blockIdExt'),\n    workchain: t.number,\n    shard: t.string,\n    seqno: t.number,\n    root_hash: t.string,\n    file_hash: t.string\n});\nconst addressInformation = t.type({\n    balance: t.union([t.number, t.string]),\n    state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n    data: t.string,\n    code: t.string,\n    last_transaction_id: t.type({\n        '@type': t.literal('internal.transactionId'),\n        lt: t.string,\n        hash: t.string\n    }),\n    block_id: blockIdExt,\n    sync_utime: t.number\n});\nconst bocResponse = t.type({\n    '@type': t.literal('ok')\n});\nconst feeResponse = t.type({\n    '@type': t.literal('query.fees'),\n    source_fees: t.type({\n        '@type': t.literal('fees'),\n        in_fwd_fee: t.number,\n        storage_fee: t.number,\n        gas_fee: t.number,\n        fwd_fee: t.number\n    })\n});\nconst callGetMethod = t.type({\n    gas_used: t.number,\n    exit_code: t.number,\n    stack: t.array(t.unknown)\n});\nconst messageData = t.union([\n    t.type({\n        '@type': t.literal('msg.dataRaw'),\n        'body': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataDecryptedText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataEncryptedText'),\n        'text': t.string\n    })\n]);\nconst message = t.type({\n    source: t.string,\n    destination: t.string,\n    value: t.string,\n    fwd_fee: t.string,\n    ihr_fee: t.string,\n    created_lt: t.string,\n    body_hash: t.string,\n    msg_data: messageData\n});\nconst transaction = t.type({\n    data: t.string,\n    utime: t.number,\n    transaction_id: t.type({\n        lt: t.string,\n        hash: t.string\n    }),\n    fee: t.string,\n    storage_fee: t.string,\n    other_fee: t.string,\n    in_msg: t.union([t.undefined, message]),\n    out_msgs: t.array(message)\n});\nconst getTransactions = t.array(transaction);\nconst getMasterchain = t.type({\n    state_root_hash: t.string,\n    last: blockIdExt,\n    init: blockIdExt\n});\nconst getShards = t.type({\n    shards: t.array(blockIdExt)\n});\nconst blockShortTxt = t.type({\n    '@type': t.literal('blocks.shortTxId'),\n    mode: t.number,\n    account: t.string,\n    lt: t.string,\n    hash: t.string\n});\nconst getBlockTransactions = t.type({\n    id: blockIdExt,\n    req_count: t.number,\n    incomplete: t.boolean,\n    transactions: t.array(blockShortTxt)\n});\nclass TypedCache {\n    constructor(namespace, cache, codec, keyEncoder) {\n        this.namespace = namespace;\n        this.cache = cache;\n        this.codec = codec;\n        this.keyEncoder = keyEncoder;\n    }\n    async get(key) {\n        let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n        if (ex) {\n            let decoded = this.codec.decode(JSON.parse(ex));\n            if ((0, Either_1.isRight)(decoded)) {\n                return decoded.right;\n            }\n        }\n        return null;\n    }\n    async set(key, value) {\n        if (value !== null) {\n            await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n        }\n        else {\n            await this.cache.set(this.namespace, this.keyEncoder(key), null);\n        }\n    }\n}\nclass HttpApi {\n    constructor(endpoint, cache, parameters) {\n        this.endpoint = endpoint;\n        this.cache = cache;\n        this.parameters = {\n            timeout: (parameters === null || parameters === void 0 ? void 0 : parameters.timeout) || 30000,\n            apiKey: parameters === null || parameters === void 0 ? void 0 : parameters.apiKey\n        };\n        // Shard\n        this.shardCache = new TypedCache('ton-shard', cache, t.array(blockIdExt), (src) => src + '');\n        this.shardLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = (await this.doCall('shards', { seqno: v }, getShards)).shards;\n                await this.shardCache.set(v, loaded);\n                return loaded;\n            }));\n        });\n        // Shard Transactions\n        this.shardTransactionsCache = new TypedCache('ton-shard-tx', cache, getBlockTransactions, (src) => src.workchain + ':' + src.shard + ':' + src.seqno);\n        this.shardTransactionsLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardTransactionsCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = await this.doCall('getBlockTransactions', { workchain: v.workchain, seqno: v.seqno, shard: v.shard }, getBlockTransactions);\n                await this.shardTransactionsCache.set(v, loaded);\n                return loaded;\n            }));\n        }, { cacheKeyFn: (src) => src.workchain + ':' + src.shard + ':' + src.seqno });\n    }\n    getAddressInformation(address) {\n        return this.doCall('getAddressInformation', { address: address.toString() }, addressInformation);\n    }\n    async getTransactions(address, opts) {\n        const inclusive = opts.inclusive;\n        delete opts.inclusive;\n        // Convert hash\n        let hash = undefined;\n        if (opts.hash) {\n            hash = Buffer.from(opts.hash, 'base64').toString('hex');\n        }\n        // Adjust limit\n        let limit = opts.limit;\n        if (opts.hash && opts.lt && inclusive !== true) {\n            limit++;\n        }\n        // Do request\n        let res = await this.doCall('getTransactions', { address: address.toString(), ...opts, limit, hash }, getTransactions);\n        if (res.length > limit) {\n            res = res.slice(0, limit);\n        }\n        // Adjust result\n        if (opts.hash && opts.lt && inclusive !== true) {\n            res.shift();\n            return res;\n        }\n        else {\n            return res;\n        }\n    }\n    async getMasterchainInfo() {\n        return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n    }\n    async getShards(seqno) {\n        return await this.shardLoader.load(seqno);\n    }\n    async getBlockTransactions(workchain, seqno, shard) {\n        return await this.shardTransactionsLoader.load({ workchain, seqno, shard });\n    }\n    async getTransaction(address, lt, hash) {\n        let convHash = Buffer.from(hash, 'base64').toString('hex');\n        let res = await this.doCall('getTransactions', { address: address.toString(), lt, hash: convHash, limit: 1 }, getTransactions);\n        let ex = res.find((v) => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n        if (ex) {\n            return ex;\n        }\n        else {\n            return null;\n        }\n    }\n    async callGetMethod(address, method, params) {\n        return await this.doCall('runGetMethod', { address: address.toString(), method, stack: params }, callGetMethod);\n    }\n    async sendBoc(body) {\n        await this.doCall('sendBoc', { boc: body.toString('base64') }, bocResponse);\n    }\n    async estimateFee(address, args) {\n        return await this.doCall('estimateFee', {\n            address: address.toFriendly(),\n            body: (await args.body.toBoc({ idx: false })).toString('base64'),\n            'init_data': args.initData ? (await args.initData.toBoc({ idx: false })).toString('base64') : '',\n            'init_code': args.initCode ? (await args.initCode.toBoc({ idx: false })).toString('base64') : '',\n            ignore_chksig: args.ignoreSignature\n        }, feeResponse);\n    }\n    async doCall(method, body, codec) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'X-Ton-Client-Version': version,\n        };\n        if (this.parameters.apiKey) {\n            headers['X-API-Key'] = this.parameters.apiKey;\n        }\n        let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n            id: '1',\n            jsonrpc: '2.0',\n            method: method,\n            params: body\n        }), {\n            headers,\n            timeout: this.parameters.timeout,\n        });\n        if (res.status !== 200 || !res.data.ok) {\n            throw Error('Received error: ' + JSON.stringify(res.data));\n        }\n        let decoded = codec.decode(res.data.result);\n        if ((0, Either_1.isRight)(decoded)) {\n            return decoded.right;\n        }\n        else {\n            throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n        }\n    }\n}\nexports.HttpApi = HttpApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}