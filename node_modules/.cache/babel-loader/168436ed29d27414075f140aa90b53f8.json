{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\nvar _toConsumableArray = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;\n/**\n * RPC methods as documented in https://docs.tendermint.com/master/rpc/\n *\n * Enum raw value must match the spelling in the \"shell\" example call (snake_case)\n */\nvar Method;\n(function (Method) {\n  Method[\"AbciInfo\"] = \"abci_info\";\n  Method[\"AbciQuery\"] = \"abci_query\";\n  Method[\"Block\"] = \"block\";\n  /** Get block headers for minHeight <= height <= maxHeight. */\n  Method[\"Blockchain\"] = \"blockchain\";\n  Method[\"BlockResults\"] = \"block_results\";\n  Method[\"BlockSearch\"] = \"block_search\";\n  Method[\"BroadcastTxAsync\"] = \"broadcast_tx_async\";\n  Method[\"BroadcastTxSync\"] = \"broadcast_tx_sync\";\n  Method[\"BroadcastTxCommit\"] = \"broadcast_tx_commit\";\n  Method[\"Commit\"] = \"commit\";\n  Method[\"Genesis\"] = \"genesis\";\n  Method[\"Health\"] = \"health\";\n  Method[\"NumUnconfirmedTxs\"] = \"num_unconfirmed_txs\";\n  Method[\"Status\"] = \"status\";\n  Method[\"Subscribe\"] = \"subscribe\";\n  Method[\"Tx\"] = \"tx\";\n  Method[\"TxSearch\"] = \"tx_search\";\n  Method[\"Validators\"] = \"validators\";\n  Method[\"Unsubscribe\"] = \"unsubscribe\";\n})(Method = exports.Method || (exports.Method = {}));\n/**\n * Raw values must match the tendermint event name\n *\n * @see https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n */\nvar SubscriptionEventType;\n(function (SubscriptionEventType) {\n  SubscriptionEventType[\"NewBlock\"] = \"NewBlock\";\n  SubscriptionEventType[\"NewBlockHeader\"] = \"NewBlockHeader\";\n  SubscriptionEventType[\"Tx\"] = \"Tx\";\n})(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));\nfunction buildQuery(components) {\n  var tags = components.tags ? components.tags : [];\n  var tagComponents = tags.map(function (tag) {\n    return \"\".concat(tag.key, \"='\").concat(tag.value, \"'\");\n  });\n  var rawComponents = components.raw ? [components.raw] : [];\n  return [].concat(_toConsumableArray(tagComponents), rawComponents).join(\" AND \");\n}\nexports.buildQuery = buildQuery;","map":{"version":3,"sources":["../../src/tendermint34/requests.ts"],"names":[],"mappings":";;AAAA;AAAA;;;;;AAEA;;;;AAIG;AACH,IAAY,MAqBX;AArBD,CAAA,UAAY,MAAM,EAAA;EAChB,MAAA,CAAA,UAAA,CAAA,GAAA,WAAsB;EACtB,MAAA,CAAA,WAAA,CAAA,GAAA,YAAwB;EACxB,MAAA,CAAA,OAAA,CAAA,GAAA,OAAe;EACf;EACA,MAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;EACzB,MAAA,CAAA,cAAA,CAAA,GAAA,eAA8B;EAC9B,MAAA,CAAA,aAAA,CAAA,GAAA,cAA4B;EAC5B,MAAA,CAAA,kBAAA,CAAA,GAAA,oBAAuC;EACvC,MAAA,CAAA,iBAAA,CAAA,GAAA,mBAAqC;EACrC,MAAA,CAAA,mBAAA,CAAA,GAAA,qBAAyC;EACzC,MAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,MAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;EACnB,MAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,MAAA,CAAA,mBAAA,CAAA,GAAA,qBAAyC;EACzC,MAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,MAAA,CAAA,WAAA,CAAA,GAAA,WAAuB;EACvB,MAAA,CAAA,IAAA,CAAA,GAAA,IAAS;EACT,MAAA,CAAA,UAAA,CAAA,GAAA,WAAsB;EACtB,MAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;EACzB,MAAA,CAAA,aAAA,CAAA,GAAA,aAA2B;AAC7B,CAAC,EArBW,MAAM,GAAN,OAAA,CAAA,MAAM,KAAN,OAAA,CAAA,MAAM,GAAA,CAAA,CAAA,CAAA,CAAA;AAwClB;;;;AAIG;AACH,IAAY,qBAIX;AAJD,CAAA,UAAY,qBAAqB,EAAA;EAC/B,qBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;EACrB,qBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC;EACjC,qBAAA,CAAA,IAAA,CAAA,GAAA,IAAS;AACX,CAAC,EAJW,qBAAqB,GAArB,OAAA,CAAA,qBAAqB,KAArB,OAAA,CAAA,qBAAqB,GAAA,CAAA,CAAA,CAAA,CAAA;AAqJjC,SAAgB,UAAU,CAAC,UAAgC,EAAA;EACzD,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,GAAG,EAAE;EACnD,IAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;IAAA,iBAAQ,GAAG,CAAC,GAAG,eAAK,GAAG,CAAC,KAAK;EAAA,CAAG,CAAC;EACpE,IAAM,aAAa,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE;EAE5D,OAAO,6BAAI,aAAa,GAAK,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC;AAC3D;AANA,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/* eslint-disable @typescript-eslint/naming-convention */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;\n/**\n * RPC methods as documented in https://docs.tendermint.com/master/rpc/\n *\n * Enum raw value must match the spelling in the \"shell\" example call (snake_case)\n */\nvar Method;\n(function (Method) {\n    Method[\"AbciInfo\"] = \"abci_info\";\n    Method[\"AbciQuery\"] = \"abci_query\";\n    Method[\"Block\"] = \"block\";\n    /** Get block headers for minHeight <= height <= maxHeight. */\n    Method[\"Blockchain\"] = \"blockchain\";\n    Method[\"BlockResults\"] = \"block_results\";\n    Method[\"BlockSearch\"] = \"block_search\";\n    Method[\"BroadcastTxAsync\"] = \"broadcast_tx_async\";\n    Method[\"BroadcastTxSync\"] = \"broadcast_tx_sync\";\n    Method[\"BroadcastTxCommit\"] = \"broadcast_tx_commit\";\n    Method[\"Commit\"] = \"commit\";\n    Method[\"Genesis\"] = \"genesis\";\n    Method[\"Health\"] = \"health\";\n    Method[\"NumUnconfirmedTxs\"] = \"num_unconfirmed_txs\";\n    Method[\"Status\"] = \"status\";\n    Method[\"Subscribe\"] = \"subscribe\";\n    Method[\"Tx\"] = \"tx\";\n    Method[\"TxSearch\"] = \"tx_search\";\n    Method[\"Validators\"] = \"validators\";\n    Method[\"Unsubscribe\"] = \"unsubscribe\";\n})(Method = exports.Method || (exports.Method = {}));\n/**\n * Raw values must match the tendermint event name\n *\n * @see https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n */\nvar SubscriptionEventType;\n(function (SubscriptionEventType) {\n    SubscriptionEventType[\"NewBlock\"] = \"NewBlock\";\n    SubscriptionEventType[\"NewBlockHeader\"] = \"NewBlockHeader\";\n    SubscriptionEventType[\"Tx\"] = \"Tx\";\n})(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));\nfunction buildQuery(components) {\n    const tags = components.tags ? components.tags : [];\n    const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);\n    const rawComponents = components.raw ? [components.raw] : [];\n    return [...tagComponents, ...rawComponents].join(\" AND \");\n}\nexports.buildQuery = buildQuery;\n//# sourceMappingURL=requests.js.map"]},"metadata":{},"sourceType":"script"}