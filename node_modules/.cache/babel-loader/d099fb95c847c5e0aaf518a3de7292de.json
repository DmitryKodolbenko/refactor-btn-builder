{"ast":null,"code":"const {\n  Cell\n} = require(\"../../boc\");\nconst {\n  Contract\n} = require(\"../index.js\");\nconst {\n  Address,\n  bytesToHex,\n  BN,\n  toNano\n} = require(\"../../utils\");\nconst {\n  WalletContract\n} = require(\"./WalletContract\");\nclass WalletV4ContractR2 extends WalletContract {\n  /**\n   * @param provider    {HttpProvider}\n   * @param options {any}\n   */\n  constructor(provider, options) {\n    options.code = Cell.oneFromBocn    super(provider, options);\n    if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n    this.methods.deployAndInstallPlugin = params => Contract.createMethod(provider, this.deployAndInstallPlugin(params));\n    this.methods.installPlugin = params => Contract.createMethod(provider, this.installPlugin(params));\n    this.methods.removePlugin = params => Contract.createMethod(provider, this.removePlugin(params));\n    this.methods.getPublicKey = this.getPublicKey.bind(this);\n    this.methods.getWalletId = this.getWalletId.bind(this);\n    this.methods.isPluginInstalled = this.isPluginInstalled.bind(this);\n    this.methods.getPluginsList = this.getPluginsList.bind(this);\n  }\n  getName() {\n    return 'v4R2';\n  }\n\n  /**\n   * @override\n   * @private\n   * @param   seqno?   {number}\n   * @param   withoutOp? {boolean}\n   * @return {Cell}\n   */\n  createSigningMessage(seqno, withoutOp) {\n    seqno = seqno || 0;\n    const message = new Cell();\n    message.bits.writeUint(this.options.walletId, 32);\n    if (seqno === 0) {\n      // message.bits.writeInt(-1, 32);// todo: dont work\n      for (let i = 0; i < 32; i++) {\n        message.bits.writeBit(1);\n      }\n    } else {\n      const date = new Date();\n      const timestamp = Math.floor(date.getTime() / 1e3);\n      message.bits.writeUint(timestamp + 60, 32);\n    }\n    message.bits.writeUint(seqno, 32);\n    if (!withoutOp) {\n      message.bits.writeUint(0, 8); // op\n    }\n\n    return message;\n  }\n\n  /**\n   * @override\n   * @return {Cell} cell contains wallet data\n   */\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeUint(0, 32); // seqno\n    cell.bits.writeUint(this.options.walletId, 32);\n    cell.bits.writeBytes(this.options.publicKey);\n    cell.bits.writeUint(0, 1); // plugins dict empty\n    return cell;\n  }\n\n  /**\n   * @param   params {{secretKey: Uint8Array, seqno: number, pluginWc: number, amount: BN, stateInit: Cell, body: Cell}}\n   */\n  async deployAndInstallPlugin(params) {\n    const {\n      secretKey,\n      seqno,\n      pluginWc,\n      amount,\n      stateInit,\n      body\n    } = params;\n    const signingMessage = this.createSigningMessage(seqno, true);\n    signingMessage.bits.writeUint(1, 8); // op\n    signingMessage.bits.writeInt(pluginWc, 8);\n    signingMessage.bits.writeGrams(amount);\n    signingMessage.refs.push(stateInit);\n    signingMessage.refs.push(body);\n    return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n  }\n\n  /**\n   * @private\n   * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n   * @param   isInstall {boolean} install or uninstall\n   */\n  async _setPlugin(params, isInstall) {\n    const {\n      secretKey,\n      seqno,\n      amount,\n      queryId\n    } = params;\n    const pluginAddress = new Address(params.pluginAddress);\n    const signingMessage = this.createSigningMessage(seqno, true);\n    signingMessage.bits.writeUint(isInstall ? 2 : 3, 8); // op\n    signingMessage.bits.writeInt(pluginAddress.wc, 8);\n    signingMessage.bits.writeBytes(pluginAddress.hashPart);\n    signingMessage.bits.writeGrams(amount || toNano(0.1));\n    signingMessage.bits.writeUint(queryId || 0, 64);\n    return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n  }\n\n  /**\n   * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n   */\n  async installPlugin(params) {\n    return this._setPlugin(params, true);\n  }\n\n  /**\n   * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n   */\n  async removePlugin(params) {\n    return this._setPlugin(params, false);\n  }\n\n  /**\n   * @return {Promise<number>}\n   */\n  async getWalletId() {\n    const myAddress = await this.getAddress();\n    const id = await this.provider.call2(myAddress.toString(), 'get_subwallet_id');\n    return id.toNumber();\n  }\n\n  /**\n   * @return {Promise<BN>}\n   */\n  async getPublicKey() {\n    const myAddress = await this.getAddress();\n    return this.provider.call2(myAddress.toString(), 'get_public_key');\n  }\n\n  /**\n   * @param pluginAddress {string | Address}\n   * @return {Promise<boolean>}\n   */\n  async isPluginInstalled(pluginAddress) {\n    pluginAddress = new Address(pluginAddress);\n    const hashPart = '0x' + bytesToHex(pluginAddress.hashPart);\n    const myAddress = await this.getAddress();\n    const result = await this.provider.call2(myAddress.toString(), 'is_plugin_installed', [['num', pluginAddress.wc], ['num', hashPart]]);\n    return !result.isZero();\n  }\n\n  /**\n   * @return {Promise<string[]>} plugins addresses\n   */\n  async getPluginsList() {\n    const parseAddress = tuple => tuple[0].toNumber() + ':' + tuple[1].toString(16);\n    const myAddress = await this.getAddress();\n    const result = await this.provider.call2(myAddress.toString(), 'get_plugin_list');\n    return result.map(parseAddress);\n  }\n}\nmodule.exports = {\n  WalletV4ContractR2\n};","map":{"version":3,"names":["Cell","require","Contract","Address","bytesToHex","BN","toNano","WalletContract","WalletV4ContractR2","constructor","provider","options","code","oneFromBoc","walletId","wc","methods","deployAndInstallPlugin","params","createMethod","installPlugin","removePlugin","getPublicKey","bind","getWalletId","isPluginInstalled","getPluginsList","getName","createSigningMessage","seqno","withoutOp","message","bits","writeUint","i","writeBit","date","Date","timestamp","Math","floor","getTime","createDataCell","cell","writeBytes","publicKey","secretKey","pluginWc","amount","stateInit","body","signingMessage","writeInt","writeGrams","refs","push","createExternalMessage","_setPlugin","isInstall","queryId","pluginAddress","hashPart","myAddress","getAddress","id","call2","toString","toNumber","result","isZero","parseAddress","tuple","map","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/contract/wallet/WalletContractV4R2.js"],"sourcesContent":["const {Cell} = require(\"../../boc\");\nconst {Contract} = require(\"../index.js\");\nconst {Address, bytesToHex, BN, toNano} = require(\"../../utils\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV4ContractR2 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n\n        this.methods.deployAndInstallPlugin = (params) => Contract.createMethod(provider, this.deployAndInstallPlugin(params));\n        this.methods.installPlugin = (params) => Contract.createMethod(provider, this.installPlugin(params));\n        this.methods.removePlugin = (params) => Contract.createMethod(provider, this.removePlugin(params));\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n        this.methods.getWalletId = this.getWalletId.bind(this);\n        this.methods.isPluginInstalled = this.isPluginInstalled.bind(this);\n        this.methods.getPluginsList = this.getPluginsList.bind(this);\n    }\n\n    getName() {\n        return 'v4R2';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        if (!withoutOp) {\n            message.bits.writeUint(0, 8); // op\n        }\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32); // seqno\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        cell.bits.writeUint(0, 1); // plugins dict empty\n        return cell;\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginWc: number, amount: BN, stateInit: Cell, body: Cell}}\n     */\n    async deployAndInstallPlugin(params) {\n        const {secretKey, seqno, pluginWc, amount, stateInit, body} = params;\n\n        const signingMessage = this.createSigningMessage(seqno, true);\n        signingMessage.bits.writeUint(1, 8); // op\n        signingMessage.bits.writeInt(pluginWc, 8);\n        signingMessage.bits.writeGrams(amount);\n        signingMessage.refs.push(stateInit);\n        signingMessage.refs.push(body);\n        return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n    }\n\n    /**\n     * @private\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     * @param   isInstall {boolean} install or uninstall\n     */\n    async _setPlugin(params, isInstall) {\n        const {secretKey, seqno, amount, queryId} = params;\n        const pluginAddress = new Address(params.pluginAddress);\n\n        const signingMessage = this.createSigningMessage(seqno, true);\n        signingMessage.bits.writeUint(isInstall ? 2 : 3, 8); // op\n        signingMessage.bits.writeInt(pluginAddress.wc, 8);\n        signingMessage.bits.writeBytes(pluginAddress.hashPart);\n        signingMessage.bits.writeGrams(amount || toNano(0.1));\n        signingMessage.bits.writeUint(queryId || 0, 64);\n\n        return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n    async installPlugin(params) {\n        return this._setPlugin(params, true);\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n    async removePlugin(params) {\n        return this._setPlugin(params, false);\n    }\n\n    /**\n     * @return {Promise<number>}\n     */\n    async getWalletId() {\n        const myAddress = await this.getAddress();\n        const id = await this.provider.call2(myAddress.toString(), 'get_subwallet_id');\n        return id.toNumber();\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n\n    /**\n     * @param pluginAddress {string | Address}\n     * @return {Promise<boolean>}\n     */\n    async isPluginInstalled(pluginAddress) {\n        pluginAddress = new Address(pluginAddress);\n        const hashPart = '0x' + bytesToHex(pluginAddress.hashPart);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'is_plugin_installed', [['num', pluginAddress.wc], ['num', hashPart]]);\n        return !result.isZero();\n    }\n\n    /**\n     * @return {Promise<string[]>} plugins addresses\n     */\n    async getPluginsList() {\n        const parseAddress = tuple => tuple[0].toNumber() + ':' + tuple[1].toString(16);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_plugin_list');\n        return result.map(parseAddress);\n    }\n}\n\nmodule.exports = {WalletV4ContractR2};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}