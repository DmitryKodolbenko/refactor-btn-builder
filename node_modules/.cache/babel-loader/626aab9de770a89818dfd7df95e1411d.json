{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\nfunction isEd25519Pubkey(pubkey) {\n  return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\nexports.isEd25519Pubkey = isEd25519Pubkey;\nfunction isSecp256k1Pubkey(pubkey) {\n  return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n  secp256k1: \"tendermint/PubKeySecp256k1\",\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n  ed25519: \"tendermint/PubKeyEd25519\",\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n  sr25519: \"tendermint/PubKeySr25519\",\n  multisigThreshold: \"tendermint/PubKeyMultisigThreshold\"\n};\nfunction isSinglePubkey(pubkey) {\n  var singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n  return singPubkeyTypes.includes(pubkey.type);\n}\nexports.isSinglePubkey = isSinglePubkey;\nfunction isMultisigThresholdPubkey(pubkey) {\n  return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;","map":{"version":3,"sources":["../src/pubkeys.ts"],"names":[],"mappings":";;;;;;AAaA,SAAgB,eAAe,CAAC,MAAc,EAAA;EAC5C,OAAQ,MAAwB,CAAC,IAAI,KAAK,0BAA0B;AACtE;AAFA,OAAA,CAAA,eAAA,GAAA,eAAA;AASA,SAAgB,iBAAiB,CAAC,MAAc,EAAA;EAC9C,OAAQ,MAA0B,CAAC,IAAI,KAAK,4BAA4B;AAC1E;AAFA,OAAA,CAAA,iBAAA,GAAA,iBAAA;AAIa,OAAA,CAAA,UAAU,GAAG;EACxB;EACA,SAAS,EAAE,4BAAqC;EAChD;EACA,OAAO,EAAE,0BAAmC;EAC5C;EACA,OAAO,EAAE,0BAAmC;EAC5C,iBAAiB,EAAE;CACpB;AAoBD,SAAgB,cAAc,CAAC,MAAc,EAAA;EAC3C,IAAM,eAAe,GAAa,CAAC,OAAA,CAAA,UAAU,CAAC,OAAO,EAAE,OAAA,CAAA,UAAU,CAAC,SAAS,EAAE,OAAA,CAAA,UAAU,CAAC,OAAO,CAAC;EAChG,OAAO,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9C;AAHA,OAAA,CAAA,cAAA,GAAA,cAAA;AAcA,SAAgB,yBAAyB,CAAC,MAAc,EAAA;EACtD,OAAQ,MAAkC,CAAC,IAAI,KAAK,oCAAoC;AAC1F;AAFA,OAAA,CAAA,yBAAA,GAAA,yBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\nfunction isEd25519Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\nexports.isEd25519Pubkey = isEd25519Pubkey;\nfunction isSecp256k1Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n    secp256k1: \"tendermint/PubKeySecp256k1\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n    ed25519: \"tendermint/PubKeyEd25519\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n    sr25519: \"tendermint/PubKeySr25519\",\n    multisigThreshold: \"tendermint/PubKeyMultisigThreshold\",\n};\nfunction isSinglePubkey(pubkey) {\n    const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n    return singPubkeyTypes.includes(pubkey.type);\n}\nexports.isSinglePubkey = isSinglePubkey;\nfunction isMultisigThresholdPubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;\n//# sourceMappingURL=pubkeys.js.map"]},"metadata":{},"sourceType":"script"}