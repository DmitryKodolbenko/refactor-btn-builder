{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNetworkPreset = exports.resolveWalletUrl = void 0;\nvar envConfig_1 = require(\"../envConfig\");\nvar resolveWalletUrl = function resolveWalletUrl(network, walletUrl) {\n  if (walletUrl) {\n    return walletUrl;\n  }\n  var base = envConfig_1.envConfig.wallet_base_url;\n  switch (network) {\n    case \"mainnet\":\n      return \"\".concat(base, \"/connect/mainnet\");\n    case \"testnet\":\n      return \"\".concat(base, \"/connect/testnet\");\n    case \"betanet\":\n      return \"\".concat(base, \"/connect/betanet\");\n    default:\n      throw new Error(\"Invalid wallet URL\");\n  }\n};\nexports.resolveWalletUrl = resolveWalletUrl;\nvar getNetworkPreset = function getNetworkPreset(networkId) {\n  switch (networkId) {\n    case \"mainnet\":\n      return {\n        networkId: networkId,\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.near.org\"\n      };\n    case \"testnet\":\n      return {\n        networkId: networkId,\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\"\n      };\n    case \"betanet\":\n      return {\n        networkId: networkId,\n        nodeUrl: \"https://rpc.betanet.near.org\",\n        helperUrl: \"https://helper.betanet.near.org\",\n        explorerUrl: \"https://explorer.betanet.near.org\"\n      };\n    default:\n      throw Error(\"Failed to find config for: '\".concat(networkId, \"'\"));\n  }\n};\nexports.getNetworkPreset = getNetworkPreset;","map":{"version":3,"sources":["meteor-sdk/src/utils/MeteorSdkUtils.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAEO,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,OAAe,EAAE,SAAkB,EAAI;EACtE,IAAI,SAAS,EAAE;IACb,OAAO,SAAS;EACjB;EAED,IAAM,IAAI,GAAG,WAAA,CAAA,SAAS,CAAC,eAAe;EAEtC,QAAQ,OAAO;IACb,KAAK,SAAS;MACZ,iBAAU,IAAI;IAChB,KAAK,SAAS;MACZ,iBAAU,IAAI;IAChB,KAAK,SAAS;MACZ,iBAAU,IAAI;IAChB;MACE,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC;EAAC;AAE5C,CAAC;AAjBY,OAAA,CAAA,gBAAgB,GAAA,gBAAA;AA0BtB,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,SAAiB,EAAoB;EACpE,QAAQ,SAAS;IACf,KAAK,SAAS;MACZ,OAAO;QACL,SAAS,EAAT,SAAS;QACT,OAAO,EAAE,8BAA8B;QACvC,SAAS,EAAE,iCAAiC;QAC5C,WAAW,EAAE;OACd;IACH,KAAK,SAAS;MACZ,OAAO;QACL,SAAS,EAAT,SAAS;QACT,OAAO,EAAE,8BAA8B;QACvC,SAAS,EAAE,iCAAiC;QAC5C,WAAW,EAAE;OACd;IACH,KAAK,SAAS;MACZ,OAAO;QACL,SAAS,EAAT,SAAS;QACT,OAAO,EAAE,8BAA8B;QACvC,SAAS,EAAE,iCAAiC;QAC5C,WAAW,EAAE;OACd;IACH;MACE,MAAM,KAAK,uCAAgC,SAAS,OAAI;EAAC;AAE/D,CAAC;AA1BY,OAAA,CAAA,gBAAgB,GAAA,gBAAA","sourceRoot":"./src/","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getNetworkPreset = exports.resolveWalletUrl = void 0;\r\nconst envConfig_1 = require(\"../envConfig\");\r\nconst resolveWalletUrl = (network, walletUrl) => {\r\n    if (walletUrl) {\r\n        return walletUrl;\r\n    }\r\n    const base = envConfig_1.envConfig.wallet_base_url;\r\n    switch (network) {\r\n        case \"mainnet\":\r\n            return `${base}/connect/mainnet`;\r\n        case \"testnet\":\r\n            return `${base}/connect/testnet`;\r\n        case \"betanet\":\r\n            return `${base}/connect/betanet`;\r\n        default:\r\n            throw new Error(\"Invalid wallet URL\");\r\n    }\r\n};\r\nexports.resolveWalletUrl = resolveWalletUrl;\r\nconst getNetworkPreset = (networkId) => {\r\n    switch (networkId) {\r\n        case \"mainnet\":\r\n            return {\r\n                networkId,\r\n                nodeUrl: \"https://rpc.mainnet.near.org\",\r\n                helperUrl: \"https://helper.mainnet.near.org\",\r\n                explorerUrl: \"https://explorer.near.org\",\r\n            };\r\n        case \"testnet\":\r\n            return {\r\n                networkId,\r\n                nodeUrl: \"https://rpc.testnet.near.org\",\r\n                helperUrl: \"https://helper.testnet.near.org\",\r\n                explorerUrl: \"https://explorer.testnet.near.org\",\r\n            };\r\n        case \"betanet\":\r\n            return {\r\n                networkId,\r\n                nodeUrl: \"https://rpc.betanet.near.org\",\r\n                helperUrl: \"https://helper.betanet.near.org\",\r\n                explorerUrl: \"https://explorer.betanet.near.org\",\r\n            };\r\n        default:\r\n            throw Error(`Failed to find config for: '${networkId}'`);\r\n    }\r\n};\r\nexports.getNetworkPreset = getNetworkPreset;\r\n//# sourceMappingURL=MeteorSdkUtils.js.map"]},"metadata":{},"sourceType":"script"}