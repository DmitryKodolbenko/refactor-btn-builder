{"ast":null,"code":"/**\n * @description Internal helper to check if parameter is a string\n * @function isString\n * @param {*} str\n * @returns {boolean}\n */\nvar isString = function isString(str) {\n  return typeof str === 'string' || str instanceof String;\n};\n\n/**\n * @description Internal helper to check if string is empty\n * @function isStringEmpty\n * @param {*} str\n * @returns {boolean}\n */\nvar isStringEmpty = function isStringEmpty(str) {\n  if (!isString(str)) return false;\n  return str.length == 0;\n};\n\n/**\n * @description Internal helper to check if parameter is a date\n * @function isDate\n * @param {*} date\n * @returns {boolean}\n */\nvar isDate = function isDate(date) {\n  if (isString(date) || isArray(date) || date == undefined || date == null) return false;\n  return date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\n};\n\n/**\n * @description Internal helper to check if parameter is an object\n * @function isObject\n * @param {*} obj\n * @returns {boolean}\n */\nvar isObject = function isObject(obj) {\n  if (isArray(obj) || isDate(obj)) return false;\n  return obj !== null && typeof obj === 'object';\n};\n\n/**\n * @description Internal helper to check if parameter is a number\n * @function isNumber\n * @param {*} num\n * @returns {boolean}\n */\nvar isNumber = function isNumber(num) {\n  return !isNaN(num) && !isNaN(parseInt(num));\n};\n\n/**\n * @description Internal helper to check if parameter is an array\n * @function isArray\n * @param {*} arr\n * @returns {boolean}\n */\nvar isArray = function isArray(arr) {\n  return Array.isArray(arr);\n};\n\n/**\n * @description Internal helper to emit a warning to the console\n * @function _WARN_\n * @param {string} title\n * @param {string} detail\n * @returns {boolean}\n */\nvar _WARN_ = function _WARN_() {\n  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  process.emitWarning(title, {\n    detail: detail,\n    code: 'CoinGecko'\n  });\n  return true;\n};\n\n//\n\nmodule.exports = {\n  isString: isString,\n  isStringEmpty: isStringEmpty,\n  isDate: isDate,\n  isObject: isObject,\n  isNumber: isNumber,\n  isArray: isArray,\n  _WARN_: _WARN_\n};","map":{"version":3,"names":["isString","str","String","isStringEmpty","length","isDate","date","isArray","undefined","Object","prototype","toString","call","isNaN","isObject","obj","isNumber","num","parseInt","arr","Array","_WARN_","title","detail","process","emitWarning","code","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/coingecko-api/lib/helpers/utilities.js"],"sourcesContent":["/**\n * @description Internal helper to check if parameter is a string\n * @function isString\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return (typeof str === 'string' || str instanceof String);\n};\n\n/**\n * @description Internal helper to check if string is empty\n * @function isStringEmpty\n * @param {*} str\n * @returns {boolean}\n */\nconst isStringEmpty = (str) => {\n  if (!isString(str)) return false;\n  return (str.length == 0);\n};\n\n/**\n * @description Internal helper to check if parameter is a date\n * @function isDate\n * @param {*} date\n * @returns {boolean}\n */\nconst isDate = (date) => {\n  if (isString(date) || isArray(date) || date == undefined || date == null) return false;\n  return (date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date));\n};\n\n/**\n * @description Internal helper to check if parameter is an object\n * @function isObject\n * @param {*} obj\n * @returns {boolean}\n */\nconst isObject = (obj) => {\n  if (isArray(obj) || isDate(obj)) return false;\n  return (obj !== null && typeof obj === 'object');\n};\n\n/**\n * @description Internal helper to check if parameter is a number\n * @function isNumber\n * @param {*} num\n * @returns {boolean}\n */\nconst isNumber = (num) => {\n  return (!isNaN(num) && !isNaN(parseInt(num)));\n};\n\n/**\n * @description Internal helper to check if parameter is an array\n * @function isArray\n * @param {*} arr\n * @returns {boolean}\n */\nconst isArray = (arr) => {\n  return Array.isArray(arr);\n};\n\n/**\n * @description Internal helper to emit a warning to the console\n * @function _WARN_\n * @param {string} title\n * @param {string} detail\n * @returns {boolean}\n */\nconst _WARN_ = (title = '', detail = '') => {\n  process.emitWarning(title, {\n    detail,\n    code: 'CoinGecko',\n  });\n\n  return true;\n};\n\n//\n\nmodule.exports = {\n  isString,\n  isStringEmpty,\n  isDate,\n  isObject,\n  isNumber,\n  isArray,\n  _WARN_,\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,GAAG,EAAK;EACxB,OAAQ,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYC,MAAM;AAC1D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIF,GAAG,EAAK;EAC7B,IAAI,CAACD,QAAQ,CAACC,GAAG,CAAC,EAAE,OAAO,KAAK;EAChC,OAAQA,GAAG,CAACG,MAAM,IAAI,CAAC;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,IAAI,EAAK;EACvB,IAAIN,QAAQ,CAACM,IAAI,CAAC,IAAIC,OAAO,CAACD,IAAI,CAAC,IAAIA,IAAI,IAAIE,SAAS,IAAIF,IAAI,IAAI,IAAI,EAAE,OAAO,KAAK;EACtF,OAAQA,IAAI,IAAIG,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACN,IAAI,CAAC,KAAK,eAAe,IAAI,CAACO,KAAK,CAACP,IAAI,CAAC;AAC1F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMQ,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,GAAG,EAAK;EACxB,IAAIR,OAAO,CAACQ,GAAG,CAAC,IAAIV,MAAM,CAACU,GAAG,CAAC,EAAE,OAAO,KAAK;EAC7C,OAAQA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ;AACjD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,GAAG,EAAK;EACxB,OAAQ,CAACJ,KAAK,CAACI,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACD,GAAG,CAAC,CAAC;AAC9C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMV,OAAO,GAAG,SAAVA,OAAO,CAAIY,GAAG,EAAK;EACvB,OAAOC,KAAK,CAACb,OAAO,CAACY,GAAG,CAAC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAME,MAAM,GAAG,SAATA,MAAM,GAAgC;EAAA,IAA5BC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM,uEAAG,EAAE;EACrCC,OAAO,CAACC,WAAW,CAACH,KAAK,EAAE;IACzBC,MAAM,EAANA,MAAM;IACNG,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,OAAO,IAAI;AACb,CAAC;;AAED;;AAEAC,MAAM,CAACC,OAAO,GAAG;EACf5B,QAAQ,EAARA,QAAQ;EACRG,aAAa,EAAbA,aAAa;EACbE,MAAM,EAANA,MAAM;EACNS,QAAQ,EAARA,QAAQ;EACRE,QAAQ,EAARA,QAAQ;EACRT,OAAO,EAAPA,OAAO;EACPc,MAAM,EAANA;AACF,CAAC"},"metadata":{},"sourceType":"script"}