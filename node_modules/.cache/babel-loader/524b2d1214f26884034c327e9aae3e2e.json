{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupDistributionExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst query_1 = require(\"cosmjs-types/cosmos/distribution/v1beta1/query\");\nconst long_1 = __importDefault(require(\"long\"));\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupDistributionExtension(base) {\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    distribution: {\n      communityPool: async () => {\n        const response = await queryService.CommunityPool({});\n        return response;\n      },\n      delegationRewards: async (delegatorAddress, validatorAddress) => {\n        const response = await queryService.DelegationRewards({\n          delegatorAddress: delegatorAddress,\n          validatorAddress: validatorAddress\n        });\n        return response;\n      },\n      delegationTotalRewards: async delegatorAddress => {\n        const response = await queryService.DelegationTotalRewards({\n          delegatorAddress: delegatorAddress\n        });\n        return response;\n      },\n      delegatorValidators: async delegatorAddress => {\n        const response = await queryService.DelegatorValidators({\n          delegatorAddress: delegatorAddress\n        });\n        return response;\n      },\n      delegatorWithdrawAddress: async delegatorAddress => {\n        const response = await queryService.DelegatorWithdrawAddress({\n          delegatorAddress: delegatorAddress\n        });\n        return response;\n      },\n      params: async () => {\n        const response = await queryService.Params({});\n        return response;\n      },\n      validatorCommission: async validatorAddress => {\n        const response = await queryService.ValidatorCommission({\n          validatorAddress: validatorAddress\n        });\n        return response;\n      },\n      validatorOutstandingRewards: async validatorAddress => {\n        const response = await queryService.ValidatorOutstandingRewards({\n          validatorAddress: validatorAddress\n        });\n        return response;\n      },\n      validatorSlashes: async (validatorAddress, startingHeight, endingHeight, paginationKey) => {\n        const response = await queryService.ValidatorSlashes({\n          validatorAddress: validatorAddress,\n          startingHeight: long_1.default.fromNumber(startingHeight, true),\n          endingHeight: long_1.default.fromNumber(endingHeight, true),\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      }\n    }\n  };\n}\nexports.setupDistributionExtension = setupDistributionExtension;","map":{"version":3,"sources":["../../../src/modules/distribution/queries.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,gDAAA,CAAA;AAYA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AAEA,MAAA,aAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;AA0BA,SAAgB,0BAA0B,CAAC,IAAiB,EAAA;EAC1D,MAAM,GAAG,GAAG,CAAA,CAAA,EAAA,aAAA,CAAA,uBAAuB,EAAC,IAAI,CAAC;EACzC;EACA;EACA,MAAM,YAAY,GAAG,IAAI,OAAA,CAAA,eAAe,CAAC,GAAG,CAAC;EAE7C,OAAO;IACL,YAAY,EAAE;MACZ,aAAa,EAAE,YAAW;QACxB,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,aAAa,CAAC,CAAA,CAAE,CAAC;QACrD,OAAO,QAAQ;MACjB,CAAC;MACD,iBAAiB,EAAE,OAAO,gBAAwB,EAAE,gBAAwB,KAAI;QAC9E,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,iBAAiB,CAAC;UACpD,gBAAgB,EAAE,gBAAgB;UAClC,gBAAgB,EAAE;SACnB,CAAC;QACF,OAAO,QAAQ;MACjB,CAAC;MACD,sBAAsB,EAAE,MAAO,gBAAwB,IAAI;QACzD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,sBAAsB,CAAC;UACzD,gBAAgB,EAAE;SACnB,CAAC;QACF,OAAO,QAAQ;MACjB,CAAC;MACD,mBAAmB,EAAE,MAAO,gBAAwB,IAAI;QACtD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,mBAAmB,CAAC;UACtD,gBAAgB,EAAE;SACnB,CAAC;QACF,OAAO,QAAQ;MACjB,CAAC;MACD,wBAAwB,EAAE,MAAO,gBAAwB,IAAI;QAC3D,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,wBAAwB,CAAC;UAC3D,gBAAgB,EAAE;SACnB,CAAC;QACF,OAAO,QAAQ;MACjB,CAAC;MACD,MAAM,EAAE,YAAW;QACjB,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,MAAM,CAAC,CAAA,CAAE,CAAC;QAC9C,OAAO,QAAQ;MACjB,CAAC;MACD,mBAAmB,EAAE,MAAO,gBAAwB,IAAI;QACtD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,mBAAmB,CAAC;UACtD,gBAAgB,EAAE;SACnB,CAAC;QACF,OAAO,QAAQ;MACjB,CAAC;MACD,2BAA2B,EAAE,MAAO,gBAAwB,IAAI;QAC9D,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,2BAA2B,CAAC;UAC9D,gBAAgB,EAAE;SACnB,CAAC;QACF,OAAO,QAAQ;MACjB,CAAC;MACD,gBAAgB,EAAE,OAChB,gBAAwB,EACxB,cAAsB,EACtB,YAAoB,EACpB,aAA0B,KACxB;QACF,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC;UACnD,gBAAgB,EAAE,gBAAgB;UAClC,cAAc,EAAE,MAAA,CAAA,OAAI,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC;UACrD,YAAY,EAAE,MAAA,CAAA,OAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC;UACjD,UAAU,EAAE,CAAA,CAAA,EAAA,aAAA,CAAA,gBAAgB,EAAC,aAAa;SAC3C,CAAC;QACF,OAAO,QAAQ;MACjB;IACD;GACF;AACH;AArEA,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupDistributionExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst query_1 = require(\"cosmjs-types/cosmos/distribution/v1beta1/query\");\nconst long_1 = __importDefault(require(\"long\"));\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupDistributionExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        distribution: {\n            communityPool: async () => {\n                const response = await queryService.CommunityPool({});\n                return response;\n            },\n            delegationRewards: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.DelegationRewards({\n                    delegatorAddress: delegatorAddress,\n                    validatorAddress: validatorAddress,\n                });\n                return response;\n            },\n            delegationTotalRewards: async (delegatorAddress) => {\n                const response = await queryService.DelegationTotalRewards({\n                    delegatorAddress: delegatorAddress,\n                });\n                return response;\n            },\n            delegatorValidators: async (delegatorAddress) => {\n                const response = await queryService.DelegatorValidators({\n                    delegatorAddress: delegatorAddress,\n                });\n                return response;\n            },\n            delegatorWithdrawAddress: async (delegatorAddress) => {\n                const response = await queryService.DelegatorWithdrawAddress({\n                    delegatorAddress: delegatorAddress,\n                });\n                return response;\n            },\n            params: async () => {\n                const response = await queryService.Params({});\n                return response;\n            },\n            validatorCommission: async (validatorAddress) => {\n                const response = await queryService.ValidatorCommission({\n                    validatorAddress: validatorAddress,\n                });\n                return response;\n            },\n            validatorOutstandingRewards: async (validatorAddress) => {\n                const response = await queryService.ValidatorOutstandingRewards({\n                    validatorAddress: validatorAddress,\n                });\n                return response;\n            },\n            validatorSlashes: async (validatorAddress, startingHeight, endingHeight, paginationKey) => {\n                const response = await queryService.ValidatorSlashes({\n                    validatorAddress: validatorAddress,\n                    startingHeight: long_1.default.fromNumber(startingHeight, true),\n                    endingHeight: long_1.default.fromNumber(endingHeight, true),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupDistributionExtension = setupDistributionExtension;\n//# sourceMappingURL=queries.js.map"]},"metadata":{},"sourceType":"script"}