{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var isNonEmpty = function isNonEmpty(as) {\n  return as.length > 0;\n};\n/**\n * @internal\n */\nexport var isOutOfBound = function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n};\n/**\n * @internal\n */\nexport var prependW = function prependW(head) {\n  return function (tail) {\n    return __spreadArray([head], tail, true);\n  };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function appendW(end) {\n  return function (init) {\n    return __spreadArray(__spreadArray([], init, true), [end], false);\n  };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function unsafeInsertAt(i, a, as) {\n  if (isNonEmpty(as)) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs.splice(i, 0, a);\n    return xs;\n  }\n  return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  var xs = fromReadonlyNonEmptyArray(as);\n  xs[i] = a;\n  return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function uniq(E) {\n  return function (as) {\n    if (as.length === 1) {\n      return copy(as);\n    }\n    var out = [head(as)];\n    var rest = tail(as);\n    var _loop_1 = function _loop_1(a) {\n      if (out.every(function (o) {\n        return !E.equals(o, a);\n      })) {\n        out.push(a);\n      }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n      var a = rest_1[_i];\n      _loop_1(a);\n    }\n    return out;\n  };\n};\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function sortBy(ords) {\n  if (isNonEmpty(ords)) {\n    var M = getMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n  }\n  return copy;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function union(E) {\n  var uniqE = uniq(E);\n  return function (second) {\n    return function (first) {\n      return uniqE(pipe(first, concat(second)));\n    };\n  };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n      return copy(as);\n    }\n    if (m < 0) {\n      var _a = splitAt(-m)(as),\n        f = _a[0],\n        s = _a[1];\n      return pipe(s, concat(f));\n    } else {\n      return rotate(m - len)(as);\n    }\n  };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromArray = function fromArray(as) {\n  return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function makeBy(f) {\n  return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n      out.push(f(i));\n    }\n    return out;\n  };\n};\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function replicate(a) {\n  return makeBy(function () {\n    return a;\n  });\n};\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function range(start, end) {\n  return start <= end ? makeBy(function (i) {\n    return start + i;\n  })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function unprepend(as) {\n  return [head(as), tail(as)];\n};\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function unappend(as) {\n  return [init(as), last(as)];\n};\nexport function concatW(second) {\n  return function (first) {\n    return first.concat(second);\n  };\n}\nexport function concat(x, y) {\n  return y ? x.concat(y) : function (y) {\n    return y.concat(x);\n  };\n}\n/**\n * @since 2.0.0\n */\nexport var reverse = function reverse(as) {\n  return __spreadArray([last(as)], as.slice(0, -1).reverse(), true);\n};\nexport function group(E) {\n  return function (as) {\n    var len = as.length;\n    if (len === 0) {\n      return [];\n    }\n    var out = [];\n    var head = as[0];\n    var nea = [head];\n    for (var i = 1; i < len; i++) {\n      var a = as[i];\n      if (E.equals(a, head)) {\n        nea.push(a);\n      } else {\n        out.push(nea);\n        head = a;\n        nea = [head];\n      }\n    }\n    out.push(nea);\n    return out;\n  };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.0.0\n */\nexport var groupBy = function groupBy(f) {\n  return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n      if (_.has.call(out, k)) {\n        out[k].push(a);\n      } else {\n        out[k] = [a];\n      }\n    }\n    return out;\n  };\n};\n/**\n * @since 2.0.0\n */\nexport var sort = function sort(O) {\n  return function (as) {\n    return as.slice().sort(O.compare);\n  };\n};\n/**\n * @since 2.0.0\n */\nexport var insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * @since 2.0.0\n */\nexport var updateAt = function updateAt(i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * @since 2.0.0\n */\nexport var modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * @since 2.0.0\n */\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var of = function of(a) {\n  return [a];\n};\n/**\n * @since 2.5.1\n */\nexport var zipWith = function zipWith(as, bs, f) {\n  var cs = [f(as[0], bs[0])];\n  var len = Math.min(as.length, bs.length);\n  for (var i = 1; i < len; i++) {\n    cs[i] = f(as[i], bs[i]);\n  }\n  return cs;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function unzip(abs) {\n  var fa = [abs[0][0]];\n  var fb = [abs[0][1]];\n  for (var i = 1; i < abs.length; i++) {\n    fa[i] = abs[i][0];\n    fb[i] = abs[i][1];\n  }\n  return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function prependAll(middle) {\n  return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n      out.push(middle, as[i]);\n    }\n    return out;\n  };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function intersperse(middle) {\n  return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n  };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n    for (var i = 1; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n  };\n};\n/**\n * @since 2.10.0\n */\nexport var chop = function chop(f) {\n  return function (as) {\n    var _a = f(as),\n      b = _a[0],\n      rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (isNonEmpty(next)) {\n      var _b = f(next),\n        b_1 = _b[0],\n        rest_2 = _b[1];\n      out.push(b_1);\n      next = rest_2;\n    }\n    return out;\n  };\n};\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function splitAt(n) {\n  return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n  };\n};\n/**\n * @since 2.10.0\n */\nexport var chunksOf = function chunksOf(n) {\n  return chop(splitAt(n));\n};\n/* istanbul ignore next */\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n/* istanbul ignore next */\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\n/* istanbul ignore next */\nvar _ap = function _ap(fab, fa) {\n  return pipe(fab, ap(fa));\n};\n/* istanbul ignore next */\nvar _chain = function _chain(ma, f) {\n  return pipe(ma, chain(f));\n};\n/* istanbul ignore next */\nvar _extend = function _extend(wa, f) {\n  return pipe(wa, extend(f));\n};\n/* istanbul ignore next */\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\nvar _alt = function _alt(fa, that) {\n  return pipe(fa, alt(that));\n};\n/* istanbul ignore next */\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as NEA.NonEmptyArray<number>,\n *     NEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function altW(that) {\n  return function (as) {\n    return pipe(as, concatW(that()));\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `NonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @since 2.0.0\n */\nexport var ap = function ap(as) {\n  return chain(function (f) {\n    return pipe(as, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function chain(f) {\n  return chainWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function extend(f) {\n  return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n    while (isNonEmpty(next)) {\n      out.push(f(next));\n      next = tail(next);\n    }\n    return out;\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function map(f) {\n  return mapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var mapWithIndex = function mapWithIndex(f) {\n  return function (as) {\n    var out = [f(0, head(as))];\n    for (var i = 1; i < as.length; i++) {\n      out.push(f(i, as[i]));\n    }\n    return out;\n  };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function traverse(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function sequence(F) {\n  return traverseWithIndex(F)(function (_, a) {\n    return a;\n  });\n};\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return function (as) {\n      var out = F.map(f(0, head(as)), of);\n      for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) {\n          return function (b) {\n            return pipe(bs, append(b));\n          };\n        }), f(i, as[i]));\n      }\n      return out;\n    };\n  };\n};\n/**\n * @since 2.7.0\n */\nexport var extract = RNEA.head;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: concat\n  };\n};\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n  URI: URI,\n  map: _map,\n  extend: _extend,\n  extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\nvar let_ = /*#__PURE__*/let__(Functor);\nexport {\n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = function tail(as) {\n  return as.slice(1);\n};\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = function init(as) {\n  return as.slice(0, -1);\n};\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\nexport var concatAll = function concatAll(S) {\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function matchLeft(f) {\n  return function (as) {\n    return f(head(as), tail(as));\n  };\n};\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function matchRight(f) {\n  return function (as) {\n    return f(init(as), last(as));\n  };\n};\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function modifyHead(f) {\n  return function (as) {\n    return __spreadArray([f(head(as))], tail(as), true);\n  };\n};\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function updateHead(a) {\n  return modifyHead(function () {\n    return a;\n  });\n};\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function modifyLast(f) {\n  return function (as) {\n    return pipe(init(as), append(f(last(as))));\n  };\n};\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function updateLast(a) {\n  return modifyLast(function () {\n    return a;\n  });\n};\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RNEA.intercalate;\nexport function groupSort(O) {\n  var sortO = sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return isNonEmpty(as) ? groupO(sortO(as)) : [];\n  };\n}\nexport function filter(predicate) {\n  return filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var filterWithIndex = function filterWithIndex(predicate) {\n  return function (as) {\n    return fromArray(as.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n  return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = function snoc(init, end) {\n  return pipe(init, append(end));\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = RNEA.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `NEA.Functor` instead of `NEA.nonEmptyArray`\n * (where `NEA` is from `import NEA from 'fp-ts/NonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var nonEmptyArray = {\n  URI: URI,\n  of: of,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  ap: _ap,\n  chain: _chain,\n  extend: _extend,\n  extract: extract,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  alt: _alt\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","apFirst","apFirst_","apS","apS_","apSecond","apSecond_","bind","bind_","chainFirst","chainFirst_","identity","pipe","let","let__","bindTo","bindTo_","flap","flap_","_","getMonoid","RNEA","isNonEmpty","as","isOutOfBound","prependW","head","tail","prepend","appendW","end","init","append","unsafeInsertAt","a","xs","fromReadonlyNonEmptyArray","splice","unsafeUpdateAt","uniq","E","copy","out","rest","_loop_1","every","o","equals","push","_i","rest_1","sortBy","ords","M","sort","reduce","empty","union","uniqE","second","first","rotate","n","len","m","Math","round","abs","_a","splitAt","f","s","fromArray","some","none","makeBy","j","max","floor","replicate","range","start","unprepend","unappend","last","concatW","x","y","reverse","group","nea","groupBy","as_1","k","has","O","compare","insertAt","updateAt","modifyAt","of","zipWith","bs","cs","min","zip","undefined","b","unzip","fa","fb","prependAll","middle","intersperse","foldMapWithIndex","foldMap","chainWithIndex","apply","chop","next","_b","b_1","rest_2","chunksOf","_map","map","_mapWithIndex","mapWithIndex","_ap","fab","ap","_chain","ma","chain","_extend","wa","extend","_reduce","_foldMap","foldMapM","_reduceRight","reduceRight","_traverse","F","traverseF","traverse","ta","_alt","that","alt","_reduceWithIndex","reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","_reduceRightWithIndex","reduceRightWithIndex","_traverseWithIndex","traverseWithIndexF","traverseWithIndex","altW","duplicate","flatten","sequence","extract","URI","getShow","getSemigroup","getEq","getUnionSemigroup","unionE","Functor","Pointed","FunctorWithIndex","Apply","Applicative","Chain","Monad","Foldable","FoldableWithIndex","Traversable","TraversableWithIndex","Alt","Comonad","Do","emptyRecord","let_","concatAll","S","matchLeft","matchRight","modifyHead","updateHead","modifyLast","updateLast","intercalate","groupSort","sortO","groupO","filter","predicate","filterWithIndex","uncons","unsnoc","cons","snoc","prependToAll","fold","nonEmptyArray"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/fp-ts/es6/NonEmptyArray.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return copy(as);\n        }\n        var out = [head(as)];\n        var rest = tail(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return copy;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if (isOutOfBound(Math.abs(m), as) || m === 0) {\n            return copy(as);\n        }\n        if (m < 0) {\n            var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n            return pipe(s, concat(f));\n        }\n        else {\n            return rotate(m - len)(as);\n        }\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromArray = function (as) { return (isNonEmpty(as) ? _.some(as) : _.none); };\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.0.0\n */\nexport var reverse = function (as) { return __spreadArray([last(as)], as.slice(0, -1).reverse(), true); };\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.0.0\n */\nexport var groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.slice().sort(O.compare);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    return function (as) {\n        var rest = tail(as);\n        return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n    };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @since 2.10.0\n */\nexport var chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while (isNonEmpty(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n    };\n};\n/**\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\n/* istanbul ignore next */\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as NEA.NonEmptyArray<number>,\n *     NEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (as) {\n        return pipe(as, concatW(that()));\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `NonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @since 2.0.0\n */\nexport var ap = function (as) {\n    return chain(function (f) { return pipe(as, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) {\n    return chainWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) {\n    return function (as) {\n        var next = tail(as);\n        var out = [f(as)];\n        while (isNonEmpty(next)) {\n            out.push(f(next));\n            next = tail(next);\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return mapWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, head(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(function (_, a) { return a; }); };\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, head(as)), of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\n/**\n * @since 2.7.0\n */\nexport var extract = RNEA.head;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = function (as) { return as.slice(1); };\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function (f) {\n    return function (as) {\n        return f(head(as), tail(as));\n    };\n};\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function (f) {\n    return function (as) {\n        return f(init(as), last(as));\n    };\n};\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f(head(as))], tail(as), true);\n    };\n};\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) {\n    return function (as) {\n        return pipe(init(as), append(f(last(as))));\n    };\n};\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RNEA.intercalate;\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) {\n    return function (as) {\n        return fromArray(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, append(end)); };\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = RNEA.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `NEA.Functor` instead of `NEA.nonEmptyArray`\n * (where `NEA` is from `import NEA from 'fp-ts/NonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var nonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,IAAI,CAACG,MAAM,EAAEG,EAAE,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IACjF,IAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIJ,IAAI,CAAC,EAAE;MACpB,IAAI,CAACM,EAAE,EAAEA,EAAE,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,EAAE,CAAC,EAAEI,CAAC,CAAC;MACpDE,EAAE,CAACF,CAAC,CAAC,GAAGJ,IAAI,CAACI,CAAC,CAAC;IACnB;EACJ;EACA,OAAOL,EAAE,CAACY,MAAM,CAACL,EAAE,IAAIC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,SAASY,OAAO,IAAIC,QAAQ,EAAEC,GAAG,IAAIC,IAAI,EAAEC,QAAQ,IAAIC,SAAS,QAAQ,SAAS;AACjF,SAASC,IAAI,IAAIC,KAAK,EAAEC,UAAU,IAAIC,WAAW,QAAQ,SAAS;AAClE,SAASC,QAAQ,EAAEC,IAAI,QAAQ,YAAY;AAC3C,SAASC,GAAG,IAAIC,KAAK,EAAEC,MAAM,IAAIC,OAAO,EAAEC,IAAI,IAAIC,KAAK,QAAQ,WAAW;AAC1E,OAAO,KAAKC,CAAC,MAAM,YAAY;AAC/B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,IAAI,MAAM,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,UAAU,GAAG,SAAbA,UAAU,CAAaC,EAAE,EAAE;EAAE,OAAOA,EAAE,CAAC/B,MAAM,GAAG,CAAC;AAAE,CAAC;AAC/D;AACA;AACA;AACA,OAAO,IAAIgC,YAAY,GAAG,SAAfA,YAAY,CAAa/B,CAAC,EAAE8B,EAAE,EAAE;EAAE,OAAO9B,CAAC,GAAG,CAAC,IAAIA,CAAC,IAAI8B,EAAE,CAAC/B,MAAM;AAAE,CAAC;AAC9E;AACA;AACA;AACA,OAAO,IAAIiC,QAAQ,GAAG,SAAXA,QAAQ,CAAaC,IAAI,EAAE;EAClC,OAAO,UAAUC,IAAI,EAAE;IACnB,OAAOxC,aAAa,CAAC,CAACuC,IAAI,CAAC,EAAEC,IAAI,EAAE,IAAI,CAAC;EAC5C,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGH,QAAQ;AAC7B;AACA;AACA;AACA,OAAO,IAAII,OAAO,GAAG,SAAVA,OAAO,CAAaC,GAAG,EAAE;EAChC,OAAO,UAAUC,IAAI,EAAE;IACnB,OAAO5C,aAAa,CAACA,aAAa,CAAC,EAAE,EAAE4C,IAAI,EAAE,IAAI,CAAC,EAAE,CAACD,GAAG,CAAC,EAAE,KAAK,CAAC;EACrE,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIE,MAAM,GAAGH,OAAO;AAC3B;AACA;AACA;AACA,OAAO,IAAII,cAAc,GAAG,SAAjBA,cAAc,CAAaxC,CAAC,EAAEyC,CAAC,EAAEX,EAAE,EAAE;EAC5C,IAAID,UAAU,CAACC,EAAE,CAAC,EAAE;IAChB,IAAIY,EAAE,GAAGC,yBAAyB,CAACb,EAAE,CAAC;IACtCY,EAAE,CAACE,MAAM,CAAC5C,CAAC,EAAE,CAAC,EAAEyC,CAAC,CAAC;IAClB,OAAOC,EAAE;EACb;EACA,OAAO,CAACD,CAAC,CAAC;AACd,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAII,cAAc,GAAG,SAAjBA,cAAc,CAAa7C,CAAC,EAAEyC,CAAC,EAAEX,EAAE,EAAE;EAC5C,IAAIY,EAAE,GAAGC,yBAAyB,CAACb,EAAE,CAAC;EACtCY,EAAE,CAAC1C,CAAC,CAAC,GAAGyC,CAAC;EACT,OAAOC,EAAE;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,IAAI,GAAG,SAAPA,IAAI,CAAaC,CAAC,EAAE;EAC3B,OAAO,UAAUjB,EAAE,EAAE;IACjB,IAAIA,EAAE,CAAC/B,MAAM,KAAK,CAAC,EAAE;MACjB,OAAOiD,IAAI,CAAClB,EAAE,CAAC;IACnB;IACA,IAAImB,GAAG,GAAG,CAAChB,IAAI,CAACH,EAAE,CAAC,CAAC;IACpB,IAAIoB,IAAI,GAAGhB,IAAI,CAACJ,EAAE,CAAC;IACnB,IAAIqB,OAAO,GAAG,SAAVA,OAAO,CAAaV,CAAC,EAAE;MACvB,IAAIQ,GAAG,CAACG,KAAK,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAO,CAACN,CAAC,CAACO,MAAM,CAACD,CAAC,EAAEZ,CAAC,CAAC;MAAE,CAAC,CAAC,EAAE;QACrDQ,GAAG,CAACM,IAAI,CAACd,CAAC,CAAC;MACf;IACJ,CAAC;IACD,KAAK,IAAIe,EAAE,GAAG,CAAC,EAAEC,MAAM,GAAGP,IAAI,EAAEM,EAAE,GAAGC,MAAM,CAAC1D,MAAM,EAAEyD,EAAE,EAAE,EAAE;MACtD,IAAIf,CAAC,GAAGgB,MAAM,CAACD,EAAE,CAAC;MAClBL,OAAO,CAACV,CAAC,CAAC;IACd;IACA,OAAOQ,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIS,MAAM,GAAG,SAATA,MAAM,CAAaC,IAAI,EAAE;EAChC,IAAI9B,UAAU,CAAC8B,IAAI,CAAC,EAAE;IAClB,IAAIC,CAAC,GAAGjC,SAAS,EAAE;IACnB,OAAOkC,IAAI,CAACF,IAAI,CAACG,MAAM,CAACF,CAAC,CAACrD,MAAM,EAAEqD,CAAC,CAACG,KAAK,CAAC,CAAC;EAC/C;EACA,OAAOf,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIgB,KAAK,GAAG,SAARA,KAAK,CAAajB,CAAC,EAAE;EAC5B,IAAIkB,KAAK,GAAGnB,IAAI,CAACC,CAAC,CAAC;EACnB,OAAO,UAAUmB,MAAM,EAAE;IAAE,OAAO,UAAUC,KAAK,EAAE;MAAE,OAAOF,KAAK,CAAC9C,IAAI,CAACgD,KAAK,EAAE5D,MAAM,CAAC2D,MAAM,CAAC,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC;AACxG,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,MAAM,GAAG,SAATA,MAAM,CAAaC,CAAC,EAAE;EAC7B,OAAO,UAAUvC,EAAE,EAAE;IACjB,IAAIwC,GAAG,GAAGxC,EAAE,CAAC/B,MAAM;IACnB,IAAIwE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,GAAGC,GAAG;IAC3B,IAAIvC,YAAY,CAACyC,IAAI,CAACE,GAAG,CAACH,CAAC,CAAC,EAAEzC,EAAE,CAAC,IAAIyC,CAAC,KAAK,CAAC,EAAE;MAC1C,OAAOvB,IAAI,CAAClB,EAAE,CAAC;IACnB;IACA,IAAIyC,CAAC,GAAG,CAAC,EAAE;MACP,IAAII,EAAE,GAAGC,OAAO,CAAC,CAACL,CAAC,CAAC,CAACzC,EAAE,CAAC;QAAE+C,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;QAAEG,CAAC,GAAGH,EAAE,CAAC,CAAC,CAAC;MAC9C,OAAOxD,IAAI,CAAC2D,CAAC,EAAEvE,MAAM,CAACsE,CAAC,CAAC,CAAC;IAC7B,CAAC,MACI;MACD,OAAOT,MAAM,CAACG,CAAC,GAAGD,GAAG,CAAC,CAACxC,EAAE,CAAC;IAC9B;EACJ,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIa,yBAAyB,GAAGjB,CAAC,CAACiB,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIoC,SAAS,GAAG,SAAZA,SAAS,CAAajD,EAAE,EAAE;EAAE,OAAQD,UAAU,CAACC,EAAE,CAAC,GAAGJ,CAAC,CAACsD,IAAI,CAAClD,EAAE,CAAC,GAAGJ,CAAC,CAACuD,IAAI;AAAG,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,MAAM,GAAG,SAATA,MAAM,CAAaL,CAAC,EAAE;EAC7B,OAAO,UAAUR,CAAC,EAAE;IAChB,IAAIc,CAAC,GAAGX,IAAI,CAACY,GAAG,CAAC,CAAC,EAAEZ,IAAI,CAACa,KAAK,CAAChB,CAAC,CAAC,CAAC;IAClC,IAAIpB,GAAG,GAAG,CAAC4B,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,KAAK,IAAI7E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmF,CAAC,EAAEnF,CAAC,EAAE,EAAE;MACxBiD,GAAG,CAACM,IAAI,CAACsB,CAAC,CAAC7E,CAAC,CAAC,CAAC;IAClB;IACA,OAAOiD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIqC,SAAS,GAAG,SAAZA,SAAS,CAAa7C,CAAC,EAAE;EAAE,OAAOyC,MAAM,CAAC,YAAY;IAAE,OAAOzC,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI8C,KAAK,GAAG,SAARA,KAAK,CAAaC,KAAK,EAAEnD,GAAG,EAAE;EACrC,OAAOmD,KAAK,IAAInD,GAAG,GAAG6C,MAAM,CAAC,UAAUlF,CAAC,EAAE;IAAE,OAAOwF,KAAK,GAAGxF,CAAC;EAAE,CAAC,CAAC,CAACqC,GAAG,GAAGmD,KAAK,GAAG,CAAC,CAAC,GAAG,CAACA,KAAK,CAAC;AAC/F,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,SAAS,GAAG,SAAZA,SAAS,CAAa3D,EAAE,EAAE;EAAE,OAAO,CAACG,IAAI,CAACH,EAAE,CAAC,EAAEI,IAAI,CAACJ,EAAE,CAAC,CAAC;AAAE,CAAC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI4D,QAAQ,GAAG,SAAXA,QAAQ,CAAa5D,EAAE,EAAE;EAAE,OAAO,CAACQ,IAAI,CAACR,EAAE,CAAC,EAAE6D,IAAI,CAAC7D,EAAE,CAAC,CAAC;AAAE,CAAC;AACpE,OAAO,SAAS8D,OAAO,CAAC1B,MAAM,EAAE;EAC5B,OAAO,UAAUC,KAAK,EAAE;IAAE,OAAOA,KAAK,CAAC5D,MAAM,CAAC2D,MAAM,CAAC;EAAE,CAAC;AAC5D;AACA,OAAO,SAAS3D,MAAM,CAACsF,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOA,CAAC,GAAGD,CAAC,CAACtF,MAAM,CAACuF,CAAC,CAAC,GAAG,UAAUA,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACvF,MAAM,CAACsF,CAAC,CAAC;EAAE,CAAC;AACjE;AACA;AACA;AACA;AACA,OAAO,IAAIE,OAAO,GAAG,SAAVA,OAAO,CAAajE,EAAE,EAAE;EAAE,OAAOpC,aAAa,CAAC,CAACiG,IAAI,CAAC7D,EAAE,CAAC,CAAC,EAAEA,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC0F,OAAO,EAAE,EAAE,IAAI,CAAC;AAAE,CAAC;AACzG,OAAO,SAASC,KAAK,CAACjD,CAAC,EAAE;EACrB,OAAO,UAAUjB,EAAE,EAAE;IACjB,IAAIwC,GAAG,GAAGxC,EAAE,CAAC/B,MAAM;IACnB,IAAIuE,GAAG,KAAK,CAAC,EAAE;MACX,OAAO,EAAE;IACb;IACA,IAAIrB,GAAG,GAAG,EAAE;IACZ,IAAIhB,IAAI,GAAGH,EAAE,CAAC,CAAC,CAAC;IAChB,IAAImE,GAAG,GAAG,CAAChE,IAAI,CAAC;IAChB,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsE,GAAG,EAAEtE,CAAC,EAAE,EAAE;MAC1B,IAAIyC,CAAC,GAAGX,EAAE,CAAC9B,CAAC,CAAC;MACb,IAAI+C,CAAC,CAACO,MAAM,CAACb,CAAC,EAAER,IAAI,CAAC,EAAE;QACnBgE,GAAG,CAAC1C,IAAI,CAACd,CAAC,CAAC;MACf,CAAC,MACI;QACDQ,GAAG,CAACM,IAAI,CAAC0C,GAAG,CAAC;QACbhE,IAAI,GAAGQ,CAAC;QACRwD,GAAG,GAAG,CAAChE,IAAI,CAAC;MAChB;IACJ;IACAgB,GAAG,CAACM,IAAI,CAAC0C,GAAG,CAAC;IACb,OAAOhD,GAAG;EACd,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIiD,OAAO,GAAG,SAAVA,OAAO,CAAarB,CAAC,EAAE;EAC9B,OAAO,UAAU/C,EAAE,EAAE;IACjB,IAAImB,GAAG,GAAG,CAAC,CAAC;IACZ,KAAK,IAAIO,EAAE,GAAG,CAAC,EAAE2C,IAAI,GAAGrE,EAAE,EAAE0B,EAAE,GAAG2C,IAAI,CAACpG,MAAM,EAAEyD,EAAE,EAAE,EAAE;MAChD,IAAIf,CAAC,GAAG0D,IAAI,CAAC3C,EAAE,CAAC;MAChB,IAAI4C,CAAC,GAAGvB,CAAC,CAACpC,CAAC,CAAC;MACZ,IAAIf,CAAC,CAAC2E,GAAG,CAAC/F,IAAI,CAAC2C,GAAG,EAAEmD,CAAC,CAAC,EAAE;QACpBnD,GAAG,CAACmD,CAAC,CAAC,CAAC7C,IAAI,CAACd,CAAC,CAAC;MAClB,CAAC,MACI;QACDQ,GAAG,CAACmD,CAAC,CAAC,GAAG,CAAC3D,CAAC,CAAC;MAChB;IACJ;IACA,OAAOQ,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIY,IAAI,GAAG,SAAPA,IAAI,CAAayC,CAAC,EAAE;EAC3B,OAAO,UAAUxE,EAAE,EAAE;IACjB,OAAOA,EAAE,CAACzB,KAAK,EAAE,CAACwD,IAAI,CAACyC,CAAC,CAACC,OAAO,CAAC;EACrC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAG,SAAXA,QAAQ,CAAaxG,CAAC,EAAEyC,CAAC,EAAE;EAClC,OAAO,UAAUX,EAAE,EAAE;IACjB,OAAO9B,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG8B,EAAE,CAAC/B,MAAM,GAAG2B,CAAC,CAACuD,IAAI,GAAGvD,CAAC,CAACsD,IAAI,CAACxC,cAAc,CAACxC,CAAC,EAAEyC,CAAC,EAAEX,EAAE,CAAC,CAAC;EAC7E,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAI2E,QAAQ,GAAG,SAAXA,QAAQ,CAAazG,CAAC,EAAEyC,CAAC,EAAE;EAClC,OAAOiE,QAAQ,CAAC1G,CAAC,EAAE,YAAY;IAAE,OAAOyC,CAAC;EAAE,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIiE,QAAQ,GAAG,SAAXA,QAAQ,CAAa1G,CAAC,EAAE6E,CAAC,EAAE;EAClC,OAAO,UAAU/C,EAAE,EAAE;IACjB,OAAOC,YAAY,CAAC/B,CAAC,EAAE8B,EAAE,CAAC,GAAGJ,CAAC,CAACuD,IAAI,GAAGvD,CAAC,CAACsD,IAAI,CAACnC,cAAc,CAAC7C,CAAC,EAAE6E,CAAC,CAAC/C,EAAE,CAAC9B,CAAC,CAAC,CAAC,EAAE8B,EAAE,CAAC,CAAC;EACjF,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIkB,IAAI,GAAGL,yBAAyB;AAC3C;AACA;AACA;AACA;AACA,OAAO,IAAIgE,EAAE,GAAG,SAALA,EAAE,CAAalE,CAAC,EAAE;EAAE,OAAO,CAACA,CAAC,CAAC;AAAE,CAAC;AAC5C;AACA;AACA;AACA,OAAO,IAAImE,OAAO,GAAG,SAAVA,OAAO,CAAa9E,EAAE,EAAE+E,EAAE,EAAEhC,CAAC,EAAE;EACtC,IAAIiC,EAAE,GAAG,CAACjC,CAAC,CAAC/C,EAAE,CAAC,CAAC,CAAC,EAAE+E,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,IAAIvC,GAAG,GAAGE,IAAI,CAACuC,GAAG,CAACjF,EAAE,CAAC/B,MAAM,EAAE8G,EAAE,CAAC9G,MAAM,CAAC;EACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsE,GAAG,EAAEtE,CAAC,EAAE,EAAE;IAC1B8G,EAAE,CAAC9G,CAAC,CAAC,GAAG6E,CAAC,CAAC/C,EAAE,CAAC9B,CAAC,CAAC,EAAE6G,EAAE,CAAC7G,CAAC,CAAC,CAAC;EAC3B;EACA,OAAO8G,EAAE;AACb,CAAC;AACD,OAAO,SAASE,GAAG,CAAClF,EAAE,EAAE+E,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKI,SAAS,EAAE;IAClB,OAAO,UAAUJ,EAAE,EAAE;MAAE,OAAOG,GAAG,CAACH,EAAE,EAAE/E,EAAE,CAAC;IAAE,CAAC;EAChD;EACA,OAAO8E,OAAO,CAAC9E,EAAE,EAAE+E,EAAE,EAAE,UAAUpE,CAAC,EAAEyE,CAAC,EAAE;IAAE,OAAO,CAACzE,CAAC,EAAEyE,CAAC,CAAC;EAAE,CAAC,CAAC;AAC9D;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAG,SAARA,KAAK,CAAazC,GAAG,EAAE;EAC9B,IAAI0C,EAAE,GAAG,CAAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,IAAI2C,EAAE,GAAG,CAAC3C,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0E,GAAG,CAAC3E,MAAM,EAAEC,CAAC,EAAE,EAAE;IACjCoH,EAAE,CAACpH,CAAC,CAAC,GAAG0E,GAAG,CAAC1E,CAAC,CAAC,CAAC,CAAC,CAAC;IACjBqH,EAAE,CAACrH,CAAC,CAAC,GAAG0E,GAAG,CAAC1E,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB;EACA,OAAO,CAACoH,EAAE,EAAEC,EAAE,CAAC;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,UAAU,GAAG,SAAbA,UAAU,CAAaC,MAAM,EAAE;EACtC,OAAO,UAAUzF,EAAE,EAAE;IACjB,IAAImB,GAAG,GAAG,CAACsE,MAAM,EAAEzF,EAAE,CAAC,CAAC,CAAC,CAAC;IACzB,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,EAAE,CAAC/B,MAAM,EAAEC,CAAC,EAAE,EAAE;MAChCiD,GAAG,CAACM,IAAI,CAACgE,MAAM,EAAEzF,EAAE,CAAC9B,CAAC,CAAC,CAAC;IAC3B;IACA,OAAOiD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIuE,WAAW,GAAG,SAAdA,WAAW,CAAaD,MAAM,EAAE;EACvC,OAAO,UAAUzF,EAAE,EAAE;IACjB,IAAIoB,IAAI,GAAGhB,IAAI,CAACJ,EAAE,CAAC;IACnB,OAAOD,UAAU,CAACqB,IAAI,CAAC,GAAG/B,IAAI,CAAC+B,IAAI,EAAEoE,UAAU,CAACC,MAAM,CAAC,EAAEpF,OAAO,CAACF,IAAI,CAACH,EAAE,CAAC,CAAC,CAAC,GAAGkB,IAAI,CAAClB,EAAE,CAAC;EAC1F,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI2F,gBAAgB,GAAG7F,IAAI,CAAC6F,gBAAgB;AACnD;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAG9F,IAAI,CAAC8F,OAAO;AACjC;AACA;AACA;AACA;AACA,OAAO,IAAIC,cAAc,GAAG,SAAjBA,cAAc,CAAa9C,CAAC,EAAE;EACrC,OAAO,UAAU/C,EAAE,EAAE;IACjB,IAAImB,GAAG,GAAGN,yBAAyB,CAACkC,CAAC,CAAC,CAAC,EAAE5C,IAAI,CAACH,EAAE,CAAC,CAAC,CAAC;IACnD,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,EAAE,CAAC/B,MAAM,EAAEC,CAAC,EAAE,EAAE;MAChCiD,GAAG,CAACM,IAAI,CAACqE,KAAK,CAAC3E,GAAG,EAAE4B,CAAC,CAAC7E,CAAC,EAAE8B,EAAE,CAAC9B,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,OAAOiD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAI4E,IAAI,GAAG,SAAPA,IAAI,CAAahD,CAAC,EAAE;EAC3B,OAAO,UAAU/C,EAAE,EAAE;IACjB,IAAI6C,EAAE,GAAGE,CAAC,CAAC/C,EAAE,CAAC;MAAEoF,CAAC,GAAGvC,EAAE,CAAC,CAAC,CAAC;MAAEzB,IAAI,GAAGyB,EAAE,CAAC,CAAC,CAAC;IACvC,IAAI1B,GAAG,GAAG,CAACiE,CAAC,CAAC;IACb,IAAIY,IAAI,GAAG5E,IAAI;IACf,OAAOrB,UAAU,CAACiG,IAAI,CAAC,EAAE;MACrB,IAAIC,EAAE,GAAGlD,CAAC,CAACiD,IAAI,CAAC;QAAEE,GAAG,GAAGD,EAAE,CAAC,CAAC,CAAC;QAAEE,MAAM,GAAGF,EAAE,CAAC,CAAC,CAAC;MAC7C9E,GAAG,CAACM,IAAI,CAACyE,GAAG,CAAC;MACbF,IAAI,GAAGG,MAAM;IACjB;IACA,OAAOhF,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI2B,OAAO,GAAG,SAAVA,OAAO,CAAaP,CAAC,EAAE;EAC9B,OAAO,UAAUvC,EAAE,EAAE;IACjB,IAAIyC,CAAC,GAAGC,IAAI,CAACY,GAAG,CAAC,CAAC,EAAEf,CAAC,CAAC;IACtB,OAAOE,CAAC,IAAIzC,EAAE,CAAC/B,MAAM,GAAG,CAACiD,IAAI,CAAClB,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAACX,IAAI,CAACW,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAEkE,CAAC,CAAC,EAAEpC,OAAO,CAACF,IAAI,CAACH,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAACzB,KAAK,CAACkE,CAAC,CAAC,CAAC;EACnG,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAI2D,QAAQ,GAAG,SAAXA,QAAQ,CAAa7D,CAAC,EAAE;EAAE,OAAOwD,IAAI,CAACjD,OAAO,CAACP,CAAC,CAAC,CAAC;AAAE,CAAC;AAC/D;AACA,IAAI8D,IAAI,GAAG,SAAPA,IAAI,CAAaf,EAAE,EAAEvC,CAAC,EAAE;EAAE,OAAO1D,IAAI,CAACiG,EAAE,EAAEgB,GAAG,CAACvD,CAAC,CAAC,CAAC;AAAE,CAAC;AACxD;AACA,IAAIwD,aAAa,GAAG,SAAhBA,aAAa,CAAajB,EAAE,EAAEvC,CAAC,EAAE;EAAE,OAAO1D,IAAI,CAACiG,EAAE,EAAEkB,YAAY,CAACzD,CAAC,CAAC,CAAC;AAAE,CAAC;AAC1E;AACA,IAAI0D,GAAG,GAAG,SAANA,GAAG,CAAaC,GAAG,EAAEpB,EAAE,EAAE;EAAE,OAAOjG,IAAI,CAACqH,GAAG,EAAEC,EAAE,CAACrB,EAAE,CAAC,CAAC;AAAE,CAAC;AAC1D;AACA,IAAIsB,MAAM,GAAG,SAATA,MAAM,CAAaC,EAAE,EAAE9D,CAAC,EAAE;EAAE,OAAO1D,IAAI,CAACwH,EAAE,EAAEC,KAAK,CAAC/D,CAAC,CAAC,CAAC;AAAE,CAAC;AAC5D;AACA,IAAIgE,OAAO,GAAG,SAAVA,OAAO,CAAaC,EAAE,EAAEjE,CAAC,EAAE;EAAE,OAAO1D,IAAI,CAAC2H,EAAE,EAAEC,MAAM,CAAClE,CAAC,CAAC,CAAC;AAAE,CAAC;AAC9D;AACA,IAAImE,OAAO,GAAG,SAAVA,OAAO,CAAa5B,EAAE,EAAEF,CAAC,EAAErC,CAAC,EAAE;EAAE,OAAO1D,IAAI,CAACiG,EAAE,EAAEtD,MAAM,CAACoD,CAAC,EAAErC,CAAC,CAAC,CAAC;AAAE,CAAC;AACpE;AACA,IAAIoE,QAAQ,GAAG,SAAXA,QAAQ,CAAarF,CAAC,EAAE;EACxB,IAAIsF,QAAQ,GAAGxB,OAAO,CAAC9D,CAAC,CAAC;EACzB,OAAO,UAAUwD,EAAE,EAAEvC,CAAC,EAAE;IAAE,OAAO1D,IAAI,CAACiG,EAAE,EAAE8B,QAAQ,CAACrE,CAAC,CAAC,CAAC;EAAE,CAAC;AAC7D,CAAC;AACD;AACA,IAAIsE,YAAY,GAAG,SAAfA,YAAY,CAAa/B,EAAE,EAAEF,CAAC,EAAErC,CAAC,EAAE;EAAE,OAAO1D,IAAI,CAACiG,EAAE,EAAEgC,WAAW,CAAClC,CAAC,EAAErC,CAAC,CAAC,CAAC;AAAE,CAAC;AAC9E;AACA,IAAIwE,SAAS,GAAG,SAAZA,SAAS,CAAaC,CAAC,EAAE;EACzB,IAAIC,SAAS,GAAGC,QAAQ,CAACF,CAAC,CAAC;EAC3B,OAAO,UAAUG,EAAE,EAAE5E,CAAC,EAAE;IAAE,OAAO1D,IAAI,CAACsI,EAAE,EAAEF,SAAS,CAAC1E,CAAC,CAAC,CAAC;EAAE,CAAC;AAC9D,CAAC;AACD;AACA,IAAI6E,IAAI,GAAG,SAAPA,IAAI,CAAatC,EAAE,EAAEuC,IAAI,EAAE;EAAE,OAAOxI,IAAI,CAACiG,EAAE,EAAEwC,GAAG,CAACD,IAAI,CAAC,CAAC;AAAE,CAAC;AAC9D;AACA,IAAIE,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAazC,EAAE,EAAEF,CAAC,EAAErC,CAAC,EAAE;EACvC,OAAO1D,IAAI,CAACiG,EAAE,EAAE0C,eAAe,CAAC5C,CAAC,EAAErC,CAAC,CAAC,CAAC;AAC1C,CAAC;AACD;AACA,IAAIkF,iBAAiB,GAAG,SAApBA,iBAAiB,CAAanG,CAAC,EAAE;EACjC,IAAIoG,iBAAiB,GAAGvC,gBAAgB,CAAC7D,CAAC,CAAC;EAC3C,OAAO,UAAUwD,EAAE,EAAEvC,CAAC,EAAE;IAAE,OAAO1D,IAAI,CAACiG,EAAE,EAAE4C,iBAAiB,CAACnF,CAAC,CAAC,CAAC;EAAE,CAAC;AACtE,CAAC;AACD;AACA,IAAIoF,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAa7C,EAAE,EAAEF,CAAC,EAAErC,CAAC,EAAE;EAC5C,OAAO1D,IAAI,CAACiG,EAAE,EAAE8C,oBAAoB,CAAChD,CAAC,EAAErC,CAAC,CAAC,CAAC;AAC/C,CAAC;AACD;AACA,IAAIsF,kBAAkB,GAAG,SAArBA,kBAAkB,CAAab,CAAC,EAAE;EAClC,IAAIc,kBAAkB,GAAGC,iBAAiB,CAACf,CAAC,CAAC;EAC7C,OAAO,UAAUG,EAAE,EAAE5E,CAAC,EAAE;IAAE,OAAO1D,IAAI,CAACsI,EAAE,EAAEW,kBAAkB,CAACvF,CAAC,CAAC,CAAC;EAAE,CAAC;AACvE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIyF,IAAI,GAAG,SAAPA,IAAI,CAAaX,IAAI,EAAE;EAC9B,OAAO,UAAU7H,EAAE,EAAE;IACjB,OAAOX,IAAI,CAACW,EAAE,EAAE8D,OAAO,CAAC+D,IAAI,EAAE,CAAC,CAAC;EACpC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,GAAG,GAAGU,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI7B,EAAE,GAAG,SAALA,EAAE,CAAa3G,EAAE,EAAE;EAC1B,OAAO8G,KAAK,CAAC,UAAU/D,CAAC,EAAE;IAAE,OAAO1D,IAAI,CAACW,EAAE,EAAEsG,GAAG,CAACvD,CAAC,CAAC,CAAC;EAAE,CAAC,CAAC;AAC3D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI+D,KAAK,GAAG,SAARA,KAAK,CAAa/D,CAAC,EAAE;EAC5B,OAAO8C,cAAc,CAAC,UAAUjG,CAAC,EAAEe,CAAC,EAAE;IAAE,OAAOoC,CAAC,CAACpC,CAAC,CAAC;EAAE,CAAC,CAAC;AAC3D,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIsG,MAAM,GAAG,SAATA,MAAM,CAAalE,CAAC,EAAE;EAC7B,OAAO,UAAU/C,EAAE,EAAE;IACjB,IAAIgG,IAAI,GAAG5F,IAAI,CAACJ,EAAE,CAAC;IACnB,IAAImB,GAAG,GAAG,CAAC4B,CAAC,CAAC/C,EAAE,CAAC,CAAC;IACjB,OAAOD,UAAU,CAACiG,IAAI,CAAC,EAAE;MACrB7E,GAAG,CAACM,IAAI,CAACsB,CAAC,CAACiD,IAAI,CAAC,CAAC;MACjBA,IAAI,GAAG5F,IAAI,CAAC4F,IAAI,CAAC;IACrB;IACA,OAAO7E,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIsH,SAAS,GAAG,aAAcxB,MAAM,CAAC7H,QAAQ,CAAC;AACrD;AACA;AACA;AACA;AACA,OAAO,IAAIsJ,OAAO,GAAG,aAAc5B,KAAK,CAAC1H,QAAQ,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIkH,GAAG,GAAG,SAANA,GAAG,CAAavD,CAAC,EAAE;EAAE,OAAOyD,YAAY,CAAC,UAAU5G,CAAC,EAAEe,CAAC,EAAE;IAAE,OAAOoC,CAAC,CAACpC,CAAC,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACxF;AACA;AACA;AACA;AACA,OAAO,IAAI6F,YAAY,GAAG,SAAfA,YAAY,CAAazD,CAAC,EAAE;EACnC,OAAO,UAAU/C,EAAE,EAAE;IACjB,IAAImB,GAAG,GAAG,CAAC4B,CAAC,CAAC,CAAC,EAAE5C,IAAI,CAACH,EAAE,CAAC,CAAC,CAAC;IAC1B,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,EAAE,CAAC/B,MAAM,EAAEC,CAAC,EAAE,EAAE;MAChCiD,GAAG,CAACM,IAAI,CAACsB,CAAC,CAAC7E,CAAC,EAAE8B,EAAE,CAAC9B,CAAC,CAAC,CAAC,CAAC;IACzB;IACA,OAAOiD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIa,MAAM,GAAGlC,IAAI,CAACkC,MAAM;AAC/B;AACA;AACA;AACA;AACA,OAAO,IAAIgG,eAAe,GAAGlI,IAAI,CAACkI,eAAe;AACjD;AACA;AACA;AACA;AACA,OAAO,IAAIV,WAAW,GAAGxH,IAAI,CAACwH,WAAW;AACzC;AACA;AACA;AACA;AACA,OAAO,IAAIc,oBAAoB,GAAGtI,IAAI,CAACsI,oBAAoB;AAC3D;AACA;AACA;AACA;AACA,OAAO,IAAIV,QAAQ,GAAG,SAAXA,QAAQ,CAAaF,CAAC,EAAE;EAC/B,IAAIc,kBAAkB,GAAGC,iBAAiB,CAACf,CAAC,CAAC;EAC7C,OAAO,UAAUzE,CAAC,EAAE;IAAE,OAAOuF,kBAAkB,CAAC,UAAU1I,CAAC,EAAEe,CAAC,EAAE;MAAE,OAAOoC,CAAC,CAACpC,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AACxF,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIgI,QAAQ,GAAG,SAAXA,QAAQ,CAAanB,CAAC,EAAE;EAAE,OAAOe,iBAAiB,CAACf,CAAC,CAAC,CAAC,UAAU5H,CAAC,EAAEe,CAAC,EAAE;IAAE,OAAOA,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AAClG;AACA;AACA;AACA;AACA,OAAO,IAAI4H,iBAAiB,GAAG,SAApBA,iBAAiB,CAAaf,CAAC,EAAE;EACxC,OAAO,UAAUzE,CAAC,EAAE;IAChB,OAAO,UAAU/C,EAAE,EAAE;MACjB,IAAImB,GAAG,GAAGqG,CAAC,CAAClB,GAAG,CAACvD,CAAC,CAAC,CAAC,EAAE5C,IAAI,CAACH,EAAE,CAAC,CAAC,EAAE6E,EAAE,CAAC;MACnC,KAAK,IAAI3G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,EAAE,CAAC/B,MAAM,EAAEC,CAAC,EAAE,EAAE;QAChCiD,GAAG,GAAGqG,CAAC,CAACb,EAAE,CAACa,CAAC,CAAClB,GAAG,CAACnF,GAAG,EAAE,UAAU4D,EAAE,EAAE;UAAE,OAAO,UAAUK,CAAC,EAAE;YAAE,OAAO/F,IAAI,CAAC0F,EAAE,EAAEtE,MAAM,CAAC2E,CAAC,CAAC,CAAC;UAAE,CAAC;QAAE,CAAC,CAAC,EAAErC,CAAC,CAAC7E,CAAC,EAAE8B,EAAE,CAAC9B,CAAC,CAAC,CAAC,CAAC;MAC/G;MACA,OAAOiD,GAAG;IACd,CAAC;EACL,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIyH,OAAO,GAAG9I,IAAI,CAACK,IAAI;AAC9B;AACA;AACA;AACA;AACA,OAAO,IAAI0I,GAAG,GAAG,eAAe;AAChC;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGhJ,IAAI,CAACgJ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,YAAY,GAAG,SAAfA,YAAY,GAAe;EAAE,OAAQ;IAC5CtK,MAAM,EAAEA;EACZ,CAAC;AAAG,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIuK,KAAK,GAAGlJ,IAAI,CAACkJ,KAAK;AAC7B;AACA;AACA;AACA,OAAO,IAAIC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAahI,CAAC,EAAE;EACxC,IAAIiI,MAAM,GAAGhH,KAAK,CAACjB,CAAC,CAAC;EACrB,OAAO;IACHxC,MAAM,EAAE,gBAAU4D,KAAK,EAAED,MAAM,EAAE;MAAE,OAAO8G,MAAM,CAAC9G,MAAM,CAAC,CAACC,KAAK,CAAC;IAAE;EACrE,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI8G,OAAO,GAAG;EACjBN,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED;AACT,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI3G,IAAI,GAAG,aAAcC,KAAK,CAACwJ,OAAO,CAAC;AAC9C;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAG;EACjBP,GAAG,EAAEA,GAAG;EACRhE,EAAE,EAAEA;AACR,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIwE,gBAAgB,GAAG;EAC1BR,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTG,YAAY,EAAED;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI+C,KAAK,GAAG;EACfT,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF;AACR,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI/H,OAAO,GAAG,aAAcC,QAAQ,CAAC2K,KAAK,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIxK,QAAQ,GAAG,aAAcC,SAAS,CAACuK,KAAK,CAAC;AACpD;AACA;AACA;AACA;AACA,OAAO,IAAIC,WAAW,GAAG;EACrBV,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF,GAAG;EACP5B,EAAE,EAAEA;AACR,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI2E,KAAK,GAAG;EACfX,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF,GAAG;EACPK,KAAK,EAAEF;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI1H,UAAU,GACrB,aAAcC,WAAW,CAACqK,KAAK,CAAC;AAChC;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAG;EACfZ,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF,GAAG;EACP5B,EAAE,EAAEA,EAAE;EACNiC,KAAK,EAAEF;AACX,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI8C,QAAQ,GAAG;EAClBb,GAAG,EAAEA,GAAG;EACR7G,MAAM,EAAEkF,OAAO;EACftB,OAAO,EAAEuB,QAAQ;EACjBG,WAAW,EAAED;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIsC,iBAAiB,GAAG;EAC3Bd,GAAG,EAAEA,GAAG;EACR7G,MAAM,EAAEkF,OAAO;EACftB,OAAO,EAAEuB,QAAQ;EACjBG,WAAW,EAAED,YAAY;EACzBW,eAAe,EAAED,gBAAgB;EACjCpC,gBAAgB,EAAEsC,iBAAiB;EACnCG,oBAAoB,EAAED;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIyB,WAAW,GAAG;EACrBf,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTrE,MAAM,EAAEkF,OAAO;EACftB,OAAO,EAAEuB,QAAQ;EACjBG,WAAW,EAAED,YAAY;EACzBK,QAAQ,EAAEH,SAAS;EACnBoB,QAAQ,EAAEA;AACd,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIkB,oBAAoB,GAAG;EAC9BhB,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTG,YAAY,EAAED,aAAa;EAC3BvE,MAAM,EAAEkF,OAAO;EACftB,OAAO,EAAEuB,QAAQ;EACjBG,WAAW,EAAED,YAAY;EACzBK,QAAQ,EAAEH,SAAS;EACnBoB,QAAQ,EAAEA,QAAQ;EAClBX,eAAe,EAAED,gBAAgB;EACjCpC,gBAAgB,EAAEsC,iBAAiB;EACnCG,oBAAoB,EAAED,qBAAqB;EAC3CI,iBAAiB,EAAEF;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIyB,GAAG,GAAG;EACbjB,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTyB,GAAG,EAAEF;AACT,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAImC,OAAO,GAAG;EACjBlB,GAAG,EAAEA,GAAG;EACRvC,GAAG,EAAED,IAAI;EACTY,MAAM,EAAEF,OAAO;EACf6B,OAAO,EAAEA;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIoB,EAAE,GAAG,aAAcnF,EAAE,CAACjF,CAAC,CAACqK,WAAW,CAAC;AAC/C;AACA;AACA;AACA;AACA,OAAO,IAAIzK,MAAM,GAAG,aAAcC,OAAO,CAAC0J,OAAO,CAAC;AAClD,IAAIe,IAAI,GAAG,aAAc3K,KAAK,CAAC4J,OAAO,CAAC;AACvC;AACA;AACA;AACA;AACA;AACAe,IAAI,IAAI5K,GAAG;AACX;AACA;AACA;AACA;AACA,OAAO,IAAIN,IAAI,GAAG,aAAcC,KAAK,CAACuK,KAAK,CAAC;AAC5C;AACA;AACA;AACA;AACA,OAAO,IAAI5K,GAAG,GAAG,aAAcC,IAAI,CAACyK,KAAK,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAInJ,IAAI,GAAGL,IAAI,CAACK,IAAI;AAC3B;AACA;AACA;AACA,OAAO,IAAIC,IAAI,GAAG,SAAPA,IAAI,CAAaJ,EAAE,EAAE;EAAE,OAAOA,EAAE,CAACzB,KAAK,CAAC,CAAC,CAAC;AAAE,CAAC;AACvD;AACA;AACA;AACA,OAAO,IAAIsF,IAAI,GAAG/D,IAAI,CAAC+D,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIrD,IAAI,GAAG,SAAPA,IAAI,CAAaR,EAAE,EAAE;EAAE,OAAOA,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAAE,CAAC;AAC3D;AACA;AACA;AACA,OAAO,IAAI0G,GAAG,GAAGnF,IAAI,CAACmF,GAAG;AACzB;AACA;AACA;AACA,OAAO,IAAI3B,GAAG,GAAGxD,IAAI,CAACwD,GAAG;AACzB;AACA;AACA;AACA,OAAO,IAAI6G,SAAS,GAAG,SAAZA,SAAS,CAAaC,CAAC,EAAE;EAChC,OAAO,UAAUpK,EAAE,EAAE;IACjB,OAAOA,EAAE,CAACgC,MAAM,CAACoI,CAAC,CAAC3L,MAAM,CAAC;EAC9B,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI4L,SAAS,GAAG,SAAZA,SAAS,CAAatH,CAAC,EAAE;EAChC,OAAO,UAAU/C,EAAE,EAAE;IACjB,OAAO+C,CAAC,CAAC5C,IAAI,CAACH,EAAE,CAAC,EAAEI,IAAI,CAACJ,EAAE,CAAC,CAAC;EAChC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIsK,UAAU,GAAG,SAAbA,UAAU,CAAavH,CAAC,EAAE;EACjC,OAAO,UAAU/C,EAAE,EAAE;IACjB,OAAO+C,CAAC,CAACvC,IAAI,CAACR,EAAE,CAAC,EAAE6D,IAAI,CAAC7D,EAAE,CAAC,CAAC;EAChC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIuK,UAAU,GAAG,SAAbA,UAAU,CAAaxH,CAAC,EAAE;EACjC,OAAO,UAAU/C,EAAE,EAAE;IACjB,OAAOpC,aAAa,CAAC,CAACmF,CAAC,CAAC5C,IAAI,CAACH,EAAE,CAAC,CAAC,CAAC,EAAEI,IAAI,CAACJ,EAAE,CAAC,EAAE,IAAI,CAAC;EACvD,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIwK,UAAU,GAAG,SAAbA,UAAU,CAAa7J,CAAC,EAAE;EAAE,OAAO4J,UAAU,CAAC,YAAY;IAAE,OAAO5J,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI8J,UAAU,GAAG,SAAbA,UAAU,CAAa1H,CAAC,EAAE;EACjC,OAAO,UAAU/C,EAAE,EAAE;IACjB,OAAOX,IAAI,CAACmB,IAAI,CAACR,EAAE,CAAC,EAAES,MAAM,CAACsC,CAAC,CAACc,IAAI,CAAC7D,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI0K,UAAU,GAAG,SAAbA,UAAU,CAAa/J,CAAC,EAAE;EAAE,OAAO8J,UAAU,CAAC,YAAY;IAAE,OAAO9J,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIgK,WAAW,GAAG7K,IAAI,CAAC6K,WAAW;AACzC,OAAO,SAASC,SAAS,CAACpG,CAAC,EAAE;EACzB,IAAIqG,KAAK,GAAG9I,IAAI,CAACyC,CAAC,CAAC;EACnB,IAAIsG,MAAM,GAAG5G,KAAK,CAACM,CAAC,CAAC;EACrB,OAAO,UAAUxE,EAAE,EAAE;IAAE,OAAQD,UAAU,CAACC,EAAE,CAAC,GAAG8K,MAAM,CAACD,KAAK,CAAC7K,EAAE,CAAC,CAAC,GAAG,EAAE;EAAG,CAAC;AAC9E;AACA,OAAO,SAAS+K,MAAM,CAACC,SAAS,EAAE;EAC9B,OAAOC,eAAe,CAAC,UAAUrL,CAAC,EAAEe,CAAC,EAAE;IAAE,OAAOqK,SAAS,CAACrK,CAAC,CAAC;EAAE,CAAC,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIsK,eAAe,GAAG,SAAlBA,eAAe,CAAaD,SAAS,EAAE;EAC9C,OAAO,UAAUhL,EAAE,EAAE;IACjB,OAAOiD,SAAS,CAACjD,EAAE,CAAC+K,MAAM,CAAC,UAAUpK,CAAC,EAAEzC,CAAC,EAAE;MAAE,OAAO8M,SAAS,CAAC9M,CAAC,EAAEyC,CAAC,CAAC;IAAE,CAAC,CAAC,CAAC;EAC5E,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIuK,MAAM,GAAGvH,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIwH,MAAM,GAAGvH,QAAQ;AAC5B,OAAO,SAASwH,IAAI,CAACjL,IAAI,EAAEC,IAAI,EAAE;EAC7B,OAAOA,IAAI,KAAK+E,SAAS,GAAG9E,OAAO,CAACF,IAAI,CAAC,GAAGd,IAAI,CAACe,IAAI,EAAEC,OAAO,CAACF,IAAI,CAAC,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIkL,IAAI,GAAG,SAAPA,IAAI,CAAa7K,IAAI,EAAED,GAAG,EAAE;EAAE,OAAOlB,IAAI,CAACmB,IAAI,EAAEC,MAAM,CAACF,GAAG,CAAC,CAAC;AAAE,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI+K,YAAY,GAAG9F,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI+F,IAAI,GAAGzL,IAAI,CAACqK,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIqB,aAAa,GAAG;EACvB3C,GAAG,EAAEA,GAAG;EACRhE,EAAE,EAAEA,EAAE;EACNyB,GAAG,EAAED,IAAI;EACTG,YAAY,EAAED,aAAa;EAC3BI,EAAE,EAAEF,GAAG;EACPK,KAAK,EAAEF,MAAM;EACbK,MAAM,EAAEF,OAAO;EACf6B,OAAO,EAAEA,OAAO;EAChB5G,MAAM,EAAEkF,OAAO;EACftB,OAAO,EAAEuB,QAAQ;EACjBG,WAAW,EAAED,YAAY;EACzBK,QAAQ,EAAEH,SAAS;EACnBoB,QAAQ,EAAEA,QAAQ;EAClBX,eAAe,EAAED,gBAAgB;EACjCpC,gBAAgB,EAAEsC,iBAAiB;EACnCG,oBAAoB,EAAED,qBAAqB;EAC3CI,iBAAiB,EAAEF,kBAAkB;EACrCP,GAAG,EAAEF;AACT,CAAC"},"metadata":{},"sourceType":"module"}