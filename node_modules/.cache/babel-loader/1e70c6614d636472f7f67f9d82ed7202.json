{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"../../boc\"),\n  Cell = _require.Cell;\nvar _require2 = require(\"../index.js\"),\n  Contract = _require2.Contract;\nvar _require3 = require(\"../../utils\"),\n  Address = _require3.Address,\n  bytesToHex = _require3.bytesToHex,\n  BN = _require3.BN,\n  toNano = _require3.toNano;\nvar _require4 = require(\"./WalletContract\"),\n  WalletContract = _require4.WalletContract;\nvar WalletV4ContractR2 = /*#__PURE__*/function (_WalletContract) {\n  \"use strict\";\n\n  _inherits(WalletV4ContractR2, _WalletContract);\n  var _super = _createSuper(WalletV4ContractR2);\n  /**\n   * @param provider    {HttpProvider}\n   * @param options {any}\n   */\n  function WalletV4ContractR2(provider, options) {\n    var _this;\n    _classCallCheck(this, WalletV4ContractR2);\n    options.code = Cell.oneFromBocn    _this = _super.call(this, provider, options);\n    if (!_this.options.walletId) _this.options.walletId = 698983191 + _this.options.wc;\n    _this.methods.deployAndInstallPlugin = function (params) {\n      return Contract.createMethod(provider, _this.deployAndInstallPlugin(params));\n    };\n    _this.methods.installPlugin = function (params) {\n      return Contract.createMethod(provider, _this.installPlugin(params));\n    };\n    _this.methods.removePlugin = function (params) {\n      return Contract.createMethod(provider, _this.removePlugin(params));\n    };\n    _this.methods.getPublicKey = _this.getPublicKey.bind(_assertThisInitialized(_this));\n    _this.methods.getWalletId = _this.getWalletId.bind(_assertThisInitialized(_this));\n    _this.methods.isPluginInstalled = _this.isPluginInstalled.bind(_assertThisInitialized(_this));\n    _this.methods.getPluginsList = _this.getPluginsList.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(WalletV4ContractR2, [{\n    key: \"getName\",\n    value: function getName() {\n      return 'v4R2';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n  }, {\n    key: \"createSigningMessage\",\n    value: function createSigningMessage(seqno, withoutOp) {\n      seqno = seqno || 0;\n      var message = new Cell();\n      message.bits.writeUint(this.options.walletId, 32);\n      if (seqno === 0) {\n        // message.bits.writeInt(-1, 32);// todo: dont work\n        for (var i = 0; i < 32; i++) {\n          message.bits.writeBit(1);\n        }\n      } else {\n        var date = new Date();\n        var timestamp = Math.floor(date.getTime() / 1e3);\n        message.bits.writeUint(timestamp + 60, 32);\n      }\n      message.bits.writeUint(seqno, 32);\n      if (!withoutOp) {\n        message.bits.writeUint(0, 8); // op\n      }\n\n      return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n  }, {\n    key: \"createDataCell\",\n    value: function createDataCell() {\n      var cell = new Cell();\n      cell.bits.writeUint(0, 32); // seqno\n      cell.bits.writeUint(this.options.walletId, 32);\n      cell.bits.writeBytes(this.options.publicKey);\n      cell.bits.writeUint(0, 1); // plugins dict empty\n      return cell;\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginWc: number, amount: BN, stateInit: Cell, body: Cell}}\n     */\n  }, {\n    key: \"deployAndInstallPlugin\",\n    value: function () {\n      var _deployAndInstallPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n        var secretKey, seqno, pluginWc, amount, stateInit, body, signingMessage;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                secretKey = params.secretKey, seqno = params.seqno, pluginWc = params.pluginWc, amount = params.amount, stateInit = params.stateInit, body = params.body;\n                signingMessage = this.createSigningMessage(seqno, true);\n                signingMessage.bits.writeUint(1, 8); // op\n                signingMessage.bits.writeInt(pluginWc, 8);\n                signingMessage.bits.writeGrams(amount);\n                signingMessage.refs.push(stateInit);\n                signingMessage.refs.push(body);\n                return _context.abrupt(\"return\", this.createExternalMessage(signingMessage, secretKey, seqno, false));\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function deployAndInstallPlugin(_x) {\n        return _deployAndInstallPlugin.apply(this, arguments);\n      }\n      return deployAndInstallPlugin;\n    }()\n    /**\n     * @private\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     * @param   isInstall {boolean} install or uninstall\n     */\n  }, {\n    key: \"_setPlugin\",\n    value: function () {\n      var _setPlugin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, isInstall) {\n        var secretKey, seqno, amount, queryId, pluginAddress, signingMessage;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                secretKey = params.secretKey, seqno = params.seqno, amount = params.amount, queryId = params.queryId;\n                pluginAddress = new Address(params.pluginAddress);\n                signingMessage = this.createSigningMessage(seqno, true);\n                signingMessage.bits.writeUint(isInstall ? 2 : 3, 8); // op\n                signingMessage.bits.writeInt(pluginAddress.wc, 8);\n                signingMessage.bits.writeBytes(pluginAddress.hashPart);\n                signingMessage.bits.writeGrams(amount || toNano(0.1));\n                signingMessage.bits.writeUint(queryId || 0, 64);\n                return _context2.abrupt(\"return\", this.createExternalMessage(signingMessage, secretKey, seqno, false));\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function _setPlugin(_x2, _x3) {\n        return _setPlugin2.apply(this, arguments);\n      }\n      return _setPlugin;\n    }()\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n  }, {\n    key: \"installPlugin\",\n    value: function () {\n      var _installPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this._setPlugin(params, true));\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function installPlugin(_x4) {\n        return _installPlugin.apply(this, arguments);\n      }\n      return installPlugin;\n    }()\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n  }, {\n    key: \"removePlugin\",\n    value: function () {\n      var _removePlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(params) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this._setPlugin(params, false));\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function removePlugin(_x5) {\n        return _removePlugin.apply(this, arguments);\n      }\n      return removePlugin;\n    }()\n    /**\n     * @return {Promise<number>}\n     */\n  }, {\n    key: \"getWalletId\",\n    value: function () {\n      var _getWalletId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var myAddress, id;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.getAddress();\n              case 2:\n                myAddress = _context5.sent;\n                _context5.next = 5;\n                return this.provider.call2(myAddress.toString(), 'get_subwallet_id');\n              case 5:\n                id = _context5.sent;\n                return _context5.abrupt(\"return\", id.toNumber());\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function getWalletId() {\n        return _getWalletId.apply(this, arguments);\n      }\n      return getWalletId;\n    }()\n    /**\n     * @return {Promise<BN>}\n     */\n  }, {\n    key: \"getPublicKey\",\n    value: function () {\n      var _getPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var myAddress;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getAddress();\n              case 2:\n                myAddress = _context6.sent;\n                return _context6.abrupt(\"return\", this.provider.call2(myAddress.toString(), 'get_public_key'));\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function getPublicKey() {\n        return _getPublicKey.apply(this, arguments);\n      }\n      return getPublicKey;\n    }()\n    /**\n     * @param pluginAddress {string | Address}\n     * @return {Promise<boolean>}\n     */\n  }, {\n    key: \"isPluginInstalled\",\n    value: function () {\n      var _isPluginInstalled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(pluginAddress) {\n        var hashPart, myAddress, result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                pluginAddress = new Address(pluginAddress);\n                hashPart = '0x' + bytesToHex(pluginAddress.hashPart);\n                _context7.next = 4;\n                return this.getAddress();\n              case 4:\n                myAddress = _context7.sent;\n                _context7.next = 7;\n                return this.provider.call2(myAddress.toString(), 'is_plugin_installed', [['num', pluginAddress.wc], ['num', hashPart]]);\n              case 7:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", !result.isZero());\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function isPluginInstalled(_x6) {\n        return _isPluginInstalled.apply(this, arguments);\n      }\n      return isPluginInstalled;\n    }()\n    /**\n     * @return {Promise<string[]>} plugins addresses\n     */\n  }, {\n    key: \"getPluginsList\",\n    value: function () {\n      var _getPluginsList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var parseAddress, myAddress, result;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                parseAddress = function parseAddress(tuple) {\n                  return tuple[0].toNumber() + ':' + tuple[1].toString(16);\n                };\n                _context8.next = 3;\n                return this.getAddress();\n              case 3:\n                myAddress = _context8.sent;\n                _context8.next = 6;\n                return this.provider.call2(myAddress.toString(), 'get_plugin_list');\n              case 6:\n                result = _context8.sent;\n                return _context8.abrupt(\"return\", result.map(parseAddress));\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function getPluginsList() {\n        return _getPluginsList.apply(this, arguments);\n      }\n      return getPluginsList;\n    }()\n  }]);\n  return WalletV4ContractR2;\n}(WalletContract);\nmodule.exports = {\n  WalletV4ContractR2: WalletV4ContractR2\n};","map":{"version":3,"names":["require","Cell","Contract","Address","bytesToHex","BN","toNano","WalletContract","WalletV4ContractR2","provider","options","code","oneFromBoc","walletId","wc","methods","deployAndInstallPlugin","params","createMethod","installPlugin","removePlugin","getPublicKey","bind","getWalletId","isPluginInstalled","getPluginsList","seqno","withoutOp","message","bits","writeUint","i","writeBit","date","Date","timestamp","Math","floor","getTime","cell","writeBytes","publicKey","secretKey","pluginWc","amount","stateInit","body","signingMessage","createSigningMessage","writeInt","writeGrams","refs","push","createExternalMessage","isInstall","queryId","pluginAddress","hashPart","_setPlugin","getAddress","myAddress","call2","toString","id","toNumber","result","isZero","parseAddress","tuple","map","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/contract/wallet/WalletContractV4R2.js"],"sourcesContent":["const {Cell} = require(\"../../boc\");\nconst {Contract} = require(\"../index.js\");\nconst {Address, bytesToHex, BN, toNano} = require(\"../../utils\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV4ContractR2 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n\n        this.methods.deployAndInstallPlugin = (params) => Contract.createMethod(provider, this.deployAndInstallPlugin(params));\n        this.methods.installPlugin = (params) => Contract.createMethod(provider, this.installPlugin(params));\n        this.methods.removePlugin = (params) => Contract.createMethod(provider, this.removePlugin(params));\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n        this.methods.getWalletId = this.getWalletId.bind(this);\n        this.methods.isPluginInstalled = this.isPluginInstalled.bind(this);\n        this.methods.getPluginsList = this.getPluginsList.bind(this);\n    }\n\n    getName() {\n        return 'v4R2';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        if (!withoutOp) {\n            message.bits.writeUint(0, 8); // op\n        }\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32); // seqno\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        cell.bits.writeUint(0, 1); // plugins dict empty\n        return cell;\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginWc: number, amount: BN, stateInit: Cell, body: Cell}}\n     */\n    async deployAndInstallPlugin(params) {\n        const {secretKey, seqno, pluginWc, amount, stateInit, body} = params;\n\n        const signingMessage = this.createSigningMessage(seqno, true);\n        signingMessage.bits.writeUint(1, 8); // op\n        signingMessage.bits.writeInt(pluginWc, 8);\n        signingMessage.bits.writeGrams(amount);\n        signingMessage.refs.push(stateInit);\n        signingMessage.refs.push(body);\n        return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n    }\n\n    /**\n     * @private\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     * @param   isInstall {boolean} install or uninstall\n     */\n    async _setPlugin(params, isInstall) {\n        const {secretKey, seqno, amount, queryId} = params;\n        const pluginAddress = new Address(params.pluginAddress);\n\n        const signingMessage = this.createSigningMessage(seqno, true);\n        signingMessage.bits.writeUint(isInstall ? 2 : 3, 8); // op\n        signingMessage.bits.writeInt(pluginAddress.wc, 8);\n        signingMessage.bits.writeBytes(pluginAddress.hashPart);\n        signingMessage.bits.writeGrams(amount || toNano(0.1));\n        signingMessage.bits.writeUint(queryId || 0, 64);\n\n        return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n    async installPlugin(params) {\n        return this._setPlugin(params, true);\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n    async removePlugin(params) {\n        return this._setPlugin(params, false);\n    }\n\n    /**\n     * @return {Promise<number>}\n     */\n    async getWalletId() {\n        const myAddress = await this.getAddress();\n        const id = await this.provider.call2(myAddress.toString(), 'get_subwallet_id');\n        return id.toNumber();\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n\n    /**\n     * @param pluginAddress {string | Address}\n     * @return {Promise<boolean>}\n     */\n    async isPluginInstalled(pluginAddress) {\n        pluginAddress = new Address(pluginAddress);\n        const hashPart = '0x' + bytesToHex(pluginAddress.hashPart);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'is_plugin_installed', [['num', pluginAddress.wc], ['num', hashPart]]);\n        return !result.isZero();\n    }\n\n    /**\n     * @return {Promise<string[]>} plugins addresses\n     */\n    async getPluginsList() {\n        const parseAddress = tuple => tuple[0].toNumber() + ':' + tuple[1].toString(16);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_plugin_list');\n        return result.map(parseAddress);\n    }\n}\n\nmodule.exports = {WalletV4ContractR2};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}