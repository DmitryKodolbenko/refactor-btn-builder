{"ast":null,"code":"const {\n  Contract\n} = require(\"../../index\");\nconst {\n  Cell\n} = require(\"../../../boc\");\nconst {\n  parseAddress\n} = require(\"./NftUtils\");\nconst {\n  BN\n} = require(\"../../../utils\");\nconstn\n/**\n * Not release - will change\n */\nclass NftSale extends Contract {\n  /**\n   * @param provider\n   * @param options   {{marketplaceAddress: Address, nftAddress: Address, fullPrice: BN, marketplaceFee: BN, royaltyAddress: Address, royaltyAmount: BN, address?: Address | string, code?: Cell}}\n   */\n  constructor(provider, options) {\n    options.wc = 0;\n    options.code = options.code || Cell.oneFromBoc(NFT_SALE_HEX_CODE);\n    super(provider, options);\n    this.methods.getData = this.getData.bind(this);\n  }\n\n  /**\n   * @override\n   * @private\n   * @return {Cell} cell contains nft sale data\n   */\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeAddress(this.options.marketplaceAddress);\n    cell.bits.writeAddress(this.options.nftAddress);\n    cell.bits.writeAddress(null); // nft_owner_address\n    cell.bits.writeCoins(this.options.fullPrice);\n    const feesCell = new Cell();\n    feesCell.bits.writeCoins(this.options.marketplaceFee);\n    feesCell.bits.writeAddress(this.options.royaltyAddress);\n    feesCell.bits.writeCoins(this.options.royaltyAmount);\n    cell.refs[0] = feesCell;\n    return cell;\n  }\n  async getData() {\n    const myAddress = await this.getAddress();\n    const result = await this.provider.call2(myAddress.toString(), 'get_sale_data');\n    const marketplaceAddress = parseAddress(result[0]);\n    const nftAddress = parseAddress(result[1]);\n    const nftOwnerAddress = parseAddress(result[2]);\n    const fullPrice = result[3];\n    const marketplaceFee = result[4];\n    const royaltyAddress = parseAddress(result[5]);\n    const royaltyAmount = result[6];\n    return {\n      marketplaceAddress,\n      nftAddress,\n      nftOwnerAddress,\n      fullPrice,\n      marketplaceFee,\n      royaltyAddress,\n      royaltyAmount\n    };\n  }\n\n  /**\n   * @param params    {{queryId?: number}}\n   */\n  async createCancelBody(params) {\n    const cell = new Cell();\n    cell.bits.writeUint(3, 32); // cancel op\n    cell.bits.writeUint(params.queryId || 0, 64);\n    return cell;\n  }\n}\nNftSale.codeHex = NFT_SALE_HEX_CODE;\nmodule.exports = {\n  NftSale\n};","map":{"version":3,"names":["Contract","require","Cell","parseAddress","BN","NFT_SALE_HEX_CODE","NftSale","constructor","provider","options","wc","code","oneFromBoc","methods","getData","bind","createDataCell","cell","bits","writeAddress","marketplaceAddress","nftAddress","writeCoins","fullPrice","feesCell","marketplaceFee","royaltyAddress","royaltyAmount","refs","myAddress","getAddress","result","call2","toString","nftOwnerAddress","createCancelBody","params","writeUint","queryId","codeHex","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/contract/token/nft/NftSale.js"],"sourcesContent":["const {Contract} = require(\"../../index\");\nconst {Cell} = require(\"../../../boc\");\nconst {parseAddress} = require(\"./NftUtils\");\nconst {BN} = require(\"../../../utils\");\n\nconstn\n/**\n * Not release - will change\n */\nclass NftSale extends Contract {\n\n    /**\n     * @param provider\n     * @param options   {{marketplaceAddress: Address, nftAddress: Address, fullPrice: BN, marketplaceFee: BN, royaltyAddress: Address, royaltyAmount: BN, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc(NFT_SALE_HEX_CODE);\n        super(provider, options);\n\n        this.methods.getData = this.getData.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft sale data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.marketplaceAddress);\n        cell.bits.writeAddress(this.options.nftAddress);\n        cell.bits.writeAddress(null); // nft_owner_address\n        cell.bits.writeCoins(this.options.fullPrice);\n\n        const feesCell = new Cell();\n        feesCell.bits.writeCoins(this.options.marketplaceFee);\n        feesCell.bits.writeAddress(this.options.royaltyAddress);\n        feesCell.bits.writeCoins(this.options.royaltyAmount);\n        cell.refs[0] = feesCell;\n\n        return cell;\n    }\n\n    async getData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_sale_data');\n\n        const marketplaceAddress = parseAddress(result[0]);\n        const nftAddress = parseAddress(result[1]);\n        const nftOwnerAddress = parseAddress(result[2]);\n        const fullPrice = result[3];\n        const marketplaceFee = result[4];\n        const royaltyAddress = parseAddress(result[5]);\n        const royaltyAmount = result[6];\n\n        return {marketplaceAddress, nftAddress, nftOwnerAddress, fullPrice, marketplaceFee, royaltyAddress, royaltyAmount};\n    }\n\n    /**\n     * @param params    {{queryId?: number}}\n     */\n    async createCancelBody(params) {\n        const cell = new Cell();\n        cell.bits.writeUint(3, 32); // cancel op\n        cell.bits.writeUint(params.queryId || 0, 64);\n        return cell;\n    }\n\n}\n\nNftSale.codeHex = NFT_SALE_HEX_CODE;\n\nmodule.exports = {NftSale};"],"mappings":"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"},"metadata":{},"sourceType":"script"}