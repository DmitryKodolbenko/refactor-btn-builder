{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigContract = void 0;\nconst __1 = require(\"..\");\nconst BitStringReader_1 = require(\"../boc/BitStringReader\");\nconst Builder_1 = require(\"../boc/Builder\");\nconst parseDict_1 = require(\"../boc/dict/parseDict\");\nconst configParsing_1 = require(\"./configs/configParsing\");\nclass ConfigContract {\n  constructor(client) {\n    this.address = __1.Address.parseRaw('-1:5555555555555555555555555555555555555555555555555555555555555555');\n    this.source = new __1.UnknownContractSource('org.ton.config', -1, 'Config Contract');\n    this.client = client;\n  }\n  async getSeqNo() {\n    let res = await this.client.callGetMethod(this.address, 'seqno');\n    return parseInt(res.stack[0][1], 16);\n  }\n  async getPublicKey() {\n    let data = (await this.client.getContractState(this.address)).data;\n    let cell = __1.Cell.fromBoc(data)[0];\n    let reader = new BitStringReader_1.BitStringReader(cell.bits);\n    reader.readUint(32); // Seqno\n    return reader.readUint(256); // Public Key\n  }\n\n  async getConfigsRaw() {\n    let data = (await this.client.getContractState(this.address)).data;\n    let slice = __1.Cell.fromBoc(data)[0].beginParse();\n    let dict = slice.readRef();\n    let res = (0, parseDict_1.parseDictRefs)(dict, 32);\n    return res;\n  }\n  async getConfigs() {\n    let configs = await this.getConfigsRaw();\n    return (0, configParsing_1.parseFullConfig)(configs);\n  }\n  async createProposal(args) {\n    return (0, Builder_1.beginCell)().storeUint(0x6e565052, 32).storeUint(args.queryId, 64).storeUint(args.expiresAt, 32).storeRef((0, Builder_1.beginCell)().storeUint(0xf3, 8).storeUint(args.paramId, 32).storeRefMaybe(args.paramValue).storeRefMaybe(args.ifHashEqual).endCell()).storeBit(args.critical).endCell();\n  }\n}\nexports.ConfigContract = ConfigContract;","map":{"version":3,"names":["Object","defineProperty","exports","value","ConfigContract","__1","require","BitStringReader_1","Builder_1","parseDict_1","configParsing_1","constructor","client","address","Address","parseRaw","source","UnknownContractSource","getSeqNo","res","callGetMethod","parseInt","stack","getPublicKey","data","getContractState","cell","Cell","fromBoc","reader","BitStringReader","bits","readUint","getConfigsRaw","slice","beginParse","dict","readRef","parseDictRefs","getConfigs","configs","parseFullConfig","createProposal","args","beginCell","storeUint","queryId","expiresAt","storeRef","paramId","storeRefMaybe","paramValue","ifHashEqual","endCell","storeBit","critical"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/contracts/ConfigContract.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigContract = void 0;\nconst __1 = require(\"..\");\nconst BitStringReader_1 = require(\"../boc/BitStringReader\");\nconst Builder_1 = require(\"../boc/Builder\");\nconst parseDict_1 = require(\"../boc/dict/parseDict\");\nconst configParsing_1 = require(\"./configs/configParsing\");\nclass ConfigContract {\n    constructor(client) {\n        this.address = __1.Address.parseRaw('-1:5555555555555555555555555555555555555555555555555555555555555555');\n        this.source = new __1.UnknownContractSource('org.ton.config', -1, 'Config Contract');\n        this.client = client;\n    }\n    async getSeqNo() {\n        let res = await this.client.callGetMethod(this.address, 'seqno');\n        return parseInt(res.stack[0][1], 16);\n    }\n    async getPublicKey() {\n        let data = (await this.client.getContractState(this.address)).data;\n        let cell = __1.Cell.fromBoc(data)[0];\n        let reader = new BitStringReader_1.BitStringReader(cell.bits);\n        reader.readUint(32); // Seqno\n        return reader.readUint(256); // Public Key\n    }\n    async getConfigsRaw() {\n        let data = (await this.client.getContractState(this.address)).data;\n        let slice = __1.Cell.fromBoc(data)[0].beginParse();\n        let dict = slice.readRef();\n        let res = (0, parseDict_1.parseDictRefs)(dict, 32);\n        return res;\n    }\n    async getConfigs() {\n        let configs = await this.getConfigsRaw();\n        return (0, configParsing_1.parseFullConfig)(configs);\n    }\n    async createProposal(args) {\n        return (0, Builder_1.beginCell)()\n            .storeUint(0x6e565052, 32)\n            .storeUint(args.queryId, 64)\n            .storeUint(args.expiresAt, 32)\n            .storeRef((0, Builder_1.beginCell)()\n            .storeUint(0xf3, 8)\n            .storeUint(args.paramId, 32)\n            .storeRefMaybe(args.paramValue)\n            .storeRefMaybe(args.ifHashEqual)\n            .endCell())\n            .storeBit(args.critical)\n            .endCell();\n    }\n}\nexports.ConfigContract = ConfigContract;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}