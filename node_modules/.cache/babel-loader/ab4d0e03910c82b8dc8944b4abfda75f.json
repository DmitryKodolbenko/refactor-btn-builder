{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base32Decode = exports.base32Encode = void 0;\nvar alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\nfunction base32Encode(buffer) {\n  var length = buffer.byteLength;\n  var bits = 0;\n  var value = 0;\n  var output = '';\n  for (var i = 0; i < length; i++) {\n    value = value << 8 | buffer[i];\n    bits += 8;\n    while (bits >= 5) {\n      output += alphabet[value >>> bits - 5 & 31];\n      bits -= 5;\n    }\n  }\n  if (bits > 0) {\n    output += alphabet[value << 5 - bits & 31];\n  }\n  return output;\n}\nexports.base32Encode = base32Encode;\nfunction readChar(alphabet, char) {\n  var idx = alphabet.indexOf(char);\n  if (idx === -1) {\n    throw new Error('Invalid character found: ' + char);\n  }\n  return idx;\n}\nfunction base32Decode(input) {\n  var cleanedInput;\n  cleanedInput = input.toLowerCase();\n  var _cleanedInput = cleanedInput,\n    length = _cleanedInput.length;\n  var bits = 0;\n  var value = 0;\n  var index = 0;\n  var output = Buffer.alloc(length * 5 / 8 | 0);\n  for (var i = 0; i < length; i++) {\n    value = value << 5 | readChar(alphabet, cleanedInput[i]);\n    bits += 5;\n    if (bits >= 8) {\n      output[index++] = value >>> bits - 8 & 255;\n      bits -= 8;\n    }\n  }\n  return output;\n}\nexports.base32Decode = base32Decode;","map":{"version":3,"names":["Object","defineProperty","exports","value","base32Decode","base32Encode","alphabet","buffer","length","byteLength","bits","output","i","readChar","char","idx","indexOf","Error","input","cleanedInput","toLowerCase","index","Buffer","alloc"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/utils/base32.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base32Decode = exports.base32Encode = void 0;\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\nfunction base32Encode(buffer) {\n    const length = buffer.byteLength;\n    let bits = 0;\n    let value = 0;\n    let output = '';\n    for (let i = 0; i < length; i++) {\n        value = (value << 8) | buffer[i];\n        bits += 8;\n        while (bits >= 5) {\n            output += alphabet[(value >>> (bits - 5)) & 31];\n            bits -= 5;\n        }\n    }\n    if (bits > 0) {\n        output += alphabet[(value << (5 - bits)) & 31];\n    }\n    return output;\n}\nexports.base32Encode = base32Encode;\nfunction readChar(alphabet, char) {\n    const idx = alphabet.indexOf(char);\n    if (idx === -1) {\n        throw new Error('Invalid character found: ' + char);\n    }\n    return idx;\n}\nfunction base32Decode(input) {\n    let cleanedInput;\n    cleanedInput = input.toLowerCase();\n    const { length } = cleanedInput;\n    let bits = 0;\n    let value = 0;\n    let index = 0;\n    const output = Buffer.alloc(((length * 5) / 8) | 0);\n    for (let i = 0; i < length; i++) {\n        value = (value << 5) | readChar(alphabet, cleanedInput[i]);\n        bits += 5;\n        if (bits >= 8) {\n            output[index++] = (value >>> (bits - 8)) & 255;\n            bits -= 8;\n        }\n    }\n    return output;\n}\nexports.base32Decode = base32Decode;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,YAAY,GAAG,KAAK,CAAC;AACpD,IAAMC,QAAQ,GAAG,kCAAkC;AACnD,SAASD,YAAY,CAACE,MAAM,EAAE;EAC1B,IAAMC,MAAM,GAAGD,MAAM,CAACE,UAAU;EAChC,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIP,KAAK,GAAG,CAAC;EACb,IAAIQ,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC7BT,KAAK,GAAIA,KAAK,IAAI,CAAC,GAAII,MAAM,CAACK,CAAC,CAAC;IAChCF,IAAI,IAAI,CAAC;IACT,OAAOA,IAAI,IAAI,CAAC,EAAE;MACdC,MAAM,IAAIL,QAAQ,CAAEH,KAAK,KAAMO,IAAI,GAAG,CAAE,GAAI,EAAE,CAAC;MAC/CA,IAAI,IAAI,CAAC;IACb;EACJ;EACA,IAAIA,IAAI,GAAG,CAAC,EAAE;IACVC,MAAM,IAAIL,QAAQ,CAAEH,KAAK,IAAK,CAAC,GAAGO,IAAK,GAAI,EAAE,CAAC;EAClD;EACA,OAAOC,MAAM;AACjB;AACAT,OAAO,CAACG,YAAY,GAAGA,YAAY;AACnC,SAASQ,QAAQ,CAACP,QAAQ,EAAEQ,IAAI,EAAE;EAC9B,IAAMC,GAAG,GAAGT,QAAQ,CAACU,OAAO,CAACF,IAAI,CAAC;EAClC,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,2BAA2B,GAAGH,IAAI,CAAC;EACvD;EACA,OAAOC,GAAG;AACd;AACA,SAASX,YAAY,CAACc,KAAK,EAAE;EACzB,IAAIC,YAAY;EAChBA,YAAY,GAAGD,KAAK,CAACE,WAAW,EAAE;EAClC,oBAAmBD,YAAY;IAAvBX,MAAM,iBAANA,MAAM;EACd,IAAIE,IAAI,GAAG,CAAC;EACZ,IAAIP,KAAK,GAAG,CAAC;EACb,IAAIkB,KAAK,GAAG,CAAC;EACb,IAAMV,MAAM,GAAGW,MAAM,CAACC,KAAK,CAAGf,MAAM,GAAG,CAAC,GAAI,CAAC,GAAI,CAAC,CAAC;EACnD,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC7BT,KAAK,GAAIA,KAAK,IAAI,CAAC,GAAIU,QAAQ,CAACP,QAAQ,EAAEa,YAAY,CAACP,CAAC,CAAC,CAAC;IAC1DF,IAAI,IAAI,CAAC;IACT,IAAIA,IAAI,IAAI,CAAC,EAAE;MACXC,MAAM,CAACU,KAAK,EAAE,CAAC,GAAIlB,KAAK,KAAMO,IAAI,GAAG,CAAE,GAAI,GAAG;MAC9CA,IAAI,IAAI,CAAC;IACb;EACJ;EACA,OAAOC,MAAM;AACjB;AACAT,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}