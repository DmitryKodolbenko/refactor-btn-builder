{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nvar ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction getSecureRandomBytes(_x) {\n  return _getSecureRandomBytes.apply(this, arguments);\n}\nfunction _getSecureRandomBytes() {\n  _getSecureRandomBytes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(size) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", (0, ton_crypto_primitives_1.getSecureRandomBytes)(size));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getSecureRandomBytes.apply(this, arguments);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nfunction getSecureRandomWords(_x2) {\n  return _getSecureRandomWords.apply(this, arguments);\n}\nfunction _getSecureRandomWords() {\n  _getSecureRandomWords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(size) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", getSecureRandomWords(size));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getSecureRandomWords.apply(this, arguments);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nfunction getSecureRandomNumber(_x3, _x4) {\n  return _getSecureRandomNumber.apply(this, arguments);\n}\nfunction _getSecureRandomNumber() {\n  _getSecureRandomNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(min, max) {\n    var range, bitsNeeded, bytesNeeded, mask, res, power, numberValue, i;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            range = max - min;\n            bitsNeeded = Math.ceil(Math.log2(range));\n            if (!(bitsNeeded > 53)) {\n              _context3.next = 4;\n              break;\n            }\n            throw new Error('Range is too large');\n          case 4:\n            bytesNeeded = Math.ceil(bitsNeeded / 8);\n            mask = Math.pow(2, bitsNeeded) - 1;\n          case 6:\n            if (!true) {\n              _context3.next = 19;\n              break;\n            }\n            _context3.next = 9;\n            return getSecureRandomBytes(bitsNeeded);\n          case 9:\n            res = _context3.sent;\n            power = (bytesNeeded - 1) * 8;\n            numberValue = 0;\n            for (i = 0; i < bytesNeeded; i++) {\n              numberValue += res[i] * Math.pow(2, power);\n              power -= 8;\n            }\n            numberValue = numberValue & mask; // Truncate\n            if (!(numberValue >= range)) {\n              _context3.next = 16;\n              break;\n            }\n            return _context3.abrupt(\"continue\", 6);\n          case 16:\n            return _context3.abrupt(\"return\", min + numberValue);\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getSecureRandomNumber.apply(this, arguments);\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSecureRandomNumber","getSecureRandomWords","getSecureRandomBytes","ton_crypto_primitives_1","require","size","min","max","range","bitsNeeded","Math","ceil","log2","Error","bytesNeeded","mask","pow","res","power","numberValue","i"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/node_modules/ton-crypto/dist/primitives/getSecureRandom.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function getSecureRandomBytes(size) {\n    return (0, ton_crypto_primitives_1.getSecureRandomBytes)(size);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nasync function getSecureRandomWords(size) {\n    return getSecureRandomWords(size);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nasync function getSecureRandomNumber(min, max) {\n    let range = max - min;\n    var bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n        throw new Error('Range is too large');\n    }\n    var bytesNeeded = Math.ceil(bitsNeeded / 8);\n    var mask = Math.pow(2, bitsNeeded) - 1;\n    while (true) {\n        let res = await getSecureRandomBytes(bitsNeeded);\n        let power = (bytesNeeded - 1) * 8;\n        let numberValue = 0;\n        for (var i = 0; i < bytesNeeded; i++) {\n            numberValue += res[i] * Math.pow(2, power);\n            power -= 8;\n        }\n        numberValue = numberValue & mask; // Truncate\n        if (numberValue >= range) {\n            continue;\n        }\n        return min + numberValue;\n    }\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAGF,OAAO,CAACG,oBAAoB,GAAGH,OAAO,CAACI,oBAAoB,GAAG,KAAK,CAAC;AACpG,IAAMC,uBAAuB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAAC,SAClDF,oBAAoB;EAAA;AAAA;AAAA;EAAA,mFAAnC,iBAAoCG,IAAI;IAAA;MAAA;QAAA;UAAA;YAAA,iCAC7B,CAAC,CAAC,EAAEF,uBAAuB,CAACD,oBAAoB,EAAEG,IAAI,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACjE;EAAA;AAAA;AACDP,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AAAC,SACrCD,oBAAoB;EAAA;AAAA;AAAA;EAAA,mFAAnC,kBAAoCI,IAAI;IAAA;MAAA;QAAA;UAAA;YAAA,kCAC7BJ,oBAAoB,CAACI,IAAI,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACpC;EAAA;AAAA;AACDP,OAAO,CAACG,oBAAoB,GAAGA,oBAAoB;AAAC,SACrCD,qBAAqB;EAAA;AAAA;AAAA;EAAA,oFAApC,kBAAqCM,GAAG,EAAEC,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YACrCC,KAAK,GAAGD,GAAG,GAAGD,GAAG;YACjBG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,IAAI,CAACJ,KAAK,CAAC,CAAC;YAAA,MACxCC,UAAU,GAAG,EAAE;cAAA;cAAA;YAAA;YAAA,MACT,IAAII,KAAK,CAAC,oBAAoB,CAAC;UAAA;YAErCC,WAAW,GAAGJ,IAAI,CAACC,IAAI,CAACF,UAAU,GAAG,CAAC,CAAC;YACvCM,IAAI,GAAGL,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEP,UAAU,CAAC,GAAG,CAAC;UAAA;YAAA,KAC/B,IAAI;cAAA;cAAA;YAAA;YAAA;YAAA,OACSP,oBAAoB,CAACO,UAAU,CAAC;UAAA;YAA5CQ,GAAG;YACHC,KAAK,GAAG,CAACJ,WAAW,GAAG,CAAC,IAAI,CAAC;YAC7BK,WAAW,GAAG,CAAC;YACnB,KAASC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,EAAEM,CAAC,EAAE,EAAE;cAClCD,WAAW,IAAIF,GAAG,CAACG,CAAC,CAAC,GAAGV,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEE,KAAK,CAAC;cAC1CA,KAAK,IAAI,CAAC;YACd;YACAC,WAAW,GAAGA,WAAW,GAAGJ,IAAI,CAAC,CAAC;YAAA,MAC9BI,WAAW,IAAIX,KAAK;cAAA;cAAA;YAAA;YAAA;UAAA;YAAA,kCAGjBF,GAAG,GAAGa,WAAW;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAE/B;EAAA;AAAA;AACDrB,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script"}