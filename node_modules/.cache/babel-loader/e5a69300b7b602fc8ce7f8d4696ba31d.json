{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{PublicKey,TransactionInstruction}from\"@solana/web3.js\";import{message}from\"antd\";var bs58=require(\"bs58\");var _require=require(\"buffer\"),Buffer=_require.Buffer;var web3=require(\"@solana/web3.js\");var axios=require(\"axios\").default;var MakeSOLTrx=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(activeBtn,setIsload,connection,SOLwalletKey,walletTo,netTo,SOLAmount){var recentBlockhash,allocateTransaction,instructionMessage,instructionTransfer,_yield$window$solana$,signature,int;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!activeBtn){_context2.next=20;break;}setIsload(true);_context2.next=4;return connection.getRecentBlockhash();case 4:recentBlockhash=_context2.sent;allocateTransaction=new web3.Transaction({recentBlockhash:recentBlockhash.blockhash,feePayer:new PublicKey(SOLwalletKey)});_context2.next=8;return new TransactionInstruction({keys:[],programId:new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),data:Buffer.from(\"\".concat(netTo,\"#\").concat(walletTo))});case 8:instructionMessage=_context2.sent;instructionTransfer=web3.SystemProgram.transfer({fromPubkey:new PublicKey(SOLwalletKey),toPubkey:new PublicKey(process.env.REACT_APP_BACK_SOL_WALLET),lamports:Number(SOLAmount)*1000000000});allocateTransaction.add(instructionMessage).add(instructionTransfer);//@ts-ignore\n_context2.next=13;return window.solana.signAndSendTransaction(allocateTransaction);case 13:_yield$window$solana$=_context2.sent;signature=_yield$window$solana$.signature;_context2.next=17;return connection.confirmTransaction(signature);case 17:int=setInterval(function(){fetch(\"https://solana-mainnet.g.alchemy.com/v2/B9sqdnSJnFWSdKlCTFqEQjMr8pnj7RAb\",{method:\"POST\",headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"},body:JSON.stringify({jsonrpc:\"2.0\",id:1,method:\"getTransaction\",params:[signature,\"json\"]})}).then(function(res){return res.json();}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(res){var buf;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:message.success(\"Wait BE trx pending...\",2);if(!(res.result==null)){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:buf=bs58.decode(res.result.transaction.message.instructions[0].data.toString(16));if(buf.toString()===\"\".concat(netTo,\"#\").concat(walletTo)){fetch(process.env.REACT_APP_STATE===\"dev\"?\"http://localhost:8092\":process.env.REACT_APP_STATE===\"dev-remote\"?\"https://dev.api.tonana.org\":\"https://api.tonana.org/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({hash:signature,sourceChain:\"solana\"})});clearInterval(int);setIsload(false);message.success(\"Done trx!\",10);}case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x8){return _ref2.apply(this,arguments);};}());},5000);_context2.next=21;break;case 20:message.error(\"Fill all forms and connect wallets!\",10);case 21:case\"end\":return _context2.stop();}}},_callee2);}));return function MakeSOLTrx(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();export default MakeSOLTrx;","map":{"version":3,"names":["PublicKey","TransactionInstruction","message","bs58","require","Buffer","web3","axios","default","MakeSOLTrx","activeBtn","setIsload","connection","SOLwalletKey","walletTo","netTo","SOLAmount","getRecentBlockhash","recentBlockhash","allocateTransaction","Transaction","blockhash","feePayer","keys","programId","data","from","instructionMessage","instructionTransfer","SystemProgram","transfer","fromPubkey","toPubkey","process","env","REACT_APP_BACK_SOL_WALLET","lamports","Number","add","window","solana","signAndSendTransaction","signature","confirmTransaction","int","setInterval","fetch","method","headers","Accept","body","JSON","stringify","jsonrpc","id","params","then","res","json","success","result","buf","decode","transaction","instructions","toString","REACT_APP_STATE","hash","sourceChain","clearInterval","error"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeSOLTrx.ts"],"sourcesContent":["import { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { message } from \"antd\";\nconst bs58 = require(\"bs58\");\nconst { Buffer } = require(\"buffer\");\nconst web3 = require(\"@solana/web3.js\");\nconst axios = require(\"axios\").default;\n\nconst MakeSOLTrx = async (\n\tactiveBtn: any,\n\tsetIsload: any,\n\tconnection: any,\n\tSOLwalletKey: any,\n\twalletTo: any,\n\tnetTo: string,\n\tSOLAmount: any\n) => {\n\tif (activeBtn) {\n\t\tsetIsload(true);\n\n\t\tlet recentBlockhash = await connection.getRecentBlockhash();\n\t\tlet allocateTransaction = new web3.Transaction({\n\t\t\trecentBlockhash: recentBlockhash.blockhash,\n\t\t\tfeePayer: new PublicKey(SOLwalletKey),\n\t\t});\n\n\t\tconst instructionMessage = await new TransactionInstruction({\n\t\t\tkeys: [],\n\t\t\tprogramId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n\t\t\tdata: Buffer.from(`${netTo}#${walletTo}`),\n\t\t});\n\n\t\tconst instructionTransfer = web3.SystemProgram.transfer({\n\t\t\tfromPubkey: new PublicKey(SOLwalletKey),\n\t\t\ttoPubkey: new PublicKey(process.env.REACT_APP_BACK_SOL_WALLET as string),\n\t\t\tlamports: Number(SOLAmount) * 1000000000,\n\t\t});\n\t\tallocateTransaction.add(instructionMessage).add(instructionTransfer);\n\t\t//@ts-ignore\n\t\tconst { signature } = await window.solana.signAndSendTransaction(\n\t\t\tallocateTransaction\n\t\t);\n\t\tawait connection.confirmTransaction(signature);\n\t\tconst int = setInterval(() => {\n\t\t\tfetch(\n\t\t\t\t`https://solana-mainnet.g.alchemy.com/v2/B9sqdnSJnFWSdKlCTFqEQjMr8pnj7RAb`,\n\t\t\t\t{\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: \"application/json, text/plain, */*\",\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tjsonrpc: \"2.0\",\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\tmethod: \"getTransaction\",\n\t\t\t\t\t\tparams: [signature, \"json\"],\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tmessage.success(\"Wait BE trx pending...\", 2);\n\n\t\t\t\t\tif (res.result == null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst buf = bs58.decode(\n\t\t\t\t\t\tres.result.transaction.message.instructions[0].data.toString(16)\n\t\t\t\t\t);\n\t\t\t\t\tif (buf.toString() === `${netTo}#${walletTo}`) {\n\t\t\t\t\t\tfetch(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_STATE === \"dev\"\n\t\t\t\t\t\t\t\t? \"http://localhost:8092\"\n\t\t\t\t\t\t\t\t: process.env.REACT_APP_STATE === \"dev-remote\"\n\t\t\t\t\t\t\t\t? \"https://dev.api.tonana.org\"\n\t\t\t\t\t\t\t\t: \"https://api.tonana.org/\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\thash: signature,\n\t\t\t\t\t\t\t\t\tsourceChain: \"solana\",\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tclearInterval(int);\n\t\t\t\t\t\tsetIsload(false);\n\t\t\t\t\t\tmessage.success(\"Done trx!\", 10);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, 5000);\n\t} else {\n\t\tmessage.error(\"Fill all forms and connect wallets!\", 10);\n\t}\n};\n\nexport default MakeSOLTrx;\n"],"mappings":"sPAAA,OAASA,SAAS,CAAEC,sBAAsB,KAAQ,iBAAiB,CACnE,OAASC,OAAO,KAAQ,MAAM,CAC9B,GAAMC,KAAI,CAAGC,OAAO,CAAC,MAAM,CAAC,CAC5B,aAAmBA,OAAO,CAAC,QAAQ,CAAC,CAA5BC,MAAM,UAANA,MAAM,CACd,GAAMC,KAAI,CAAGF,OAAO,CAAC,iBAAiB,CAAC,CACvC,GAAMG,MAAK,CAAGH,OAAO,CAAC,OAAO,CAAC,CAACI,OAAO,CAEtC,GAAMC,WAAU,4FAAG,kBAClBC,SAAc,CACdC,SAAc,CACdC,UAAe,CACfC,YAAiB,CACjBC,QAAa,CACbC,KAAa,CACbC,SAAc,+OAEVN,SAAS,2BACZC,SAAS,CAAC,IAAI,CAAC,CAAC,uBAEYC,WAAU,CAACK,kBAAkB,EAAE,QAAvDC,eAAe,gBACfC,mBAAmB,CAAG,GAAIb,KAAI,CAACc,WAAW,CAAC,CAC9CF,eAAe,CAAEA,eAAe,CAACG,SAAS,CAC1CC,QAAQ,CAAE,GAAItB,UAAS,CAACa,YAAY,CACrC,CAAC,CAAC,wBAE+B,IAAIZ,uBAAsB,CAAC,CAC3DsB,IAAI,CAAE,EAAE,CACRC,SAAS,CAAE,GAAIxB,UAAS,CAAC,6CAA6C,CAAC,CACvEyB,IAAI,CAAEpB,MAAM,CAACqB,IAAI,WAAIX,KAAK,aAAID,QAAQ,EACvC,CAAC,CAAC,QAJIa,kBAAkB,gBAMlBC,mBAAmB,CAAGtB,IAAI,CAACuB,aAAa,CAACC,QAAQ,CAAC,CACvDC,UAAU,CAAE,GAAI/B,UAAS,CAACa,YAAY,CAAC,CACvCmB,QAAQ,CAAE,GAAIhC,UAAS,CAACiC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAAW,CACxEC,QAAQ,CAAEC,MAAM,CAACrB,SAAS,CAAC,CAAG,UAC/B,CAAC,CAAC,CACFG,mBAAmB,CAACmB,GAAG,CAACX,kBAAkB,CAAC,CAACW,GAAG,CAACV,mBAAmB,CAAC,CACpE;AAAA,wBAC4BW,OAAM,CAACC,MAAM,CAACC,sBAAsB,CAC/DtB,mBAAmB,CACnB,8CAFOuB,SAAS,uBAATA,SAAS,yBAGX9B,WAAU,CAAC+B,kBAAkB,CAACD,SAAS,CAAC,SACxCE,GAAG,CAAGC,WAAW,CAAC,UAAM,CAC7BC,KAAK,4EAEJ,CACCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACRC,MAAM,CAAE,mCAAmC,CAC3C,cAAc,CAAE,kBACjB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACpBC,OAAO,CAAE,KAAK,CACdC,EAAE,CAAE,CAAC,CACLP,MAAM,CAAE,gBAAgB,CACxBQ,MAAM,CAAE,CAACb,SAAS,CAAE,MAAM,CAC3B,CAAC,CACF,CAAC,CACD,CACCc,IAAI,CAAC,SAACC,GAAG,QAAKA,IAAG,CAACC,IAAI,EAAE,GAAC,CACzBF,IAAI,6FAAC,iBAAOC,GAAG,4HACfvD,OAAO,CAACyD,OAAO,CAAC,wBAAwB,CAAE,CAAC,CAAC,CAAC,KAEzCF,GAAG,CAACG,MAAM,EAAI,IAAI,0DACd,KAAK,SAEPC,GAAG,CAAG1D,IAAI,CAAC2D,MAAM,CACtBL,GAAG,CAACG,MAAM,CAACG,WAAW,CAAC7D,OAAO,CAAC8D,YAAY,CAAC,CAAC,CAAC,CAACvC,IAAI,CAACwC,QAAQ,CAAC,EAAE,CAAC,CAChE,CACD,GAAIJ,GAAG,CAACI,QAAQ,EAAE,aAAQlD,KAAK,aAAID,QAAQ,CAAE,CAAE,CAC9CgC,KAAK,CACJb,OAAO,CAACC,GAAG,CAACgC,eAAe,GAAK,KAAK,CAClC,uBAAuB,CACvBjC,OAAO,CAACC,GAAG,CAACgC,eAAe,GAAK,YAAY,CAC5C,4BAA4B,CAC5B,yBAAyB,CAC5B,CACCnB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACpBe,IAAI,CAAEzB,SAAS,CACf0B,WAAW,CAAE,QACd,CAAC,CACF,CAAC,CACD,CACDC,aAAa,CAACzB,GAAG,CAAC,CAClBjC,SAAS,CAAC,KAAK,CAAC,CAChBT,OAAO,CAACyD,OAAO,CAAC,WAAW,CAAE,EAAE,CAAC,CACjC,CAAC,sDACD,iEAAC,CACJ,CAAC,CAAE,IAAI,CAAC,iCAERzD,OAAO,CAACoE,KAAK,CAAC,qCAAqC,CAAE,EAAE,CAAC,CAAC,yDAE1D,kBAvFK7D,WAAU,oEAuFf,CAED,cAAeA,WAAU"},"metadata":{},"sourceType":"module"}