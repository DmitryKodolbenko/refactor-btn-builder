{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Address = void 0;\nvar symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nvar crc16_1 = require(\"../utils/crc16\");\nvar bounceable_tag = 0x11;\nvar non_bounceable_tag = 0x51;\nvar test_flag = 0x80;\nfunction parseFriendlyAddress(src) {\n  var data = Buffer.isBuffer(src) ? src : Buffer.from(src, 'base64');\n  // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n  if (data.length !== 36) {\n    throw new Error('Unknown address type: byte length is not equal to 36');\n  }\n  // Prepare data\n  var addr = data.slice(0, 34);\n  var crc = data.slice(34, 36);\n  var calcedCrc = (0, crc16_1.crc16)(addr);\n  if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n    throw new Error('Invalid checksum: ' + src);\n  }\n  // Parse tag\n  var tag = addr[0];\n  var isTestOnly = false;\n  var isBounceable = false;\n  if (tag & test_flag) {\n    isTestOnly = true;\n    tag = tag ^ test_flag;\n  }\n  if (tag !== bounceable_tag && tag !== non_bounceable_tag) throw \"Unknown address tag\";\n  isBounceable = tag === bounceable_tag;\n  var workchain = null;\n  if (addr[1] === 0xff) {\n    // TODO we should read signed integer here\n    workchain = -1;\n  } else {\n    workchain = addr[1];\n  }\n  var hashPart = addr.slice(2, 34);\n  return {\n    isTestOnly: isTestOnly,\n    isBounceable: isBounceable,\n    workchain: workchain,\n    hashPart: hashPart\n  };\n}\nvar Address = /*#__PURE__*/function () {\n  function Address(workChain, hash) {\n    var _this = this;\n    _classCallCheck(this, Address);\n    this.toString = function () {\n      return _this.workChain + ':' + _this.hash.toString('hex');\n    };\n    this.toBuffer = function () {\n      var addressWithChecksum = Buffer.alloc(36);\n      addressWithChecksum.set(_this.hash);\n      addressWithChecksum.set([_this.workChain, _this.workChain, _this.workChain, _this.workChain], 32);\n      return addressWithChecksum;\n    };\n    this.toFriendlyBuffer = function (args) {\n      var testOnly = args && args.testOnly !== undefined ? args.testOnly : false;\n      var bounceable = args && args.bounceable !== undefined ? args.bounceable : true;\n      var tag = bounceable ? bounceable_tag : non_bounceable_tag;\n      if (testOnly) {\n        tag |= test_flag;\n      }\n      var addr = Buffer.alloc(34);\n      addr[0] = tag;\n      addr[1] = _this.workChain;\n      addr.set(_this.hash, 2);\n      var addressWithChecksum = Buffer.alloc(36);\n      addressWithChecksum.set(addr);\n      addressWithChecksum.set((0, crc16_1.crc16)(addr), 34);\n      return addressWithChecksum;\n    };\n    this.toFriendly = function (args) {\n      var urlSafe = args && args.urlSafe !== undefined ? args.urlSafe : true;\n      var buffer = _this.toFriendlyBuffer(args);\n      if (urlSafe) {\n        return buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_');\n      } else {\n        return buffer.toString('base64');\n      }\n    };\n    this[_a] = function () {\n      return _this.toFriendly();\n    };\n    this.workChain = workChain;\n    this.hash = hash;\n    Object.freeze(this);\n  }\n  _createClass(Address, [{\n    key: \"equals\",\n    value: function equals(src) {\n      if (src.workChain !== this.workChain) {\n        return false;\n      }\n      return src.hash.equals(this.hash);\n    }\n  }], [{\n    key: \"isFriendly\",\n    value: function isFriendly(source) {\n      return source.indexOf(':') < 0;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(source) {\n      if (typeof source === 'string') {\n        return Address.parse(source).toFriendly();\n      } else {\n        return source.toFriendly();\n      }\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(source) {\n      if (Address.isFriendly(source)) {\n        return this.parseFriendly(source).address;\n      } else {\n        return this.parseRaw(source);\n      }\n    }\n  }, {\n    key: \"parseRaw\",\n    value: function parseRaw(source) {\n      var workChain = parseInt(source.split(\":\")[0]);\n      var hash = Buffer.from(source.split(\":\")[1], 'hex');\n      return new Address(workChain, hash);\n    }\n  }, {\n    key: \"parseFriendly\",\n    value: function parseFriendly(source) {\n      if (Buffer.isBuffer(source)) {\n        var r = parseFriendlyAddress(source);\n        return {\n          isBounceable: r.isBounceable,\n          isTestOnly: r.isTestOnly,\n          address: new Address(r.workchain, r.hashPart)\n        };\n      } else {\n        var addr = source.replace(/\\-/g, '+').replace(/_/g, '\\/'); // Convert from url-friendly to true base64\n        var _r = parseFriendlyAddress(addr);\n        return {\n          isBounceable: _r.isBounceable,\n          isTestOnly: _r.isTestOnly,\n          address: new Address(_r.workchain, _r.hashPart)\n        };\n      }\n    }\n  }]);\n  return Address;\n}();\nexports.Address = Address;\n_a = symbol_inspect_1.default;","map":{"version":3,"names":["__importDefault","mod","__esModule","_a","Object","defineProperty","exports","value","Address","symbol_inspect_1","require","crc16_1","bounceable_tag","non_bounceable_tag","test_flag","parseFriendlyAddress","src","data","Buffer","isBuffer","from","length","Error","addr","slice","crc","calcedCrc","crc16","tag","isTestOnly","isBounceable","workchain","hashPart","workChain","hash","toString","toBuffer","addressWithChecksum","alloc","set","toFriendlyBuffer","args","testOnly","undefined","bounceable","toFriendly","urlSafe","buffer","replace","freeze","equals","source","indexOf","parse","isFriendly","parseFriendly","address","parseRaw","parseInt","split","r","default"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/address/Address.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst crc16_1 = require(\"../utils/crc16\");\nconst bounceable_tag = 0x11;\nconst non_bounceable_tag = 0x51;\nconst test_flag = 0x80;\nfunction parseFriendlyAddress(src) {\n    const data = Buffer.isBuffer(src) ? src : Buffer.from(src, 'base64');\n    // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n    if (data.length !== 36) {\n        throw new Error('Unknown address type: byte length is not equal to 36');\n    }\n    // Prepare data\n    const addr = data.slice(0, 34);\n    const crc = data.slice(34, 36);\n    const calcedCrc = (0, crc16_1.crc16)(addr);\n    if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n        throw new Error('Invalid checksum: ' + src);\n    }\n    // Parse tag\n    let tag = addr[0];\n    let isTestOnly = false;\n    let isBounceable = false;\n    if (tag & test_flag) {\n        isTestOnly = true;\n        tag = tag ^ test_flag;\n    }\n    if ((tag !== bounceable_tag) && (tag !== non_bounceable_tag))\n        throw \"Unknown address tag\";\n    isBounceable = tag === bounceable_tag;\n    let workchain = null;\n    if (addr[1] === 0xff) { // TODO we should read signed integer here\n        workchain = -1;\n    }\n    else {\n        workchain = addr[1];\n    }\n    const hashPart = addr.slice(2, 34);\n    return { isTestOnly, isBounceable, workchain, hashPart };\n}\nclass Address {\n    constructor(workChain, hash) {\n        this.toString = () => {\n            return this.workChain + ':' + this.hash.toString('hex');\n        };\n        this.toBuffer = () => {\n            const addressWithChecksum = Buffer.alloc(36);\n            addressWithChecksum.set(this.hash);\n            addressWithChecksum.set([this.workChain, this.workChain, this.workChain, this.workChain], 32);\n            return addressWithChecksum;\n        };\n        this.toFriendlyBuffer = (args) => {\n            let testOnly = (args && args.testOnly !== undefined) ? args.testOnly : false;\n            let bounceable = (args && args.bounceable !== undefined) ? args.bounceable : true;\n            let tag = bounceable ? bounceable_tag : non_bounceable_tag;\n            if (testOnly) {\n                tag |= test_flag;\n            }\n            const addr = Buffer.alloc(34);\n            addr[0] = tag;\n            addr[1] = this.workChain;\n            addr.set(this.hash, 2);\n            const addressWithChecksum = Buffer.alloc(36);\n            addressWithChecksum.set(addr);\n            addressWithChecksum.set((0, crc16_1.crc16)(addr), 34);\n            return addressWithChecksum;\n        };\n        this.toFriendly = (args) => {\n            let urlSafe = (args && args.urlSafe !== undefined) ? args.urlSafe : true;\n            let buffer = this.toFriendlyBuffer(args);\n            if (urlSafe) {\n                return buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_');\n            }\n            else {\n                return buffer.toString('base64');\n            }\n        };\n        this[_a] = () => this.toFriendly();\n        this.workChain = workChain;\n        this.hash = hash;\n        Object.freeze(this);\n    }\n    static isFriendly(source) {\n        return source.indexOf(':') < 0;\n    }\n    static normalize(source) {\n        if (typeof source === 'string') {\n            return Address.parse(source).toFriendly();\n        }\n        else {\n            return source.toFriendly();\n        }\n    }\n    static parse(source) {\n        if (Address.isFriendly(source)) {\n            return this.parseFriendly(source).address;\n        }\n        else {\n            return this.parseRaw(source);\n        }\n    }\n    static parseRaw(source) {\n        let workChain = parseInt(source.split(\":\")[0]);\n        let hash = Buffer.from(source.split(\":\")[1], 'hex');\n        return new Address(workChain, hash);\n    }\n    static parseFriendly(source) {\n        if (Buffer.isBuffer(source)) {\n            let r = parseFriendlyAddress(source);\n            return {\n                isBounceable: r.isBounceable,\n                isTestOnly: r.isTestOnly,\n                address: new Address(r.workchain, r.hashPart)\n            };\n        }\n        else {\n            let addr = source.replace(/\\-/g, '+').replace(/_/g, '\\/'); // Convert from url-friendly to true base64\n            let r = parseFriendlyAddress(addr);\n            return {\n                isBounceable: r.isBounceable,\n                isTestOnly: r.isTestOnly,\n                address: new Address(r.workchain, r.hashPart)\n            };\n        }\n    }\n    equals(src) {\n        if (src.workChain !== this.workChain) {\n            return false;\n        }\n        return src.hash.equals(this.hash);\n    }\n}\nexports.Address = Address;\n_a = symbol_inspect_1.default;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACb,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACD,IAAIE,EAAE;AACNC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAMC,gBAAgB,GAAGT,eAAe,CAACU,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACnE,IAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAME,cAAc,GAAG,IAAI;AAC3B,IAAMC,kBAAkB,GAAG,IAAI;AAC/B,IAAMC,SAAS,GAAG,IAAI;AACtB,SAASC,oBAAoB,CAACC,GAAG,EAAE;EAC/B,IAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACH,GAAG,CAAC,GAAGA,GAAG,GAAGE,MAAM,CAACE,IAAI,CAACJ,GAAG,EAAE,QAAQ,CAAC;EACpE;EACA,IAAIC,IAAI,CAACI,MAAM,KAAK,EAAE,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EAC3E;EACA;EACA,IAAMC,IAAI,GAAGN,IAAI,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAC9B,IAAMC,GAAG,GAAGR,IAAI,CAACO,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;EAC9B,IAAME,SAAS,GAAG,CAAC,CAAC,EAAEf,OAAO,CAACgB,KAAK,EAAEJ,IAAI,CAAC;EAC1C,IAAI,EAAEG,SAAS,CAAC,CAAC,CAAC,KAAKD,GAAG,CAAC,CAAC,CAAC,IAAIC,SAAS,CAAC,CAAC,CAAC,KAAKD,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACvD,MAAM,IAAIH,KAAK,CAAC,oBAAoB,GAAGN,GAAG,CAAC;EAC/C;EACA;EACA,IAAIY,GAAG,GAAGL,IAAI,CAAC,CAAC,CAAC;EACjB,IAAIM,UAAU,GAAG,KAAK;EACtB,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIF,GAAG,GAAGd,SAAS,EAAE;IACjBe,UAAU,GAAG,IAAI;IACjBD,GAAG,GAAGA,GAAG,GAAGd,SAAS;EACzB;EACA,IAAKc,GAAG,KAAKhB,cAAc,IAAMgB,GAAG,KAAKf,kBAAmB,EACxD,MAAM,qBAAqB;EAC/BiB,YAAY,GAAGF,GAAG,KAAKhB,cAAc;EACrC,IAAImB,SAAS,GAAG,IAAI;EACpB,IAAIR,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IAAE;IACpBQ,SAAS,GAAG,CAAC,CAAC;EAClB,CAAC,MACI;IACDA,SAAS,GAAGR,IAAI,CAAC,CAAC,CAAC;EACvB;EACA,IAAMS,QAAQ,GAAGT,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAClC,OAAO;IAAEK,UAAU,EAAVA,UAAU;IAAEC,YAAY,EAAZA,YAAY;IAAEC,SAAS,EAATA,SAAS;IAAEC,QAAQ,EAARA;EAAS,CAAC;AAC5D;AAAC,IACKxB,OAAO;EACT,iBAAYyB,SAAS,EAAEC,IAAI,EAAE;IAAA;IAAA;IACzB,IAAI,CAACC,QAAQ,GAAG,YAAM;MAClB,OAAO,KAAI,CAACF,SAAS,GAAG,GAAG,GAAG,KAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC3D,CAAC;IACD,IAAI,CAACC,QAAQ,GAAG,YAAM;MAClB,IAAMC,mBAAmB,GAAGnB,MAAM,CAACoB,KAAK,CAAC,EAAE,CAAC;MAC5CD,mBAAmB,CAACE,GAAG,CAAC,KAAI,CAACL,IAAI,CAAC;MAClCG,mBAAmB,CAACE,GAAG,CAAC,CAAC,KAAI,CAACN,SAAS,EAAE,KAAI,CAACA,SAAS,EAAE,KAAI,CAACA,SAAS,EAAE,KAAI,CAACA,SAAS,CAAC,EAAE,EAAE,CAAC;MAC7F,OAAOI,mBAAmB;IAC9B,CAAC;IACD,IAAI,CAACG,gBAAgB,GAAG,UAACC,IAAI,EAAK;MAC9B,IAAIC,QAAQ,GAAID,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKC,SAAS,GAAIF,IAAI,CAACC,QAAQ,GAAG,KAAK;MAC5E,IAAIE,UAAU,GAAIH,IAAI,IAAIA,IAAI,CAACG,UAAU,KAAKD,SAAS,GAAIF,IAAI,CAACG,UAAU,GAAG,IAAI;MACjF,IAAIhB,GAAG,GAAGgB,UAAU,GAAGhC,cAAc,GAAGC,kBAAkB;MAC1D,IAAI6B,QAAQ,EAAE;QACVd,GAAG,IAAId,SAAS;MACpB;MACA,IAAMS,IAAI,GAAGL,MAAM,CAACoB,KAAK,CAAC,EAAE,CAAC;MAC7Bf,IAAI,CAAC,CAAC,CAAC,GAAGK,GAAG;MACbL,IAAI,CAAC,CAAC,CAAC,GAAG,KAAI,CAACU,SAAS;MACxBV,IAAI,CAACgB,GAAG,CAAC,KAAI,CAACL,IAAI,EAAE,CAAC,CAAC;MACtB,IAAMG,mBAAmB,GAAGnB,MAAM,CAACoB,KAAK,CAAC,EAAE,CAAC;MAC5CD,mBAAmB,CAACE,GAAG,CAAChB,IAAI,CAAC;MAC7Bc,mBAAmB,CAACE,GAAG,CAAC,CAAC,CAAC,EAAE5B,OAAO,CAACgB,KAAK,EAAEJ,IAAI,CAAC,EAAE,EAAE,CAAC;MACrD,OAAOc,mBAAmB;IAC9B,CAAC;IACD,IAAI,CAACQ,UAAU,GAAG,UAACJ,IAAI,EAAK;MACxB,IAAIK,OAAO,GAAIL,IAAI,IAAIA,IAAI,CAACK,OAAO,KAAKH,SAAS,GAAIF,IAAI,CAACK,OAAO,GAAG,IAAI;MACxE,IAAIC,MAAM,GAAG,KAAI,CAACP,gBAAgB,CAACC,IAAI,CAAC;MACxC,IAAIK,OAAO,EAAE;QACT,OAAOC,MAAM,CAACZ,QAAQ,CAAC,QAAQ,CAAC,CAACa,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;MAC5E,CAAC,MACI;QACD,OAAOD,MAAM,CAACZ,QAAQ,CAAC,QAAQ,CAAC;MACpC;IACJ,CAAC;IACD,IAAI,CAAChC,EAAE,CAAC,GAAG;MAAA,OAAM,KAAI,CAAC0C,UAAU,EAAE;IAAA;IAClC,IAAI,CAACZ,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB9B,MAAM,CAAC6C,MAAM,CAAC,IAAI,CAAC;EACvB;EAAC;IAAA;IAAA,OA4CD,gBAAOjC,GAAG,EAAE;MACR,IAAIA,GAAG,CAACiB,SAAS,KAAK,IAAI,CAACA,SAAS,EAAE;QAClC,OAAO,KAAK;MAChB;MACA,OAAOjB,GAAG,CAACkB,IAAI,CAACgB,MAAM,CAAC,IAAI,CAAChB,IAAI,CAAC;IACrC;EAAC;IAAA;IAAA,OAhDD,oBAAkBiB,MAAM,EAAE;MACtB,OAAOA,MAAM,CAACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;IAClC;EAAC;IAAA;IAAA,OACD,mBAAiBD,MAAM,EAAE;MACrB,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC5B,OAAO3C,OAAO,CAAC6C,KAAK,CAACF,MAAM,CAAC,CAACN,UAAU,EAAE;MAC7C,CAAC,MACI;QACD,OAAOM,MAAM,CAACN,UAAU,EAAE;MAC9B;IACJ;EAAC;IAAA;IAAA,OACD,eAAaM,MAAM,EAAE;MACjB,IAAI3C,OAAO,CAAC8C,UAAU,CAACH,MAAM,CAAC,EAAE;QAC5B,OAAO,IAAI,CAACI,aAAa,CAACJ,MAAM,CAAC,CAACK,OAAO;MAC7C,CAAC,MACI;QACD,OAAO,IAAI,CAACC,QAAQ,CAACN,MAAM,CAAC;MAChC;IACJ;EAAC;IAAA;IAAA,OACD,kBAAgBA,MAAM,EAAE;MACpB,IAAIlB,SAAS,GAAGyB,QAAQ,CAACP,MAAM,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9C,IAAIzB,IAAI,GAAGhB,MAAM,CAACE,IAAI,CAAC+B,MAAM,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;MACnD,OAAO,IAAInD,OAAO,CAACyB,SAAS,EAAEC,IAAI,CAAC;IACvC;EAAC;IAAA;IAAA,OACD,uBAAqBiB,MAAM,EAAE;MACzB,IAAIjC,MAAM,CAACC,QAAQ,CAACgC,MAAM,CAAC,EAAE;QACzB,IAAIS,CAAC,GAAG7C,oBAAoB,CAACoC,MAAM,CAAC;QACpC,OAAO;UACHrB,YAAY,EAAE8B,CAAC,CAAC9B,YAAY;UAC5BD,UAAU,EAAE+B,CAAC,CAAC/B,UAAU;UACxB2B,OAAO,EAAE,IAAIhD,OAAO,CAACoD,CAAC,CAAC7B,SAAS,EAAE6B,CAAC,CAAC5B,QAAQ;QAChD,CAAC;MACL,CAAC,MACI;QACD,IAAIT,IAAI,GAAG4B,MAAM,CAACH,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC3D,IAAIY,EAAC,GAAG7C,oBAAoB,CAACQ,IAAI,CAAC;QAClC,OAAO;UACHO,YAAY,EAAE8B,EAAC,CAAC9B,YAAY;UAC5BD,UAAU,EAAE+B,EAAC,CAAC/B,UAAU;UACxB2B,OAAO,EAAE,IAAIhD,OAAO,CAACoD,EAAC,CAAC7B,SAAS,EAAE6B,EAAC,CAAC5B,QAAQ;QAChD,CAAC;MACL;IACJ;EAAC;EAAA;AAAA;AAQL1B,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzBL,EAAE,GAAGM,gBAAgB,CAACoD,OAAO"},"metadata":{},"sourceType":"script"}