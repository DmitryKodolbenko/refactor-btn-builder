{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nvar _assert_js_1 = require(\"./_assert.js\");\nvar hmac_js_1 = require(\"./hmac.js\");\nvar utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n  _assert_js_1.default.hash(hash);\n  var opts = (0, utils_js_1.checkOpts)({\n    dkLen: 32,\n    asyncTick: 10\n  }, _opts);\n  var c = opts.c,\n    dkLen = opts.dkLen,\n    asyncTick = opts.asyncTick;\n  _assert_js_1.default.number(c);\n  _assert_js_1.default.number(dkLen);\n  _assert_js_1.default.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  var password = (0, utils_js_1.toBytes)(_password);\n  var salt = (0, utils_js_1.toBytes)(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  var DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  var PRF = hmac_js_1.hmac.create(hash, password);\n  var PRFSalt = PRF._cloneInto().update(salt);\n  return {\n    c: c,\n    dkLen: dkLen,\n    asyncTick: asyncTick,\n    DK: DK,\n    PRF: PRF,\n    PRFSalt: PRFSalt\n  };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n  var _pbkdf2Init = pbkdf2Init(hash, password, salt, opts),\n    c = _pbkdf2Init.c,\n    dkLen = _pbkdf2Init.dkLen,\n    DK = _pbkdf2Init.DK,\n    PRF = _pbkdf2Init.PRF,\n    PRFSalt = _pbkdf2Init.PRFSalt;\n  var prfW; // Working copy\n  var arr = new Uint8Array(4);\n  var view = (0, utils_js_1.createView)(arr);\n  var u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (var ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    var Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (var ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (var i = 0; i < Ti.length; i++) {\n        Ti[i] ^= u[i];\n      }\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nfunction pbkdf2Async(_x, _x2, _x3, _x4) {\n  return _pbkdf2Async.apply(this, arguments);\n}\nfunction _pbkdf2Async() {\n  _pbkdf2Async = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(hash, password, salt, opts) {\n    var _pbkdf2Init2, c, dkLen, asyncTick, DK, PRF, PRFSalt, prfW, arr, view, u, _loop, ti, pos;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _pbkdf2Init2 = pbkdf2Init(hash, password, salt, opts), c = _pbkdf2Init2.c, dkLen = _pbkdf2Init2.dkLen, asyncTick = _pbkdf2Init2.asyncTick, DK = _pbkdf2Init2.DK, PRF = _pbkdf2Init2.PRF, PRFSalt = _pbkdf2Init2.PRFSalt;\n            // Working copy\n            arr = new Uint8Array(4);\n            view = (0, utils_js_1.createView)(arr);\n            u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen\n            _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(ti, pos) {\n              var Ti;\n              return _regeneratorRuntime().wrap(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      // Ti = F(Password, Salt, c, i)\n                      Ti = DK.subarray(pos, pos + PRF.outputLen);\n                      view.setInt32(0, ti, false);\n                      // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n                      // U1 = PRF(Password, Salt + INT_32_BE(i))\n                      (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n                      Ti.set(u.subarray(0, Ti.length));\n                      _context.next = 6;\n                      return (0, utils_js_1.asyncLoop)(c - 1, asyncTick, function (i) {\n                        // Uc = PRF(Password, Uc−1)\n                        PRF._cloneInto(prfW).update(u).digestInto(u);\n                        for (var _i = 0; _i < Ti.length; _i++) {\n                          Ti[_i] ^= u[_i];\n                        }\n                      });\n                    case 6:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _loop);\n            });\n            ti = 1, pos = 0;\n          case 6:\n            if (!(pos < dkLen)) {\n              _context2.next = 11;\n              break;\n            }\n            return _context2.delegateYield(_loop(ti, pos), \"t0\", 8);\n          case 8:\n            ti++, pos += PRF.outputLen;\n            _context2.next = 6;\n            break;\n          case 11:\n            return _context2.abrupt(\"return\", pbkdf2Output(PRF, PRFSalt, DK, prfW, u));\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _pbkdf2Async.apply(this, arguments);\n}\nexports.pbkdf2Async = pbkdf2Async;","map":{"version":3,"names":["Object","defineProperty","exports","value","pbkdf2Async","pbkdf2","_assert_js_1","require","hmac_js_1","utils_js_1","pbkdf2Init","hash","_password","_salt","_opts","default","opts","checkOpts","dkLen","asyncTick","c","number","Error","password","toBytes","salt","DK","Uint8Array","PRF","hmac","create","PRFSalt","_cloneInto","update","pbkdf2Output","prfW","u","destroy","fill","arr","view","createView","outputLen","ti","pos","Ti","subarray","setInt32","digestInto","set","length","ui","i","asyncLoop"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/@noble/hashes/pbkdf2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}