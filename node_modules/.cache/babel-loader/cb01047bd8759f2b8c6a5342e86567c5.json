{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Version = exports.ConnectionPaths = exports.ClientPaths = exports.Counterparty = exports.IdentifiedConnection = exports.ConnectionEnd = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar commitment_1 = require(\"../../../../ibc/core/commitment/v1/commitment\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nvar State;\n(function (State) {\n  /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n  State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n  /** STATE_INIT - A connection end has just started the opening handshake. */\n  State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n  /**\n   * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n   * chain.\n   */\n  State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n  /** STATE_OPEN - A connection end has completed the handshake. */\n  State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n  State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State = exports.State || (exports.State = {}));\nfunction stateFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n      return State.STATE_UNINITIALIZED_UNSPECIFIED;\n    case 1:\n    case \"STATE_INIT\":\n      return State.STATE_INIT;\n    case 2:\n    case \"STATE_TRYOPEN\":\n      return State.STATE_TRYOPEN;\n    case 3:\n    case \"STATE_OPEN\":\n      return State.STATE_OPEN;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return State.UNRECOGNIZED;\n  }\n}\nexports.stateFromJSON = stateFromJSON;\nfunction stateToJSON(object) {\n  switch (object) {\n    case State.STATE_UNINITIALIZED_UNSPECIFIED:\n      return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    case State.STATE_INIT:\n      return \"STATE_INIT\";\n    case State.STATE_TRYOPEN:\n      return \"STATE_TRYOPEN\";\n    case State.STATE_OPEN:\n      return \"STATE_OPEN\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.stateToJSON = stateToJSON;\nvar baseConnectionEnd = {\n  clientId: \"\",\n  state: 0,\n  delayPeriod: long_1.default.UZERO\n};\nexports.ConnectionEnd = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    var _iterator = _createForOfIteratorHelper(message.versions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        exports.Version.encode(v, writer.uint32(18).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.state !== 0) {\n      writer.uint32(24).int32(message.state);\n    }\n    if (message.counterparty !== undefined) {\n      exports.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseConnectionEnd);\n    message.versions = [];\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.versions.push(exports.Version.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.state = reader.int32();\n          break;\n        case 4:\n          message.counterparty = exports.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var _a;\n    var message = Object.assign({}, baseConnectionEnd);\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.versions = ((_a = object.versions) !== null && _a !== void 0 ? _a : []).map(function (e) {\n      return exports.Version.fromJSON(e);\n    });\n    message.state = object.state !== undefined && object.state !== null ? stateFromJSON(object.state) : 0;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? exports.Counterparty.fromJSON(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromString(object.delayPeriod) : long_1.default.UZERO;\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    if (message.versions) {\n      obj.versions = message.versions.map(function (e) {\n        return e ? exports.Version.toJSON(e) : undefined;\n      });\n    } else {\n      obj.versions = [];\n    }\n    message.state !== undefined && (obj.state = stateToJSON(message.state));\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = Object.assign({}, baseConnectionEnd);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.versions = ((_b = object.versions) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return exports.Version.fromPartial(e);\n    })) || [];\n    message.state = (_c = object.state) !== null && _c !== void 0 ? _c : 0;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    return message;\n  }\n};\nvar baseIdentifiedConnection = {\n  id: \"\",\n  clientId: \"\",\n  state: 0,\n  delayPeriod: long_1.default.UZERO\n};\nexports.IdentifiedConnection = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    var _iterator2 = _createForOfIteratorHelper(message.versions),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var v = _step2.value;\n        exports.Version.encode(v, writer.uint32(26).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (message.state !== 0) {\n      writer.uint32(32).int32(message.state);\n    }\n    if (message.counterparty !== undefined) {\n      exports.Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(48).uint64(message.delayPeriod);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseIdentifiedConnection);\n    message.versions = [];\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.versions.push(exports.Version.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.state = reader.int32();\n          break;\n        case 5:\n          message.counterparty = exports.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.delayPeriod = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var _a;\n    var message = Object.assign({}, baseIdentifiedConnection);\n    message.id = object.id !== undefined && object.id !== null ? String(object.id) : \"\";\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.versions = ((_a = object.versions) !== null && _a !== void 0 ? _a : []).map(function (e) {\n      return exports.Version.fromJSON(e);\n    });\n    message.state = object.state !== undefined && object.state !== null ? stateFromJSON(object.state) : 0;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? exports.Counterparty.fromJSON(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromString(object.delayPeriod) : long_1.default.UZERO;\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    if (message.versions) {\n      obj.versions = message.versions.map(function (e) {\n        return e ? exports.Version.toJSON(e) : undefined;\n      });\n    } else {\n      obj.versions = [];\n    }\n    message.state !== undefined && (obj.state = stateToJSON(message.state));\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d;\n    var message = Object.assign({}, baseIdentifiedConnection);\n    message.id = (_a = object.id) !== null && _a !== void 0 ? _a : \"\";\n    message.clientId = (_b = object.clientId) !== null && _b !== void 0 ? _b : \"\";\n    message.versions = ((_c = object.versions) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return exports.Version.fromPartial(e);\n    })) || [];\n    message.state = (_d = object.state) !== null && _d !== void 0 ? _d : 0;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? exports.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    return message;\n  }\n};\nvar baseCounterparty = {\n  clientId: \"\",\n  connectionId: \"\"\n};\nexports.Counterparty = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.connectionId !== \"\") {\n      writer.uint32(18).string(message.connectionId);\n    }\n    if (message.prefix !== undefined) {\n      commitment_1.MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseCounterparty);\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.connectionId = reader.string();\n          break;\n        case 3:\n          message.prefix = commitment_1.MerklePrefix.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseCounterparty);\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.connectionId = object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n    message.prefix = object.prefix !== undefined && object.prefix !== null ? commitment_1.MerklePrefix.fromJSON(object.prefix) : undefined;\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.prefix !== undefined && (obj.prefix = message.prefix ? commitment_1.MerklePrefix.toJSON(message.prefix) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = Object.assign({}, baseCounterparty);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.connectionId = (_b = object.connectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.prefix = object.prefix !== undefined && object.prefix !== null ? commitment_1.MerklePrefix.fromPartial(object.prefix) : undefined;\n    return message;\n  }\n};\nvar baseClientPaths = {\n  paths: \"\"\n};\nexports.ClientPaths = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    var _iterator3 = _createForOfIteratorHelper(message.paths),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var v = _step3.value;\n        writer.uint32(10).string(v);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseClientPaths);\n    message.paths = [];\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.paths.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var _a;\n    var message = Object.assign({}, baseClientPaths);\n    message.paths = ((_a = object.paths) !== null && _a !== void 0 ? _a : []).map(function (e) {\n      return String(e);\n    });\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.paths) {\n      obj.paths = message.paths.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.paths = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a;\n    var message = Object.assign({}, baseClientPaths);\n    message.paths = ((_a = object.paths) === null || _a === void 0 ? void 0 : _a.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nvar baseConnectionPaths = {\n  clientId: \"\",\n  paths: \"\"\n};\nexports.ConnectionPaths = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    var _iterator4 = _createForOfIteratorHelper(message.paths),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        writer.uint32(18).string(v);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseConnectionPaths);\n    message.paths = [];\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.paths.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var _a;\n    var message = Object.assign({}, baseConnectionPaths);\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.paths = ((_a = object.paths) !== null && _a !== void 0 ? _a : []).map(function (e) {\n      return String(e);\n    });\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    if (message.paths) {\n      obj.paths = message.paths.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.paths = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = Object.assign({}, baseConnectionPaths);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.paths = ((_b = object.paths) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nvar baseVersion = {\n  identifier: \"\",\n  features: \"\"\n};\nexports.Version = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.identifier !== \"\") {\n      writer.uint32(10).string(message.identifier);\n    }\n    var _iterator5 = _createForOfIteratorHelper(message.features),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var v = _step5.value;\n        writer.uint32(18).string(v);\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseVersion);\n    message.features = [];\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifier = reader.string();\n          break;\n        case 2:\n          message.features.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var _a;\n    var message = Object.assign({}, baseVersion);\n    message.identifier = object.identifier !== undefined && object.identifier !== null ? String(object.identifier) : \"\";\n    message.features = ((_a = object.features) !== null && _a !== void 0 ? _a : []).map(function (e) {\n      return String(e);\n    });\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.identifier !== undefined && (obj.identifier = message.identifier);\n    if (message.features) {\n      obj.features = message.features.map(function (e) {\n        return e;\n      });\n    } else {\n      obj.features = [];\n    }\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = Object.assign({}, baseVersion);\n    message.identifier = (_a = object.identifier) !== null && _a !== void 0 ? _a : \"\";\n    message.features = ((_b = object.features) === null || _b === void 0 ? void 0 : _b.map(function (e) {\n      return e;\n    })) || [];\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../../src/ibc/core/connection/v1/connection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Version = exports.ConnectionPaths = exports.ClientPaths = exports.Counterparty = exports.IdentifiedConnection = exports.ConnectionEnd = exports.stateToJSON = exports.stateFromJSON = exports.State = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst commitment_1 = require(\"../../../../ibc/core/commitment/v1/commitment\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nvar State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State = exports.State || (exports.State = {}));\nfunction stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexports.stateFromJSON = stateFromJSON;\nfunction stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.stateToJSON = stateToJSON;\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: long_1.default.UZERO };\nexports.ConnectionEnd = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            exports.Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            exports.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (!message.delayPeriod.isZero()) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseConnectionEnd);\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(exports.Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = exports.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseConnectionEnd);\n        message.clientId =\n            object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n        message.versions = ((_a = object.versions) !== null && _a !== void 0 ? _a : []).map((e) => exports.Version.fromJSON(e));\n        message.state = object.state !== undefined && object.state !== null ? stateFromJSON(object.state) : 0;\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? exports.Counterparty.fromJSON(object.counterparty)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromString(object.delayPeriod)\n                : long_1.default.UZERO;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => (e ? exports.Version.toJSON(e) : undefined));\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseConnectionEnd);\n        message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n        message.versions = ((_b = object.versions) === null || _b === void 0 ? void 0 : _b.map((e) => exports.Version.fromPartial(e))) || [];\n        message.state = (_c = object.state) !== null && _c !== void 0 ? _c : 0;\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? exports.Counterparty.fromPartial(object.counterparty)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromValue(object.delayPeriod)\n                : long_1.default.UZERO;\n        return message;\n    },\n};\nconst baseIdentifiedConnection = { id: \"\", clientId: \"\", state: 0, delayPeriod: long_1.default.UZERO };\nexports.IdentifiedConnection = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            exports.Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            exports.Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (!message.delayPeriod.isZero()) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseIdentifiedConnection);\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(exports.Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = exports.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseIdentifiedConnection);\n        message.id = object.id !== undefined && object.id !== null ? String(object.id) : \"\";\n        message.clientId =\n            object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n        message.versions = ((_a = object.versions) !== null && _a !== void 0 ? _a : []).map((e) => exports.Version.fromJSON(e));\n        message.state = object.state !== undefined && object.state !== null ? stateFromJSON(object.state) : 0;\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? exports.Counterparty.fromJSON(object.counterparty)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromString(object.delayPeriod)\n                : long_1.default.UZERO;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => (e ? exports.Version.toJSON(e) : undefined));\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? exports.Counterparty.toJSON(message.counterparty) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = Object.assign({}, baseIdentifiedConnection);\n        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : \"\";\n        message.clientId = (_b = object.clientId) !== null && _b !== void 0 ? _b : \"\";\n        message.versions = ((_c = object.versions) === null || _c === void 0 ? void 0 : _c.map((e) => exports.Version.fromPartial(e))) || [];\n        message.state = (_d = object.state) !== null && _d !== void 0 ? _d : 0;\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? exports.Counterparty.fromPartial(object.counterparty)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromValue(object.delayPeriod)\n                : long_1.default.UZERO;\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexports.Counterparty = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            commitment_1.MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCounterparty);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = commitment_1.MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCounterparty);\n        message.clientId =\n            object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n        message.connectionId =\n            object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n        message.prefix =\n            object.prefix !== undefined && object.prefix !== null\n                ? commitment_1.MerklePrefix.fromJSON(object.prefix)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix ? commitment_1.MerklePrefix.toJSON(message.prefix) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseCounterparty);\n        message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n        message.connectionId = (_b = object.connectionId) !== null && _b !== void 0 ? _b : \"\";\n        message.prefix =\n            object.prefix !== undefined && object.prefix !== null\n                ? commitment_1.MerklePrefix.fromPartial(object.prefix)\n                : undefined;\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexports.ClientPaths = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseClientPaths);\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseClientPaths);\n        message.paths = ((_a = object.paths) !== null && _a !== void 0 ? _a : []).map((e) => String(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseClientPaths);\n        message.paths = ((_a = object.paths) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexports.ConnectionPaths = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseConnectionPaths);\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseConnectionPaths);\n        message.clientId =\n            object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n        message.paths = ((_a = object.paths) !== null && _a !== void 0 ? _a : []).map((e) => String(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseConnectionPaths);\n        message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n        message.paths = ((_b = object.paths) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexports.Version = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseVersion);\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseVersion);\n        message.identifier =\n            object.identifier !== undefined && object.identifier !== null ? String(object.identifier) : \"\";\n        message.features = ((_a = object.features) !== null && _a !== void 0 ? _a : []).map((e) => String(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseVersion);\n        message.identifier = (_a = object.identifier) !== null && _a !== void 0 ? _a : \"\";\n        message.features = ((_b = object.features) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];\n        return message;\n    },\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=connection.js.map"]},"metadata":{},"sourceType":"script"}