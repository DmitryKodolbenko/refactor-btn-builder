{"ast":null,"code":"const {\n  Cell\n} = require(\"../../boc\");\nconst {\n  Contract\n} = require(\"../index.js\");\nconst {\n  Address,\n  bytesToHex,\n  BN\n} = require(\"../../utils\");\nconst {\n  WalletContract\n} = require(\"./WalletContract\");\nclass WalletV4ContractR1 extends WalletContract {\n  /**\n   * @param provider    {HttpProvider}\n   * @param options {any}\n   */\n  constructor(provider, options) {\n    options.code = Cell.oneFromBocn    super(provider, options);\n    if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n    this.methods.getPublicKey = this.getPublicKey.bind(this);\n  }\n  getName() {\n    return 'v4R1';\n  }\n\n  /**\n   * @override\n   * @private\n   * @param   seqno?   {number}\n   * @param   withoutOp? {boolean}\n   * @return {Cell}\n   */\n  createSigningMessage(seqno, withoutOp) {\n    seqno = seqno || 0;\n    const message = new Cell();\n    message.bits.writeUint(this.options.walletId, 32);\n    if (seqno === 0) {\n      // message.bits.writeInt(-1, 32);// todo: dont work\n      for (let i = 0; i < 32; i++) {\n        message.bits.writeBit(1);\n      }\n    } else {\n      const date = new Date();\n      const timestamp = Math.floor(date.getTime() / 1e3);\n      message.bits.writeUint(timestamp + 60, 32);\n    }\n    message.bits.writeUint(seqno, 32);\n    if (!withoutOp) {\n      message.bits.writeUint(0, 8); // op\n    }\n\n    return message;\n  }\n\n  /**\n   * @override\n   * @return {Cell} cell contains wallet data\n   */\n  createDataCell() {\n    const cell = new Cell();\n    cell.bits.writeUint(0, 32);\n    cell.bits.writeUint(this.options.walletId, 32);\n    cell.bits.writeBytes(this.options.publicKey);\n    cell.bits.writeUint(0, 1); // plugins dict empty\n    return cell;\n  }\n\n  /**\n   * @return {Promise<BN>}\n   */\n  async getPublicKey() {\n    const myAddress = await this.getAddress();\n    return this.provider.call2(myAddress.toString(), 'get_public_key');\n  }\n}\nmodule.exports = {\n  WalletV4ContractR1\n};","map":{"version":3,"names":["Cell","require","Contract","Address","bytesToHex","BN","WalletContract","WalletV4ContractR1","constructor","provider","options","code","oneFromBoc","walletId","wc","methods","getPublicKey","bind","getName","createSigningMessage","seqno","withoutOp","message","bits","writeUint","i","writeBit","date","Date","timestamp","Math","floor","getTime","createDataCell","cell","writeBytes","publicKey","myAddress","getAddress","call2","toString","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/contract/wallet/WalletContractV4.js"],"sourcesContent":["const {Cell} = require(\"../../boc\");\nconst {Contract} = require(\"../index.js\");\nconst {Address, bytesToHex, BN} = require(\"../../utils\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV4ContractR1 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n    }\n\n    getName() {\n        return 'v4R1';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        if (!withoutOp) {\n            message.bits.writeUint(0, 8); // op\n        }\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32);\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        cell.bits.writeUint(0, 1); // plugins dict empty\n        return cell;\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n}\n\nmodule.exports = {WalletV4ContractR1};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}