{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Random = void 0;\nvar Random = /*#__PURE__*/function () {\n  function Random() {\n    _classCallCheck(this, Random);\n  }\n  _createClass(Random, null, [{\n    key: \"getBytes\",\n    value:\n    /**\n     * Returns `count` cryptographically secure random bytes\n     */\n    function getBytes(count) {\n      try {\n        var globalObject = typeof window === \"object\" ? window : self;\n        var cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n        var out = new Uint8Array(count);\n        cryptoApi.getRandomValues(out);\n        return out;\n      } catch (_a) {\n        try {\n          // eslint-disable-next-line @typescript-eslint/no-var-requires\n          var crypto = require(\"crypto\");\n          return new Uint8Array(_toConsumableArray(crypto.randomBytes(count)));\n        } catch (_b) {\n          throw new Error(\"No secure random number generator found\");\n        }\n      }\n    }\n  }]);\n  return Random;\n}();\nexports.Random = Random;","map":{"version":3,"sources":["../src/random.ts"],"names":[],"mappings":";;;;;;;;;IAGa,MAAM;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACjB;;AAEG;IACI,kBAAgB,KAAa,EAAA;MAClC,IAAI;QACF,IAAM,YAAY,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,IAAI;QAC/D,IAAM,SAAS,GACb,OAAO,YAAY,CAAC,MAAM,KAAK,WAAW,GAAG,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,QAAQ;QAE1F,IAAM,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC;QACjC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC;QAC9B,OAAO,GAAG;OACX,CAAC,OAAA,EAAA,EAAM;QACN,IAAI;UACF;UACA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;UAChC,OAAO,IAAI,UAAU,oBAAK,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;SACtD,CAAC,OAAA,EAAA,EAAM;UACN,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC;QAC3D;MACF;IACH;EAAC;EAAA;AAAA;AAtBH,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Random = void 0;\nclass Random {\n    /**\n     * Returns `count` cryptographically secure random bytes\n     */\n    static getBytes(count) {\n        try {\n            const globalObject = typeof window === \"object\" ? window : self;\n            const cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n            const out = new Uint8Array(count);\n            cryptoApi.getRandomValues(out);\n            return out;\n        }\n        catch (_a) {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const crypto = require(\"crypto\");\n                return new Uint8Array([...crypto.randomBytes(count)]);\n            }\n            catch (_b) {\n                throw new Error(\"No secure random number generator found\");\n            }\n        }\n    }\n}\nexports.Random = Random;\n//# sourceMappingURL=random.js.map"]},"metadata":{},"sourceType":"script"}