{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as Se from './Semigroup';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexport var isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nexport var isOutOfBound = function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n};\n/**\n * @internal\n */\nexport var prependW = function prependW(head) {\n  return function (tail) {\n    return __spreadArray([head], tail, true);\n  };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function appendW(end) {\n  return function (init) {\n    return __spreadArray(__spreadArray([], init, true), [end], false);\n  };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function unsafeInsertAt(i, a, as) {\n  if (isNonEmpty(as)) {\n    var xs = _.fromReadonlyNonEmptyArray(as);\n    xs.splice(i, 0, a);\n    return xs;\n  }\n  return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = _.fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n  }\n};\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function uniq(E) {\n  return function (as) {\n    if (as.length === 1) {\n      return as;\n    }\n    var out = [head(as)];\n    var rest = tail(as);\n    var _loop_1 = function _loop_1(a) {\n      if (out.every(function (o) {\n        return !E.equals(o, a);\n      })) {\n        out.push(a);\n      }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n      var a = rest_1[_i];\n      _loop_1(a);\n    }\n    return out;\n  };\n};\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function sortBy(ords) {\n  if (isNonEmpty(ords)) {\n    var M = getMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n  }\n  return identity;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function union(E) {\n  var uniqE = uniq(E);\n  return function (second) {\n    return function (first) {\n      return uniqE(pipe(first, concat(second)));\n    };\n  };\n};\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n      return as;\n    }\n    if (m < 0) {\n      var _a = splitAt(-m)(as),\n        f = _a[0],\n        s = _a[1];\n      return pipe(s, concat(f));\n    } else {\n      return rotate(m - len)(as);\n    }\n  };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var fromReadonlyArray = function fromReadonlyArray(as) {\n  return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function makeBy(f) {\n  return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n      out.push(f(i));\n    }\n    return out;\n  };\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function replicate(a) {\n  return makeBy(function () {\n    return a;\n  });\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function range(start, end) {\n  return start <= end ? makeBy(function (i) {\n    return start + i;\n  })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function unprepend(as) {\n  return [head(as), tail(as)];\n};\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function unappend(as) {\n  return [init(as), last(as)];\n};\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function fromArray(as) {\n  return fromReadonlyArray(as.slice());\n};\nexport function concatW(second) {\n  return function (first) {\n    return first.concat(second);\n  };\n}\nexport function concat(x, y) {\n  return y ? x.concat(y) : function (y) {\n    return y.concat(x);\n  };\n}\n/**\n * @since 2.5.0\n */\nexport var reverse = function reverse(as) {\n  return as.length === 1 ? as : __spreadArray([last(as)], as.slice(0, -1).reverse(), true);\n};\nexport function group(E) {\n  return function (as) {\n    var len = as.length;\n    if (len === 0) {\n      return empty;\n    }\n    var out = [];\n    var head = as[0];\n    var nea = [head];\n    for (var i = 1; i < len; i++) {\n      var a = as[i];\n      if (E.equals(a, head)) {\n        nea.push(a);\n      } else {\n        out.push(nea);\n        head = a;\n        nea = [head];\n      }\n    }\n    out.push(nea);\n    return out;\n  };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.5.0\n */\nexport var groupBy = function groupBy(f) {\n  return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n      if (_.has.call(out, k)) {\n        out[k].push(a);\n      } else {\n        out[k] = [a];\n      }\n    }\n    return out;\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var sort = function sort(O) {\n  return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var updateAt = function updateAt(i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * @since 2.5.0\n */\nexport var modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * @since 2.5.1\n */\nexport var zipWith = function zipWith(as, bs, f) {\n  var cs = [f(as[0], bs[0])];\n  var len = Math.min(as.length, bs.length);\n  for (var i = 1; i < len; i++) {\n    cs[i] = f(as[i], bs[i]);\n  }\n  return cs;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function unzip(abs) {\n  var fa = [abs[0][0]];\n  var fb = [abs[0][1]];\n  for (var i = 1; i < abs.length; i++) {\n    fa[i] = abs[i][0];\n    fb[i] = abs[i][1];\n  }\n  return [fa, fb];\n};\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function prependAll(middle) {\n  return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n      out.push(middle, as[i]);\n    }\n    return out;\n  };\n};\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function intersperse(middle) {\n  return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : as;\n  };\n};\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, head(as)));\n    for (var i = 1; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n  };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chop = function chop(f) {\n  return function (as) {\n    var _a = f(as),\n      b = _a[0],\n      rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (isNonEmpty(next)) {\n      var _b = f(next),\n        b_1 = _b[0],\n        rest_2 = _b[1];\n      out.push(b_1);\n      next = rest_2;\n    }\n    return out;\n  };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function splitAt(n) {\n  return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, empty] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n  };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chunksOf = function chunksOf(n) {\n  return chop(splitAt(n));\n};\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n/* istanbul ignore next */\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\nvar _ap = function _ap(fab, fa) {\n  return pipe(fab, ap(fa));\n};\nvar _chain = function _chain(ma, f) {\n  return pipe(ma, chain(f));\n};\n/* istanbul ignore next */\nvar _extend = function _extend(wa, f) {\n  return pipe(wa, extend(f));\n};\n/* istanbul ignore next */\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\nvar _alt = function _alt(fa, that) {\n  return pipe(fa, alt(that));\n};\n/* istanbul ignore next */\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as RNEA.ReadonlyNonEmptyArray<number>,\n *     RNEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function altW(that) {\n  return function (as) {\n    return pipe(as, concatW(that()));\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyNonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function ap(as) {\n  return chain(function (f) {\n    return pipe(as, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function chain(f) {\n  return chainWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @since 2.5.0\n */\nexport var extend = function extend(f) {\n  return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n    while (isNonEmpty(next)) {\n      out.push(f(next));\n      next = tail(next);\n    }\n    return out;\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function map(f) {\n  return mapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function mapWithIndex(f) {\n  return function (as) {\n    var out = [f(0, head(as))];\n    for (var i = 1; i < as.length; i++) {\n      out.push(f(i, as[i]));\n    }\n    return out;\n  };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function reduce(b, f) {\n  return reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function foldMap(S) {\n  return function (f) {\n    return function (as) {\n      return as.slice(1).reduce(function (s, a) {\n        return S.concat(s, f(a));\n      }, f(as[0]));\n    };\n  };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function reduceRight(b, f) {\n  return reduceRightWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (as) {\n    return as.reduce(function (b, a, i) {\n      return f(i, b, a);\n    }, b);\n  };\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function foldMapWithIndex(S) {\n  return function (f) {\n    return function (as) {\n      return as.slice(1).reduce(function (s, a, i) {\n        return S.concat(s, f(i + 1, a));\n      }, f(0, as[0]));\n    };\n  };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (as) {\n    return as.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function traverse(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function sequence(F) {\n  return traverseWithIndex(F)(SK);\n};\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return function (as) {\n      var out = F.map(f(0, head(as)), of);\n      for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) {\n          return function (b) {\n            return pipe(bs, append(b));\n          };\n        }), f(i, as[i]));\n      }\n      return out;\n    };\n  };\n};\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexport var extract = _.head;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\".concat(as.map(S.show).join(', '), \"]\");\n    }\n  };\n};\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: concat\n  };\n};\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function getEq(E) {\n  return fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n  URI: URI,\n  map: _map,\n  extend: _extend,\n  extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\nvar let_ = /*#__PURE__*/let__(Functor);\nexport {\n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexport var head = extract;\n/**\n * @since 2.5.0\n */\nexport var tail = _.tail;\n/**\n * @since 2.5.0\n */\nexport var last = function last(as) {\n  return as[as.length - 1];\n};\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport var init = function init(as) {\n  return as.slice(0, -1);\n};\n/**\n * @since 2.5.0\n */\nexport var min = function min(O) {\n  var S = Se.min(O);\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var max = function max(O) {\n  var S = Se.max(O);\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * @since 2.10.0\n */\nexport var concatAll = function concatAll(S) {\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function matchLeft(f) {\n  return function (as) {\n    return f(head(as), tail(as));\n  };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function matchRight(f) {\n  return function (as) {\n    return f(init(as), last(as));\n  };\n};\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function modifyHead(f) {\n  return function (as) {\n    return __spreadArray([f(head(as))], tail(as), true);\n  };\n};\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function updateHead(a) {\n  return modifyHead(function () {\n    return a;\n  });\n};\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function modifyLast(f) {\n  return function (as) {\n    return pipe(init(as), append(f(last(as))));\n  };\n};\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function updateLast(a) {\n  return modifyLast(function () {\n    return a;\n  });\n};\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function intercalate(S) {\n  var concatAllS = concatAll(S);\n  return function (middle) {\n    return flow(intersperse(middle), concatAllS);\n  };\n};\nexport function groupSort(O) {\n  var sortO = sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return isNonEmpty(as) ? groupO(sortO(as)) : empty;\n  };\n}\nexport function filter(predicate) {\n  return filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var filterWithIndex = function filterWithIndex(predicate) {\n  return function (as) {\n    return fromReadonlyArray(as.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n  return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = function snoc(init, end) {\n  return pipe(init, concat([end]));\n};\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RNEA.Functor` instead of `RNEA.readonlyNonEmptyArray`\n * (where `RNEA` is from `import RNEA from 'fp-ts/ReadonlyNonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyNonEmptyArray = {\n  URI: URI,\n  of: of,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  ap: _ap,\n  chain: _chain,\n  extend: _extend,\n  extract: extract,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  alt: _alt\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","apFirst","apFirst_","apS","apS_","apSecond","apSecond_","bind","bind_","chainFirst","chainFirst_","fromEquals","flow","identity","pipe","SK","let","let__","bindTo","bindTo_","flap","flap_","_","getMonoid","Se","empty","emptyReadonlyArray","isNonEmpty","isOutOfBound","as","prependW","head","tail","prepend","appendW","end","init","append","unsafeInsertAt","a","xs","fromReadonlyNonEmptyArray","splice","unsafeUpdateAt","uniq","E","out","rest","_loop_1","every","o","equals","push","_i","rest_1","sortBy","ords","M","sort","reduce","union","uniqE","second","first","rotate","n","len","m","Math","round","abs","_a","splitAt","f","s","fromReadonlyArray","some","none","makeBy","j","max","floor","replicate","range","start","unprepend","unappend","last","fromArray","concatW","x","y","reverse","group","nea","groupBy","as_1","k","has","O","compare","updateAt","modifyAt","zipWith","bs","cs","min","zip","undefined","b","unzip","fa","fb","prependAll","middle","intersperse","chainWithIndex","apply","chop","next","_b","b_1","rest_2","chunksOf","_map","map","_mapWithIndex","mapWithIndex","_ap","fab","ap","_chain","ma","chain","_extend","wa","extend","_reduce","_foldMap","foldMapM","foldMap","_reduceRight","reduceRight","_traverse","F","traverseF","traverse","ta","_alt","that","alt","_reduceWithIndex","reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","foldMapWithIndex","_reduceRightWithIndex","reduceRightWithIndex","_traverseWithIndex","traverseWithIndexF","traverseWithIndex","of","singleton","altW","duplicate","flatten","S","sequence","extract","URI","getShow","show","join","getSemigroup","getEq","ys","getUnionSemigroup","unionE","Functor","Pointed","FunctorWithIndex","Apply","Applicative","Chain","Monad","Foldable","FoldableWithIndex","Traversable","TraversableWithIndex","Alt","Comonad","Do","emptyRecord","let_","concatAll","matchLeft","matchRight","modifyHead","updateHead","modifyLast","updateLast","intercalate","concatAllS","groupSort","sortO","groupO","filter","predicate","filterWithIndex","uncons","unsnoc","cons","snoc","insertAt","prependToAll","fold","readonlyNonEmptyArray"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/fp-ts/es6/ReadonlyNonEmptyArray.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as Se from './Semigroup';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexport var isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return as;\n        }\n        var out = [head(as)];\n        var rest = tail(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return identity;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if (isOutOfBound(Math.abs(m), as) || m === 0) {\n            return as;\n        }\n        if (m < 0) {\n            var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n            return pipe(s, concat(f));\n        }\n        else {\n            return rotate(m - len)(as);\n        }\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var fromReadonlyArray = function (as) {\n    return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return fromReadonlyArray(as.slice()); };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.5.0\n */\nexport var reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([last(as)], as.slice(0, -1).reverse(), true);\n};\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.5.0\n */\nexport var groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length === 1 ? as : as.slice().sort(O.compare);\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    return function (as) {\n        var rest = tail(as);\n        return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : as;\n    };\n};\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = _.fromReadonlyNonEmptyArray(f(0, head(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while (isNonEmpty(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [as, empty] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n    };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as RNEA.ReadonlyNonEmptyArray<number>,\n *     RNEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (as) {\n        return pipe(as, concatW(that()));\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyNonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (as) { return chain(function (f) { return pipe(as, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) { return chainWithIndex(function (_, a) { return f(a); }); };\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) {\n    return function (as) {\n        var next = tail(as);\n        var out = [f(as)];\n        while (isNonEmpty(next)) {\n            out.push(f(next));\n            next = tail(next);\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/ extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, head(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n    };\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0]));\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n    };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(SK); };\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, head(as)), of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexport var extract = _.head;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = /*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexport var head = extract;\n/**\n * @since 2.5.0\n */\nexport var tail = _.tail;\n/**\n * @since 2.5.0\n */\nexport var last = function (as) { return as[as.length - 1]; };\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.5.0\n */\nexport var min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.5.0\n */\nexport var max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function (f) {\n    return function (as) {\n        return f(head(as), tail(as));\n    };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function (f) {\n    return function (as) {\n        return f(init(as), last(as));\n    };\n};\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f(head(as))], tail(as), true);\n    };\n};\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) {\n    return function (as) {\n        return pipe(init(as), append(f(last(as))));\n    };\n};\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (S) {\n    var concatAllS = concatAll(S);\n    return function (middle) { return flow(intersperse(middle), concatAllS); };\n};\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : empty); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) {\n    return function (as) {\n        return fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, concat([end])); };\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RNEA.Functor` instead of `RNEA.readonlyNonEmptyArray`\n * (where `RNEA` is from `import RNEA from 'fp-ts/ReadonlyNonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,IAAI,CAACG,MAAM,EAAEG,EAAE,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IACjF,IAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIJ,IAAI,CAAC,EAAE;MACpB,IAAI,CAACM,EAAE,EAAEA,EAAE,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,EAAE,CAAC,EAAEI,CAAC,CAAC;MACpDE,EAAE,CAACF,CAAC,CAAC,GAAGJ,IAAI,CAACI,CAAC,CAAC;IACnB;EACJ;EACA,OAAOL,EAAE,CAACY,MAAM,CAACL,EAAE,IAAIC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,SAASY,OAAO,IAAIC,QAAQ,EAAEC,GAAG,IAAIC,IAAI,EAAEC,QAAQ,IAAIC,SAAS,QAAQ,SAAS;AACjF,SAASC,IAAI,IAAIC,KAAK,EAAEC,UAAU,IAAIC,WAAW,QAAQ,SAAS;AAClE,SAASC,UAAU,QAAQ,MAAM;AACjC,SAASC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,EAAE,QAAQ,YAAY;AACrD,SAASC,GAAG,IAAIC,KAAK,EAAEC,MAAM,IAAIC,OAAO,EAAEC,IAAI,IAAIC,KAAK,QAAQ,WAAW;AAC1E,OAAO,KAAKC,CAAC,MAAM,YAAY;AAC/B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,EAAE,MAAM,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAGH,CAAC,CAACI,kBAAkB;AACvC;AACA;AACA;AACA,OAAO,IAAIC,UAAU,GAAGL,CAAC,CAACK,UAAU;AACpC;AACA;AACA;AACA,OAAO,IAAIC,YAAY,GAAG,SAAfA,YAAY,CAAanC,CAAC,EAAEoC,EAAE,EAAE;EAAE,OAAOpC,CAAC,GAAG,CAAC,IAAIA,CAAC,IAAIoC,EAAE,CAACrC,MAAM;AAAE,CAAC;AAC9E;AACA;AACA;AACA,OAAO,IAAIsC,QAAQ,GAAG,SAAXA,QAAQ,CAAaC,IAAI,EAAE;EAClC,OAAO,UAAUC,IAAI,EAAE;IACnB,OAAO7C,aAAa,CAAC,CAAC4C,IAAI,CAAC,EAAEC,IAAI,EAAE,IAAI,CAAC;EAC5C,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGH,QAAQ;AAC7B;AACA;AACA;AACA,OAAO,IAAII,OAAO,GAAG,SAAVA,OAAO,CAAaC,GAAG,EAAE;EAChC,OAAO,UAAUC,IAAI,EAAE;IACnB,OAAOjD,aAAa,CAACA,aAAa,CAAC,EAAE,EAAEiD,IAAI,EAAE,IAAI,CAAC,EAAE,CAACD,GAAG,CAAC,EAAE,KAAK,CAAC;EACrE,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIE,MAAM,GAAGH,OAAO;AAC3B;AACA;AACA;AACA,OAAO,IAAII,cAAc,GAAG,SAAjBA,cAAc,CAAa7C,CAAC,EAAE8C,CAAC,EAAEV,EAAE,EAAE;EAC5C,IAAIF,UAAU,CAACE,EAAE,CAAC,EAAE;IAChB,IAAIW,EAAE,GAAGlB,CAAC,CAACmB,yBAAyB,CAACZ,EAAE,CAAC;IACxCW,EAAE,CAACE,MAAM,CAACjD,CAAC,EAAE,CAAC,EAAE8C,CAAC,CAAC;IAClB,OAAOC,EAAE;EACb;EACA,OAAO,CAACD,CAAC,CAAC;AACd,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAII,cAAc,GAAG,SAAjBA,cAAc,CAAalD,CAAC,EAAE8C,CAAC,EAAEV,EAAE,EAAE;EAC5C,IAAIA,EAAE,CAACpC,CAAC,CAAC,KAAK8C,CAAC,EAAE;IACb,OAAOV,EAAE;EACb,CAAC,MACI;IACD,IAAIW,EAAE,GAAGlB,CAAC,CAACmB,yBAAyB,CAACZ,EAAE,CAAC;IACxCW,EAAE,CAAC/C,CAAC,CAAC,GAAG8C,CAAC;IACT,OAAOC,EAAE;EACb;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,IAAI,GAAG,SAAPA,IAAI,CAAaC,CAAC,EAAE;EAC3B,OAAO,UAAUhB,EAAE,EAAE;IACjB,IAAIA,EAAE,CAACrC,MAAM,KAAK,CAAC,EAAE;MACjB,OAAOqC,EAAE;IACb;IACA,IAAIiB,GAAG,GAAG,CAACf,IAAI,CAACF,EAAE,CAAC,CAAC;IACpB,IAAIkB,IAAI,GAAGf,IAAI,CAACH,EAAE,CAAC;IACnB,IAAImB,OAAO,GAAG,SAAVA,OAAO,CAAaT,CAAC,EAAE;MACvB,IAAIO,GAAG,CAACG,KAAK,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAO,CAACL,CAAC,CAACM,MAAM,CAACD,CAAC,EAAEX,CAAC,CAAC;MAAE,CAAC,CAAC,EAAE;QACrDO,GAAG,CAACM,IAAI,CAACb,CAAC,CAAC;MACf;IACJ,CAAC;IACD,KAAK,IAAIc,EAAE,GAAG,CAAC,EAAEC,MAAM,GAAGP,IAAI,EAAEM,EAAE,GAAGC,MAAM,CAAC9D,MAAM,EAAE6D,EAAE,EAAE,EAAE;MACtD,IAAId,CAAC,GAAGe,MAAM,CAACD,EAAE,CAAC;MAClBL,OAAO,CAACT,CAAC,CAAC;IACd;IACA,OAAOO,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIS,MAAM,GAAG,SAATA,MAAM,CAAaC,IAAI,EAAE;EAChC,IAAI7B,UAAU,CAAC6B,IAAI,CAAC,EAAE;IAClB,IAAIC,CAAC,GAAGlC,SAAS,EAAE;IACnB,OAAOmC,IAAI,CAACF,IAAI,CAACG,MAAM,CAACF,CAAC,CAACzD,MAAM,EAAEyD,CAAC,CAAChC,KAAK,CAAC,CAAC;EAC/C;EACA,OAAOZ,QAAQ;AACnB,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAI+C,KAAK,GAAG,SAARA,KAAK,CAAaf,CAAC,EAAE;EAC5B,IAAIgB,KAAK,GAAGjB,IAAI,CAACC,CAAC,CAAC;EACnB,OAAO,UAAUiB,MAAM,EAAE;IAAE,OAAO,UAAUC,KAAK,EAAE;MAAE,OAAOF,KAAK,CAAC/C,IAAI,CAACiD,KAAK,EAAE/D,MAAM,CAAC8D,MAAM,CAAC,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC;AACxG,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,MAAM,GAAG,SAATA,MAAM,CAAaC,CAAC,EAAE;EAC7B,OAAO,UAAUpC,EAAE,EAAE;IACjB,IAAIqC,GAAG,GAAGrC,EAAE,CAACrC,MAAM;IACnB,IAAI2E,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,GAAGC,GAAG;IAC3B,IAAItC,YAAY,CAACwC,IAAI,CAACE,GAAG,CAACH,CAAC,CAAC,EAAEtC,EAAE,CAAC,IAAIsC,CAAC,KAAK,CAAC,EAAE;MAC1C,OAAOtC,EAAE;IACb;IACA,IAAIsC,CAAC,GAAG,CAAC,EAAE;MACP,IAAII,EAAE,GAAGC,OAAO,CAAC,CAACL,CAAC,CAAC,CAACtC,EAAE,CAAC;QAAE4C,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;QAAEG,CAAC,GAAGH,EAAE,CAAC,CAAC,CAAC;MAC9C,OAAOzD,IAAI,CAAC4D,CAAC,EAAE1E,MAAM,CAACyE,CAAC,CAAC,CAAC;IAC7B,CAAC,MACI;MACD,OAAOT,MAAM,CAACG,CAAC,GAAGD,GAAG,CAAC,CAACrC,EAAE,CAAC;IAC9B;EACJ,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI8C,iBAAiB,GAAG,SAApBA,iBAAiB,CAAa9C,EAAE,EAAE;EACzC,OAAOF,UAAU,CAACE,EAAE,CAAC,GAAGP,CAAC,CAACsD,IAAI,CAAC/C,EAAE,CAAC,GAAGP,CAAC,CAACuD,IAAI;AAC/C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,MAAM,GAAG,SAATA,MAAM,CAAaL,CAAC,EAAE;EAC7B,OAAO,UAAUR,CAAC,EAAE;IAChB,IAAIc,CAAC,GAAGX,IAAI,CAACY,GAAG,CAAC,CAAC,EAAEZ,IAAI,CAACa,KAAK,CAAChB,CAAC,CAAC,CAAC;IAClC,IAAInB,GAAG,GAAG,CAAC2B,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,KAAK,IAAIhF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,CAAC,EAAEtF,CAAC,EAAE,EAAE;MACxBqD,GAAG,CAACM,IAAI,CAACqB,CAAC,CAAChF,CAAC,CAAC,CAAC;IAClB;IACA,OAAOqD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIoC,SAAS,GAAG,SAAZA,SAAS,CAAa3C,CAAC,EAAE;EAAE,OAAOuC,MAAM,CAAC,YAAY;IAAE,OAAOvC,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI4C,KAAK,GAAG,SAARA,KAAK,CAAaC,KAAK,EAAEjD,GAAG,EAAE;EACrC,OAAOiD,KAAK,IAAIjD,GAAG,GAAG2C,MAAM,CAAC,UAAUrF,CAAC,EAAE;IAAE,OAAO2F,KAAK,GAAG3F,CAAC;EAAE,CAAC,CAAC,CAAC0C,GAAG,GAAGiD,KAAK,GAAG,CAAC,CAAC,GAAG,CAACA,KAAK,CAAC;AAC/F,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,SAAS,GAAG,SAAZA,SAAS,CAAaxD,EAAE,EAAE;EAAE,OAAO,CAACE,IAAI,CAACF,EAAE,CAAC,EAAEG,IAAI,CAACH,EAAE,CAAC,CAAC;AAAE,CAAC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIyD,QAAQ,GAAG,SAAXA,QAAQ,CAAazD,EAAE,EAAE;EAAE,OAAO,CAACO,IAAI,CAACP,EAAE,CAAC,EAAE0D,IAAI,CAAC1D,EAAE,CAAC,CAAC;AAAE,CAAC;AACpE;AACA;AACA;AACA;AACA,OAAO,IAAI2D,SAAS,GAAG,SAAZA,SAAS,CAAa3D,EAAE,EAAE;EAAE,OAAO8C,iBAAiB,CAAC9C,EAAE,CAAC/B,KAAK,EAAE,CAAC;AAAE,CAAC;AAC9E,OAAO,SAAS2F,OAAO,CAAC3B,MAAM,EAAE;EAC5B,OAAO,UAAUC,KAAK,EAAE;IAAE,OAAOA,KAAK,CAAC/D,MAAM,CAAC8D,MAAM,CAAC;EAAE,CAAC;AAC5D;AACA,OAAO,SAAS9D,MAAM,CAAC0F,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOA,CAAC,GAAGD,CAAC,CAAC1F,MAAM,CAAC2F,CAAC,CAAC,GAAG,UAAUA,CAAC,EAAE;IAAE,OAAOA,CAAC,CAAC3F,MAAM,CAAC0F,CAAC,CAAC;EAAE,CAAC;AACjE;AACA;AACA;AACA;AACA,OAAO,IAAIE,OAAO,GAAG,SAAVA,OAAO,CAAa/D,EAAE,EAAE;EAC/B,OAAOA,EAAE,CAACrC,MAAM,KAAK,CAAC,GAAGqC,EAAE,GAAG1C,aAAa,CAAC,CAACoG,IAAI,CAAC1D,EAAE,CAAC,CAAC,EAAEA,EAAE,CAAC/B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC8F,OAAO,EAAE,EAAE,IAAI,CAAC;AAC5F,CAAC;AACD,OAAO,SAASC,KAAK,CAAChD,CAAC,EAAE;EACrB,OAAO,UAAUhB,EAAE,EAAE;IACjB,IAAIqC,GAAG,GAAGrC,EAAE,CAACrC,MAAM;IACnB,IAAI0E,GAAG,KAAK,CAAC,EAAE;MACX,OAAOzC,KAAK;IAChB;IACA,IAAIqB,GAAG,GAAG,EAAE;IACZ,IAAIf,IAAI,GAAGF,EAAE,CAAC,CAAC,CAAC;IAChB,IAAIiE,GAAG,GAAG,CAAC/D,IAAI,CAAC;IAChB,KAAK,IAAItC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyE,GAAG,EAAEzE,CAAC,EAAE,EAAE;MAC1B,IAAI8C,CAAC,GAAGV,EAAE,CAACpC,CAAC,CAAC;MACb,IAAIoD,CAAC,CAACM,MAAM,CAACZ,CAAC,EAAER,IAAI,CAAC,EAAE;QACnB+D,GAAG,CAAC1C,IAAI,CAACb,CAAC,CAAC;MACf,CAAC,MACI;QACDO,GAAG,CAACM,IAAI,CAAC0C,GAAG,CAAC;QACb/D,IAAI,GAAGQ,CAAC;QACRuD,GAAG,GAAG,CAAC/D,IAAI,CAAC;MAChB;IACJ;IACAe,GAAG,CAACM,IAAI,CAAC0C,GAAG,CAAC;IACb,OAAOhD,GAAG;EACd,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIiD,OAAO,GAAG,SAAVA,OAAO,CAAatB,CAAC,EAAE;EAC9B,OAAO,UAAU5C,EAAE,EAAE;IACjB,IAAIiB,GAAG,GAAG,CAAC,CAAC;IACZ,KAAK,IAAIO,EAAE,GAAG,CAAC,EAAE2C,IAAI,GAAGnE,EAAE,EAAEwB,EAAE,GAAG2C,IAAI,CAACxG,MAAM,EAAE6D,EAAE,EAAE,EAAE;MAChD,IAAId,CAAC,GAAGyD,IAAI,CAAC3C,EAAE,CAAC;MAChB,IAAI4C,CAAC,GAAGxB,CAAC,CAAClC,CAAC,CAAC;MACZ,IAAIjB,CAAC,CAAC4E,GAAG,CAACnG,IAAI,CAAC+C,GAAG,EAAEmD,CAAC,CAAC,EAAE;QACpBnD,GAAG,CAACmD,CAAC,CAAC,CAAC7C,IAAI,CAACb,CAAC,CAAC;MAClB,CAAC,MACI;QACDO,GAAG,CAACmD,CAAC,CAAC,GAAG,CAAC1D,CAAC,CAAC;MAChB;IACJ;IACA,OAAOO,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIY,IAAI,GAAG,SAAPA,IAAI,CAAayC,CAAC,EAAE;EAC3B,OAAO,UAAUtE,EAAE,EAAE;IACjB,OAAOA,EAAE,CAACrC,MAAM,KAAK,CAAC,GAAGqC,EAAE,GAAGA,EAAE,CAAC/B,KAAK,EAAE,CAAC4D,IAAI,CAACyC,CAAC,CAACC,OAAO,CAAC;EAC5D,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAG,SAAXA,QAAQ,CAAa5G,CAAC,EAAE8C,CAAC,EAAE;EAClC,OAAO+D,QAAQ,CAAC7G,CAAC,EAAE,YAAY;IAAE,OAAO8C,CAAC;EAAE,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAI+D,QAAQ,GAAG,SAAXA,QAAQ,CAAa7G,CAAC,EAAEgF,CAAC,EAAE;EAClC,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAOD,YAAY,CAACnC,CAAC,EAAEoC,EAAE,CAAC,GAAGP,CAAC,CAACuD,IAAI,GAAGvD,CAAC,CAACsD,IAAI,CAACjC,cAAc,CAAClD,CAAC,EAAEgF,CAAC,CAAC5C,EAAE,CAACpC,CAAC,CAAC,CAAC,EAAEoC,EAAE,CAAC,CAAC;EACjF,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAI0E,OAAO,GAAG,SAAVA,OAAO,CAAa1E,EAAE,EAAE2E,EAAE,EAAE/B,CAAC,EAAE;EACtC,IAAIgC,EAAE,GAAG,CAAChC,CAAC,CAAC5C,EAAE,CAAC,CAAC,CAAC,EAAE2E,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,IAAItC,GAAG,GAAGE,IAAI,CAACsC,GAAG,CAAC7E,EAAE,CAACrC,MAAM,EAAEgH,EAAE,CAAChH,MAAM,CAAC;EACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyE,GAAG,EAAEzE,CAAC,EAAE,EAAE;IAC1BgH,EAAE,CAAChH,CAAC,CAAC,GAAGgF,CAAC,CAAC5C,EAAE,CAACpC,CAAC,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,CAAC,CAAC;EAC3B;EACA,OAAOgH,EAAE;AACb,CAAC;AACD,OAAO,SAASE,GAAG,CAAC9E,EAAE,EAAE2E,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKI,SAAS,EAAE;IAClB,OAAO,UAAUJ,EAAE,EAAE;MAAE,OAAOG,GAAG,CAACH,EAAE,EAAE3E,EAAE,CAAC;IAAE,CAAC;EAChD;EACA,OAAO0E,OAAO,CAAC1E,EAAE,EAAE2E,EAAE,EAAE,UAAUjE,CAAC,EAAEsE,CAAC,EAAE;IAAE,OAAO,CAACtE,CAAC,EAAEsE,CAAC,CAAC;EAAE,CAAC,CAAC;AAC9D;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAG,SAARA,KAAK,CAAaxC,GAAG,EAAE;EAC9B,IAAIyC,EAAE,GAAG,CAACzC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,IAAI0C,EAAE,GAAG,CAAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,KAAK,IAAI7E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6E,GAAG,CAAC9E,MAAM,EAAEC,CAAC,EAAE,EAAE;IACjCsH,EAAE,CAACtH,CAAC,CAAC,GAAG6E,GAAG,CAAC7E,CAAC,CAAC,CAAC,CAAC,CAAC;IACjBuH,EAAE,CAACvH,CAAC,CAAC,GAAG6E,GAAG,CAAC7E,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB;EACA,OAAO,CAACsH,EAAE,EAAEC,EAAE,CAAC;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,UAAU,GAAG,SAAbA,UAAU,CAAaC,MAAM,EAAE;EACtC,OAAO,UAAUrF,EAAE,EAAE;IACjB,IAAIiB,GAAG,GAAG,CAACoE,MAAM,EAAErF,EAAE,CAAC,CAAC,CAAC,CAAC;IACzB,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,EAAE,CAACrC,MAAM,EAAEC,CAAC,EAAE,EAAE;MAChCqD,GAAG,CAACM,IAAI,CAAC8D,MAAM,EAAErF,EAAE,CAACpC,CAAC,CAAC,CAAC;IAC3B;IACA,OAAOqD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIqE,WAAW,GAAG,SAAdA,WAAW,CAAaD,MAAM,EAAE;EACvC,OAAO,UAAUrF,EAAE,EAAE;IACjB,IAAIkB,IAAI,GAAGf,IAAI,CAACH,EAAE,CAAC;IACnB,OAAOF,UAAU,CAACoB,IAAI,CAAC,GAAGjC,IAAI,CAACiC,IAAI,EAAEkE,UAAU,CAACC,MAAM,CAAC,EAAEjF,OAAO,CAACF,IAAI,CAACF,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE;EACpF,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIuF,cAAc,GAAG,SAAjBA,cAAc,CAAa3C,CAAC,EAAE;EACrC,OAAO,UAAU5C,EAAE,EAAE;IACjB,IAAIiB,GAAG,GAAGxB,CAAC,CAACmB,yBAAyB,CAACgC,CAAC,CAAC,CAAC,EAAE1C,IAAI,CAACF,EAAE,CAAC,CAAC,CAAC;IACrD,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,EAAE,CAACrC,MAAM,EAAEC,CAAC,EAAE,EAAE;MAChCqD,GAAG,CAACM,IAAI,CAACiE,KAAK,CAACvE,GAAG,EAAE2B,CAAC,CAAChF,CAAC,EAAEoC,EAAE,CAACpC,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,OAAOqD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIwE,IAAI,GAAG,SAAPA,IAAI,CAAa7C,CAAC,EAAE;EAC3B,OAAO,UAAU5C,EAAE,EAAE;IACjB,IAAI0C,EAAE,GAAGE,CAAC,CAAC5C,EAAE,CAAC;MAAEgF,CAAC,GAAGtC,EAAE,CAAC,CAAC,CAAC;MAAExB,IAAI,GAAGwB,EAAE,CAAC,CAAC,CAAC;IACvC,IAAIzB,GAAG,GAAG,CAAC+D,CAAC,CAAC;IACb,IAAIU,IAAI,GAAGxE,IAAI;IACf,OAAOpB,UAAU,CAAC4F,IAAI,CAAC,EAAE;MACrB,IAAIC,EAAE,GAAG/C,CAAC,CAAC8C,IAAI,CAAC;QAAEE,GAAG,GAAGD,EAAE,CAAC,CAAC,CAAC;QAAEE,MAAM,GAAGF,EAAE,CAAC,CAAC,CAAC;MAC7C1E,GAAG,CAACM,IAAI,CAACqE,GAAG,CAAC;MACbF,IAAI,GAAGG,MAAM;IACjB;IACA,OAAO5E,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI0B,OAAO,GAAG,SAAVA,OAAO,CAAaP,CAAC,EAAE;EAC9B,OAAO,UAAUpC,EAAE,EAAE;IACjB,IAAIsC,CAAC,GAAGC,IAAI,CAACY,GAAG,CAAC,CAAC,EAAEf,CAAC,CAAC;IACtB,OAAOE,CAAC,IAAItC,EAAE,CAACrC,MAAM,GAAG,CAACqC,EAAE,EAAEJ,KAAK,CAAC,GAAG,CAACX,IAAI,CAACe,EAAE,CAAC/B,KAAK,CAAC,CAAC,EAAEqE,CAAC,CAAC,EAAElC,OAAO,CAACF,IAAI,CAACF,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC/B,KAAK,CAACqE,CAAC,CAAC,CAAC;EAChG,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIwD,QAAQ,GAAG,SAAXA,QAAQ,CAAa1D,CAAC,EAAE;EAAE,OAAOqD,IAAI,CAAC9C,OAAO,CAACP,CAAC,CAAC,CAAC;AAAE,CAAC;AAC/D,IAAI2D,IAAI,GAAG,SAAPA,IAAI,CAAab,EAAE,EAAEtC,CAAC,EAAE;EAAE,OAAO3D,IAAI,CAACiG,EAAE,EAAEc,GAAG,CAACpD,CAAC,CAAC,CAAC;AAAE,CAAC;AACxD;AACA,IAAIqD,aAAa,GAAG,SAAhBA,aAAa,CAAaf,EAAE,EAAEtC,CAAC,EAAE;EAAE,OAAO3D,IAAI,CAACiG,EAAE,EAAEgB,YAAY,CAACtD,CAAC,CAAC,CAAC;AAAE,CAAC;AAC1E,IAAIuD,GAAG,GAAG,SAANA,GAAG,CAAaC,GAAG,EAAElB,EAAE,EAAE;EAAE,OAAOjG,IAAI,CAACmH,GAAG,EAAEC,EAAE,CAACnB,EAAE,CAAC,CAAC;AAAE,CAAC;AAC1D,IAAIoB,MAAM,GAAG,SAATA,MAAM,CAAaC,EAAE,EAAE3D,CAAC,EAAE;EAAE,OAAO3D,IAAI,CAACsH,EAAE,EAAEC,KAAK,CAAC5D,CAAC,CAAC,CAAC;AAAE,CAAC;AAC5D;AACA,IAAI6D,OAAO,GAAG,SAAVA,OAAO,CAAaC,EAAE,EAAE9D,CAAC,EAAE;EAAE,OAAO3D,IAAI,CAACyH,EAAE,EAAEC,MAAM,CAAC/D,CAAC,CAAC,CAAC;AAAE,CAAC;AAC9D;AACA,IAAIgE,OAAO,GAAG,SAAVA,OAAO,CAAa1B,EAAE,EAAEF,CAAC,EAAEpC,CAAC,EAAE;EAAE,OAAO3D,IAAI,CAACiG,EAAE,EAAEpD,MAAM,CAACkD,CAAC,EAAEpC,CAAC,CAAC,CAAC;AAAE,CAAC;AACpE;AACA,IAAIiE,QAAQ,GAAG,SAAXA,QAAQ,CAAajF,CAAC,EAAE;EACxB,IAAIkF,QAAQ,GAAGC,OAAO,CAACnF,CAAC,CAAC;EACzB,OAAO,UAAUsD,EAAE,EAAEtC,CAAC,EAAE;IAAE,OAAO3D,IAAI,CAACiG,EAAE,EAAE4B,QAAQ,CAAClE,CAAC,CAAC,CAAC;EAAE,CAAC;AAC7D,CAAC;AACD;AACA,IAAIoE,YAAY,GAAG,SAAfA,YAAY,CAAa9B,EAAE,EAAEF,CAAC,EAAEpC,CAAC,EAAE;EAAE,OAAO3D,IAAI,CAACiG,EAAE,EAAE+B,WAAW,CAACjC,CAAC,EAAEpC,CAAC,CAAC,CAAC;AAAE,CAAC;AAC9E;AACA,IAAIsE,SAAS,GAAG,SAAZA,SAAS,CAAaC,CAAC,EAAE;EACzB,IAAIC,SAAS,GAAGC,QAAQ,CAACF,CAAC,CAAC;EAC3B,OAAO,UAAUG,EAAE,EAAE1E,CAAC,EAAE;IAAE,OAAO3D,IAAI,CAACqI,EAAE,EAAEF,SAAS,CAACxE,CAAC,CAAC,CAAC;EAAE,CAAC;AAC9D,CAAC;AACD;AACA,IAAI2E,IAAI,GAAG,SAAPA,IAAI,CAAarC,EAAE,EAAEsC,IAAI,EAAE;EAAE,OAAOvI,IAAI,CAACiG,EAAE,EAAEuC,GAAG,CAACD,IAAI,CAAC,CAAC;AAAE,CAAC;AAC9D;AACA,IAAIE,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAaxC,EAAE,EAAEF,CAAC,EAAEpC,CAAC,EAAE;EACvC,OAAO3D,IAAI,CAACiG,EAAE,EAAEyC,eAAe,CAAC3C,CAAC,EAAEpC,CAAC,CAAC,CAAC;AAC1C,CAAC;AACD;AACA,IAAIgF,iBAAiB,GAAG,SAApBA,iBAAiB,CAAahG,CAAC,EAAE;EACjC,IAAIiG,iBAAiB,GAAGC,gBAAgB,CAAClG,CAAC,CAAC;EAC3C,OAAO,UAAUsD,EAAE,EAAEtC,CAAC,EAAE;IAAE,OAAO3D,IAAI,CAACiG,EAAE,EAAE2C,iBAAiB,CAACjF,CAAC,CAAC,CAAC;EAAE,CAAC;AACtE,CAAC;AACD;AACA,IAAImF,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAa7C,EAAE,EAAEF,CAAC,EAAEpC,CAAC,EAAE;EAC5C,OAAO3D,IAAI,CAACiG,EAAE,EAAE8C,oBAAoB,CAAChD,CAAC,EAAEpC,CAAC,CAAC,CAAC;AAC/C,CAAC;AACD;AACA,IAAIqF,kBAAkB,GAAG,SAArBA,kBAAkB,CAAad,CAAC,EAAE;EAClC,IAAIe,kBAAkB,GAAGC,iBAAiB,CAAChB,CAAC,CAAC;EAC7C,OAAO,UAAUG,EAAE,EAAE1E,CAAC,EAAE;IAAE,OAAO3D,IAAI,CAACqI,EAAE,EAAEY,kBAAkB,CAACtF,CAAC,CAAC,CAAC;EAAE,CAAC;AACvE,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIwF,EAAE,GAAG3I,CAAC,CAAC4I,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,IAAI,GAAG,SAAPA,IAAI,CAAad,IAAI,EAAE;EAC9B,OAAO,UAAUxH,EAAE,EAAE;IACjB,OAAOf,IAAI,CAACe,EAAE,EAAE4D,OAAO,CAAC4D,IAAI,EAAE,CAAC,CAAC;EACpC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,GAAG,GAAGa,IAAI;AACrB;AACA;AACA;AACA,OAAO,IAAIjC,EAAE,GAAG,SAALA,EAAE,CAAarG,EAAE,EAAE;EAAE,OAAOwG,KAAK,CAAC,UAAU5D,CAAC,EAAE;IAAE,OAAO3D,IAAI,CAACe,EAAE,EAAEgG,GAAG,CAACpD,CAAC,CAAC,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI4D,KAAK,GAAG,SAARA,KAAK,CAAa5D,CAAC,EAAE;EAAE,OAAO2C,cAAc,CAAC,UAAU9F,CAAC,EAAEiB,CAAC,EAAE;IAAE,OAAOkC,CAAC,CAAClC,CAAC,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AAC5F;AACA;AACA;AACA,OAAO,IAAIiG,MAAM,GAAG,SAATA,MAAM,CAAa/D,CAAC,EAAE;EAC7B,OAAO,UAAU5C,EAAE,EAAE;IACjB,IAAI0F,IAAI,GAAGvF,IAAI,CAACH,EAAE,CAAC;IACnB,IAAIiB,GAAG,GAAG,CAAC2B,CAAC,CAAC5C,EAAE,CAAC,CAAC;IACjB,OAAOF,UAAU,CAAC4F,IAAI,CAAC,EAAE;MACrBzE,GAAG,CAACM,IAAI,CAACqB,CAAC,CAAC8C,IAAI,CAAC,CAAC;MACjBA,IAAI,GAAGvF,IAAI,CAACuF,IAAI,CAAC;IACrB;IACA,OAAOzE,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIsH,SAAS,GACpB,aAAc5B,MAAM,CAAC3H,QAAQ,CAAC;AAC9B;AACA;AACA;AACA;AACA,OAAO,IAAIwJ,OAAO,GAClB,aAAchC,KAAK,CAACxH,QAAQ,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIgH,GAAG,GAAG,SAANA,GAAG,CAAapD,CAAC,EAAE;EAC1B,OAAOsD,YAAY,CAAC,UAAUzG,CAAC,EAAEiB,CAAC,EAAE;IAAE,OAAOkC,CAAC,CAAClC,CAAC,CAAC;EAAE,CAAC,CAAC;AACzD,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIwF,YAAY,GAAG,SAAfA,YAAY,CAAatD,CAAC,EAAE;EACnC,OAAO,UAAU5C,EAAE,EAAE;IACjB,IAAIiB,GAAG,GAAG,CAAC2B,CAAC,CAAC,CAAC,EAAE1C,IAAI,CAACF,EAAE,CAAC,CAAC,CAAC;IAC1B,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,EAAE,CAACrC,MAAM,EAAEC,CAAC,EAAE,EAAE;MAChCqD,GAAG,CAACM,IAAI,CAACqB,CAAC,CAAChF,CAAC,EAAEoC,EAAE,CAACpC,CAAC,CAAC,CAAC,CAAC;IACzB;IACA,OAAOqD,GAAG;EACd,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIa,MAAM,GAAG,SAATA,MAAM,CAAakD,CAAC,EAAEpC,CAAC,EAAE;EAChC,OAAO+E,eAAe,CAAC3C,CAAC,EAAE,UAAUvF,CAAC,EAAEuF,CAAC,EAAEtE,CAAC,EAAE;IAAE,OAAOkC,CAAC,CAACoC,CAAC,EAAEtE,CAAC,CAAC;EAAE,CAAC,CAAC;AACrE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIqG,OAAO,GAAG,SAAVA,OAAO,CAAa0B,CAAC,EAAE;EAC9B,OAAO,UAAU7F,CAAC,EAAE;IAChB,OAAO,UAAU5C,EAAE,EAAE;MACjB,OAAOA,EAAE,CAAC/B,KAAK,CAAC,CAAC,CAAC,CAAC6D,MAAM,CAAC,UAAUe,CAAC,EAAEnC,CAAC,EAAE;QAAE,OAAO+H,CAAC,CAACtK,MAAM,CAAC0E,CAAC,EAAED,CAAC,CAAClC,CAAC,CAAC,CAAC;MAAE,CAAC,EAAEkC,CAAC,CAAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;EACL,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIiH,WAAW,GAAG,SAAdA,WAAW,CAAajC,CAAC,EAAEpC,CAAC,EAAE;EACrC,OAAOoF,oBAAoB,CAAChD,CAAC,EAAE,UAAUvF,CAAC,EAAEuF,CAAC,EAAEtE,CAAC,EAAE;IAAE,OAAOkC,CAAC,CAACoC,CAAC,EAAEtE,CAAC,CAAC;EAAE,CAAC,CAAC;AAC1E,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIiH,eAAe,GAAG,SAAlBA,eAAe,CAAa3C,CAAC,EAAEpC,CAAC,EAAE;EACzC,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAOA,EAAE,CAAC8B,MAAM,CAAC,UAAUkD,CAAC,EAAEtE,CAAC,EAAE9C,CAAC,EAAE;MAAE,OAAOgF,CAAC,CAAChF,CAAC,EAAEoH,CAAC,EAAEtE,CAAC,CAAC;IAAE,CAAC,EAAEsE,CAAC,CAAC;EAClE,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI8C,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAaW,CAAC,EAAE;EACvC,OAAO,UAAU7F,CAAC,EAAE;IAChB,OAAO,UAAU5C,EAAE,EAAE;MACjB,OAAOA,EAAE,CAAC/B,KAAK,CAAC,CAAC,CAAC,CAAC6D,MAAM,CAAC,UAAUe,CAAC,EAAEnC,CAAC,EAAE9C,CAAC,EAAE;QAAE,OAAO6K,CAAC,CAACtK,MAAM,CAAC0E,CAAC,EAAED,CAAC,CAAChF,CAAC,GAAG,CAAC,EAAE8C,CAAC,CAAC,CAAC;MAAE,CAAC,EAAEkC,CAAC,CAAC,CAAC,EAAE5C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnG,CAAC;EACL,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIgI,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAahD,CAAC,EAAEpC,CAAC,EAAE;EAC9C,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAOA,EAAE,CAACiH,WAAW,CAAC,UAAUjC,CAAC,EAAEtE,CAAC,EAAE9C,CAAC,EAAE;MAAE,OAAOgF,CAAC,CAAChF,CAAC,EAAE8C,CAAC,EAAEsE,CAAC,CAAC;IAAE,CAAC,EAAEA,CAAC,CAAC;EACvE,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIqC,QAAQ,GAAG,SAAXA,QAAQ,CAAaF,CAAC,EAAE;EAC/B,IAAIe,kBAAkB,GAAGC,iBAAiB,CAAChB,CAAC,CAAC;EAC7C,OAAO,UAAUvE,CAAC,EAAE;IAAE,OAAOsF,kBAAkB,CAAC,UAAUzI,CAAC,EAAEiB,CAAC,EAAE;MAAE,OAAOkC,CAAC,CAAClC,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AACxF,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIgI,QAAQ,GAAG,SAAXA,QAAQ,CAAavB,CAAC,EAAE;EAAE,OAAOgB,iBAAiB,CAAChB,CAAC,CAAC,CAACjI,EAAE,CAAC;AAAE,CAAC;AACvE;AACA;AACA;AACA;AACA,OAAO,IAAIiJ,iBAAiB,GAAG,SAApBA,iBAAiB,CAAahB,CAAC,EAAE;EACxC,OAAO,UAAUvE,CAAC,EAAE;IAChB,OAAO,UAAU5C,EAAE,EAAE;MACjB,IAAIiB,GAAG,GAAGkG,CAAC,CAACnB,GAAG,CAACpD,CAAC,CAAC,CAAC,EAAE1C,IAAI,CAACF,EAAE,CAAC,CAAC,EAAEoI,EAAE,CAAC;MACnC,KAAK,IAAIxK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,EAAE,CAACrC,MAAM,EAAEC,CAAC,EAAE,EAAE;QAChCqD,GAAG,GAAGkG,CAAC,CAACd,EAAE,CAACc,CAAC,CAACnB,GAAG,CAAC/E,GAAG,EAAE,UAAU0D,EAAE,EAAE;UAAE,OAAO,UAAUK,CAAC,EAAE;YAAE,OAAO/F,IAAI,CAAC0F,EAAE,EAAEnE,MAAM,CAACwE,CAAC,CAAC,CAAC;UAAE,CAAC;QAAE,CAAC,CAAC,EAAEpC,CAAC,CAAChF,CAAC,EAAEoC,EAAE,CAACpC,CAAC,CAAC,CAAC,CAAC;MAC/G;MACA,OAAOqD,GAAG;IACd,CAAC;EACL,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI0H,OAAO,GAAGlJ,CAAC,CAACS,IAAI;AAC3B;AACA;AACA;AACA;AACA,OAAO,IAAI0I,GAAG,GAAG,uBAAuB;AACxC;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAG,SAAVA,OAAO,CAAaJ,CAAC,EAAE;EAAE,OAAQ;IACxCK,IAAI,EAAE,cAAU9I,EAAE,EAAE;MAAE,OAAO,GAAG,CAAC7B,MAAM,CAAC6B,EAAE,CAACgG,GAAG,CAACyC,CAAC,CAACK,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;IAAE;EAC7E,CAAC;AAAG,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,YAAY,GAAG,SAAfA,YAAY,GAAe;EAAE,OAAQ;IAC5C7K,MAAM,EAAEA;EACZ,CAAC;AAAG,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI8K,KAAK,GAAG,SAARA,KAAK,CAAajI,CAAC,EAAE;EAC5B,OAAOlC,UAAU,CAAC,UAAU6B,EAAE,EAAEuI,EAAE,EAAE;IAAE,OAAOvI,EAAE,CAAChD,MAAM,KAAKuL,EAAE,CAACvL,MAAM,IAAIgD,EAAE,CAACS,KAAK,CAAC,UAAUyC,CAAC,EAAEjG,CAAC,EAAE;MAAE,OAAOoD,CAAC,CAACM,MAAM,CAACuC,CAAC,EAAEqF,EAAE,CAACtL,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,CAAC;AACxI,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIuL,iBAAiB,GAAG,SAApBA,iBAAiB,CAAanI,CAAC,EAAE;EACxC,IAAIoI,MAAM,GAAGrH,KAAK,CAACf,CAAC,CAAC;EACrB,OAAO;IACH7C,MAAM,EAAE,gBAAU+D,KAAK,EAAED,MAAM,EAAE;MAAE,OAAOmH,MAAM,CAACnH,MAAM,CAAC,CAACC,KAAK,CAAC;IAAE;EACrE,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAImH,OAAO,GAAG;EACjBT,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED;AACT,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIxG,IAAI,GAAG,aAAcC,KAAK,CAAC6J,OAAO,CAAC;AAC9C;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAG;EACjBV,GAAG,EAAEA,GAAG;EACRR,EAAE,EAAEA;AACR,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAImB,gBAAgB,GAAG;EAC1BX,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTG,YAAY,EAAED;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIuD,KAAK,GAAG;EACfZ,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF;AACR,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI/H,OAAO,GAAG,aAAcC,QAAQ,CAACmL,KAAK,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIhL,QAAQ,GAAG,aAAcC,SAAS,CAAC+K,KAAK,CAAC;AACpD;AACA;AACA;AACA;AACA,OAAO,IAAIC,WAAW,GAAG;EACrBb,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF,GAAG;EACPiC,EAAE,EAAEA;AACR,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIsB,KAAK,GAAG;EACfd,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF,GAAG;EACPK,KAAK,EAAEF;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI1H,UAAU,GAAG,aAAcC,WAAW,CAAC6K,KAAK,CAAC;AACxD;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAG;EACff,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTM,EAAE,EAAEF,GAAG;EACPiC,EAAE,EAAEA,EAAE;EACN5B,KAAK,EAAEF;AACX,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIsD,QAAQ,GAAG;EAClBhB,GAAG,EAAEA,GAAG;EACR9G,MAAM,EAAE8E,OAAO;EACfG,OAAO,EAAEF,QAAQ;EACjBI,WAAW,EAAED;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI6C,iBAAiB,GAAG;EAC3BjB,GAAG,EAAEA,GAAG;EACR9G,MAAM,EAAE8E,OAAO;EACfG,OAAO,EAAEF,QAAQ;EACjBI,WAAW,EAAED,YAAY;EACzBW,eAAe,EAAED,gBAAgB;EACjCI,gBAAgB,EAAEF,iBAAiB;EACnCI,oBAAoB,EAAED;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI+B,WAAW,GAAG;EACrBlB,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTjE,MAAM,EAAE8E,OAAO;EACfG,OAAO,EAAEF,QAAQ;EACjBI,WAAW,EAAED,YAAY;EACzBK,QAAQ,EAAEH,SAAS;EACnBwB,QAAQ,EAAEA;AACd,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIqB,oBAAoB,GAAG;EAC9BnB,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTG,YAAY,EAAED,aAAa;EAC3BnE,MAAM,EAAE8E,OAAO;EACfG,OAAO,EAAEF,QAAQ;EACjBI,WAAW,EAAED,YAAY;EACzBK,QAAQ,EAAEH,SAAS;EACnBwB,QAAQ,EAAEA,QAAQ;EAClBf,eAAe,EAAED,gBAAgB;EACjCI,gBAAgB,EAAEF,iBAAiB;EACnCI,oBAAoB,EAAED,qBAAqB;EAC3CI,iBAAiB,EAAEF;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI+B,GAAG,GAAG;EACbpB,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACT0B,GAAG,EAAEF;AACT,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAI0C,OAAO,GAAG;EACjBrB,GAAG,EAAEA,GAAG;EACR5C,GAAG,EAAED,IAAI;EACTY,MAAM,EAAEF,OAAO;EACfkC,OAAO,EAAEA;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIuB,EAAE,GAAG,aAAc9B,EAAE,CAAC3I,CAAC,CAAC0K,WAAW,CAAC;AAC/C;AACA;AACA;AACA;AACA,OAAO,IAAI9K,MAAM,GAAG,aAAcC,OAAO,CAAC+J,OAAO,CAAC;AAClD,IAAIe,IAAI,GAAG,aAAchL,KAAK,CAACiK,OAAO,CAAC;AACvC;AACA;AACA;AACA;AACA;AACAe,IAAI,IAAIjL,GAAG;AACX;AACA;AACA;AACA;AACA,OAAO,IAAIT,IAAI,GAAG,aAAcC,KAAK,CAAC+K,KAAK,CAAC;AAC5C;AACA;AACA;AACA;AACA,OAAO,IAAIpL,GAAG,GAAG,aAAcC,IAAI,CAACiL,KAAK,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAItJ,IAAI,GAAGyI,OAAO;AACzB;AACA;AACA;AACA,OAAO,IAAIxI,IAAI,GAAGV,CAAC,CAACU,IAAI;AACxB;AACA;AACA;AACA,OAAO,IAAIuD,IAAI,GAAG,SAAPA,IAAI,CAAa1D,EAAE,EAAE;EAAE,OAAOA,EAAE,CAACA,EAAE,CAACrC,MAAM,GAAG,CAAC,CAAC;AAAE,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI4C,IAAI,GAAG,SAAPA,IAAI,CAAaP,EAAE,EAAE;EAAE,OAAOA,EAAE,CAAC/B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAAE,CAAC;AAC3D;AACA;AACA;AACA,OAAO,IAAI4G,GAAG,GAAG,SAANA,GAAG,CAAaP,CAAC,EAAE;EAC1B,IAAImE,CAAC,GAAG9I,EAAE,CAACkF,GAAG,CAACP,CAAC,CAAC;EACjB,OAAO,UAAUtE,EAAE,EAAE;IAAE,OAAOA,EAAE,CAAC8B,MAAM,CAAC2G,CAAC,CAACtK,MAAM,CAAC;EAAE,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIgF,GAAG,GAAG,SAANA,GAAG,CAAamB,CAAC,EAAE;EAC1B,IAAImE,CAAC,GAAG9I,EAAE,CAACwD,GAAG,CAACmB,CAAC,CAAC;EACjB,OAAO,UAAUtE,EAAE,EAAE;IAAE,OAAOA,EAAE,CAAC8B,MAAM,CAAC2G,CAAC,CAACtK,MAAM,CAAC;EAAE,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIkM,SAAS,GAAG,SAAZA,SAAS,CAAa5B,CAAC,EAAE;EAChC,OAAO,UAAUzI,EAAE,EAAE;IACjB,OAAOA,EAAE,CAAC8B,MAAM,CAAC2G,CAAC,CAACtK,MAAM,CAAC;EAC9B,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAImM,SAAS,GAAG,SAAZA,SAAS,CAAa1H,CAAC,EAAE;EAChC,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAO4C,CAAC,CAAC1C,IAAI,CAACF,EAAE,CAAC,EAAEG,IAAI,CAACH,EAAE,CAAC,CAAC;EAChC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIuK,UAAU,GAAG,SAAbA,UAAU,CAAa3H,CAAC,EAAE;EACjC,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAO4C,CAAC,CAACrC,IAAI,CAACP,EAAE,CAAC,EAAE0D,IAAI,CAAC1D,EAAE,CAAC,CAAC;EAChC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIwK,UAAU,GAAG,SAAbA,UAAU,CAAa5H,CAAC,EAAE;EACjC,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAO1C,aAAa,CAAC,CAACsF,CAAC,CAAC1C,IAAI,CAACF,EAAE,CAAC,CAAC,CAAC,EAAEG,IAAI,CAACH,EAAE,CAAC,EAAE,IAAI,CAAC;EACvD,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIyK,UAAU,GAAG,SAAbA,UAAU,CAAa/J,CAAC,EAAE;EAAE,OAAO8J,UAAU,CAAC,YAAY;IAAE,OAAO9J,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIgK,UAAU,GAAG,SAAbA,UAAU,CAAa9H,CAAC,EAAE;EACjC,OAAO,UAAU5C,EAAE,EAAE;IACjB,OAAOf,IAAI,CAACsB,IAAI,CAACP,EAAE,CAAC,EAAEQ,MAAM,CAACoC,CAAC,CAACc,IAAI,CAAC1D,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI2K,UAAU,GAAG,SAAbA,UAAU,CAAajK,CAAC,EAAE;EAAE,OAAOgK,UAAU,CAAC,YAAY;IAAE,OAAOhK,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIkK,WAAW,GAAG,SAAdA,WAAW,CAAanC,CAAC,EAAE;EAClC,IAAIoC,UAAU,GAAGR,SAAS,CAAC5B,CAAC,CAAC;EAC7B,OAAO,UAAUpD,MAAM,EAAE;IAAE,OAAOtG,IAAI,CAACuG,WAAW,CAACD,MAAM,CAAC,EAAEwF,UAAU,CAAC;EAAE,CAAC;AAC9E,CAAC;AACD,OAAO,SAASC,SAAS,CAACxG,CAAC,EAAE;EACzB,IAAIyG,KAAK,GAAGlJ,IAAI,CAACyC,CAAC,CAAC;EACnB,IAAI0G,MAAM,GAAGhH,KAAK,CAACM,CAAC,CAAC;EACrB,OAAO,UAAUtE,EAAE,EAAE;IAAE,OAAQF,UAAU,CAACE,EAAE,CAAC,GAAGgL,MAAM,CAACD,KAAK,CAAC/K,EAAE,CAAC,CAAC,GAAGJ,KAAK;EAAG,CAAC;AACjF;AACA,OAAO,SAASqL,MAAM,CAACC,SAAS,EAAE;EAC9B,OAAOC,eAAe,CAAC,UAAU1L,CAAC,EAAEiB,CAAC,EAAE;IAAE,OAAOwK,SAAS,CAACxK,CAAC,CAAC;EAAE,CAAC,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIyK,eAAe,GAAG,SAAlBA,eAAe,CAAaD,SAAS,EAAE;EAC9C,OAAO,UAAUlL,EAAE,EAAE;IACjB,OAAO8C,iBAAiB,CAAC9C,EAAE,CAACiL,MAAM,CAAC,UAAUvK,CAAC,EAAE9C,CAAC,EAAE;MAAE,OAAOsN,SAAS,CAACtN,CAAC,EAAE8C,CAAC,CAAC;IAAE,CAAC,CAAC,CAAC;EACpF,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI0K,MAAM,GAAG5H,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI6H,MAAM,GAAG5H,QAAQ;AAC5B,OAAO,SAAS6H,IAAI,CAACpL,IAAI,EAAEC,IAAI,EAAE;EAC7B,OAAOA,IAAI,KAAK4E,SAAS,GAAG3E,OAAO,CAACF,IAAI,CAAC,GAAGjB,IAAI,CAACkB,IAAI,EAAEC,OAAO,CAACF,IAAI,CAAC,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIqL,IAAI,GAAG,SAAPA,IAAI,CAAahL,IAAI,EAAED,GAAG,EAAE;EAAE,OAAOrB,IAAI,CAACsB,IAAI,EAAEpC,MAAM,CAAC,CAACmC,GAAG,CAAC,CAAC,CAAC;AAAE,CAAC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIkL,QAAQ,GAAG,SAAXA,QAAQ,CAAa5N,CAAC,EAAE8C,CAAC,EAAE;EAClC,OAAO,UAAUV,EAAE,EAAE;IACjB,OAAOpC,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGoC,EAAE,CAACrC,MAAM,GAAG8B,CAAC,CAACuD,IAAI,GAAGvD,CAAC,CAACsD,IAAI,CAACtC,cAAc,CAAC7C,CAAC,EAAE8C,CAAC,EAAEV,EAAE,CAAC,CAAC;EAC7E,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIyL,YAAY,GAAGrG,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIsG,IAAI,GAAGrB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIsB,qBAAqB,GAAG;EAC/B/C,GAAG,EAAEA,GAAG;EACRR,EAAE,EAAEA,EAAE;EACNpC,GAAG,EAAED,IAAI;EACTG,YAAY,EAAED,aAAa;EAC3BI,EAAE,EAAEF,GAAG;EACPK,KAAK,EAAEF,MAAM;EACbK,MAAM,EAAEF,OAAO;EACfkC,OAAO,EAAEA,OAAO;EAChB7G,MAAM,EAAE8E,OAAO;EACfG,OAAO,EAAEF,QAAQ;EACjBI,WAAW,EAAED,YAAY;EACzBK,QAAQ,EAAEH,SAAS;EACnBwB,QAAQ,EAAEA,QAAQ;EAClBf,eAAe,EAAED,gBAAgB;EACjCI,gBAAgB,EAAEF,iBAAiB;EACnCI,oBAAoB,EAAED,qBAAqB;EAC3CI,iBAAiB,EAAEF,kBAAkB;EACrCR,GAAG,EAAEF;AACT,CAAC"},"metadata":{},"sourceType":"module"}