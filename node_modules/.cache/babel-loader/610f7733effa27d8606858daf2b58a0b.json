{"ast":null,"code":"import { message } from \"antd\";\nimport { transactions } from 'near-api-js';\nimport TonWeb from \"tonweb\";\nimport { parseUsnAmount } from \"./formatUsn.js\";\nconst axios = require(\"axios\").default;\nconst MakeUSNTrx = async (activeBtn, setIsload, NEARwalletKey, amount, walletTo, netTo, hexString, openData, add, params) => {\n  if (activeBtn) {\n    setIsload(true);\n    //@ts-ignore\n    await window.contract.account._signAndSendTransaction({\n      receiverId: process.env.REACT_APP_USN_CONTRACT,\n      actions: [transactions.functionCall('ft_transfer', Buffer.from(JSON.stringify({\n        receiver_id: process.env.REACT_APP_BACK_NEAR_WALLET,\n        amount: parseUsnAmount(amount),\n        memo: `${openData ? \"SM#\" : \"\"}${netTo}#${openData ? add : walletTo}${openData ? `#${btoa(params)}` : \"\"}`\n      })), new TonWeb.utils.BN(40000000000000), new TonWeb.utils.BN(1))],\n      walletCallbackUrl: 'https://app.tonana.org/?isusn=true'\n    });\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n_c = MakeUSNTrx;\nexport const makeUSNTrxAfterLoad = (transactionHashes, setSearchParams, searchParams) => {\n  if (transactionHashes) {\n    fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\" : \"https://api.tonana.org/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hash: transactionHashes,\n        sourceChain: \"usn\"\n      })\n    }).then(e => e.text()).then(e => {\n      if (e === \"Done!\") {\n        searchParams.delete(\"transactionHashes\");\n        searchParams.delete(\"isusn\");\n        setSearchParams(searchParams);\n      }\n    });\n  }\n};\nexport default MakeUSNTrx;\nvar _c;\n$RefreshReg$(_c, \"MakeUSNTrx\");","map":{"version":3,"names":["message","transactions","TonWeb","parseUsnAmount","axios","require","default","MakeUSNTrx","activeBtn","setIsload","NEARwalletKey","amount","walletTo","netTo","hexString","openData","add","params","window","contract","account","_signAndSendTransaction","receiverId","process","env","REACT_APP_USN_CONTRACT","actions","functionCall","Buffer","from","JSON","stringify","receiver_id","REACT_APP_BACK_NEAR_WALLET","memo","btoa","utils","BN","walletCallbackUrl","error","makeUSNTrxAfterLoad","transactionHashes","setSearchParams","searchParams","fetch","REACT_APP_STATE","method","headers","body","hash","sourceChain","then","e","text","delete"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeUSNTrx.ts"],"sourcesContent":["import { message } from \"antd\";\nimport { connect,Contract, utils,transactions, keyStores, WalletConnection } from 'near-api-js';\nimport TonWeb from \"tonweb\";\nimport { parseUsnAmount } from \"./formatUsn.js\";\nconst axios = require(\"axios\").default;\n\n\nconst MakeUSNTrx = async (activeBtn: any, setIsload: any, NEARwalletKey: string, amount: any, walletTo: any, netTo: string, hexString: any, openData: boolean, add: string, params: string) => {\n  if (activeBtn) {\n    setIsload(true);\n    //@ts-ignore\n    await window.contract.account._signAndSendTransaction({\n      receiverId: process.env.REACT_APP_USN_CONTRACT,\n      actions: [\n        transactions.functionCall(\n          'ft_transfer',\n          Buffer.from(JSON.stringify({ receiver_id: process.env.REACT_APP_BACK_NEAR_WALLET, amount: parseUsnAmount(amount), memo: `${openData ? \"SM#\" : \"\"}${netTo}#${openData? add : walletTo}${openData ? `#${btoa(params)}` : \"\"}` })),\n          new TonWeb.utils.BN(40000000000000),\n          new TonWeb.utils.BN(1),\n\n        )\n      ],\n      walletCallbackUrl: 'https://app.tonana.org/?isusn=true'\n\n    })\n\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n\nexport const makeUSNTrxAfterLoad = (transactionHashes: any, setSearchParams:any,searchParams: any) => {\n  if (transactionHashes) {\n    fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\"   : \"https://api.tonana.org/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        hash: transactionHashes,\n        sourceChain: \"usn\",\n      }),\n    })\n      .then((e) => e.text())\n      .then((e) => {\n        if (e === \"Done!\") {\n          searchParams.delete(\"transactionHashes\");\n          searchParams.delete(\"isusn\");\n          setSearchParams(searchParams);\n        }\n      });\n    }\n  }\n\nexport default MakeUSNTrx"],"mappings":"AAAA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAAiCC,YAAY,QAAqC,aAAa;AAC/F,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO;AAGtC,MAAMC,UAAU,GAAG,OAAOC,SAAc,EAAEC,SAAc,EAAEC,aAAqB,EAAEC,MAAW,EAAEC,QAAa,EAAEC,KAAa,EAAEC,SAAc,EAAEC,QAAiB,EAAEC,GAAW,EAAEC,MAAc,KAAK;EAC7L,IAAIT,SAAS,EAAE;IACbC,SAAS,CAAC,IAAI,CAAC;IACf;IACA,MAAMS,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACC,uBAAuB,CAAC;MACpDC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;MAC9CC,OAAO,EAAE,CACPzB,YAAY,CAAC0B,YAAY,CACvB,aAAa,EACbC,MAAM,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,WAAW,EAAET,OAAO,CAACC,GAAG,CAACS,0BAA0B;QAAEtB,MAAM,EAAER,cAAc,CAACQ,MAAM,CAAC;QAAEuB,IAAI,EAAG,GAAEnB,QAAQ,GAAG,KAAK,GAAG,EAAG,GAAEF,KAAM,IAAGE,QAAQ,GAAEC,GAAG,GAAGJ,QAAS,GAAEG,QAAQ,GAAI,IAAGoB,IAAI,CAAClB,MAAM,CAAE,EAAC,GAAG,EAAG;MAAE,CAAC,CAAC,CAAC,EAC/N,IAAIf,MAAM,CAACkC,KAAK,CAACC,EAAE,CAAC,cAAc,CAAC,EACnC,IAAInC,MAAM,CAACkC,KAAK,CAACC,EAAE,CAAC,CAAC,CAAC,CAEvB,CACF;MACDC,iBAAiB,EAAE;IAErB,CAAC,CAAC;EAEJ,CAAC,MAAM;IACLtC,OAAO,CAACuC,KAAK,CAAC,qCAAqC,EAAE,EAAE,CAAC;EAC1D;AACF,CAAC;AAAC,KAtBIhC,UAAU;AAwBhB,OAAO,MAAMiC,mBAAmB,GAAG,CAACC,iBAAsB,EAAEC,eAAmB,EAACC,YAAiB,KAAK;EACpG,IAAIF,iBAAiB,EAAE;IACrBG,KAAK,CAACrB,OAAO,CAACC,GAAG,CAACqB,eAAe,KAAK,KAAK,GAAG,uBAAuB,GAAGtB,OAAO,CAACC,GAAG,CAACqB,eAAe,KAAK,YAAY,GAAG,4BAA4B,GAAK,yBAAyB,EAAE;MACjLC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAElB,IAAI,CAACC,SAAS,CAAC;QACnBkB,IAAI,EAAER,iBAAiB;QACvBS,WAAW,EAAE;MACf,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,KAAK,OAAO,EAAE;QACjBT,YAAY,CAACW,MAAM,CAAC,mBAAmB,CAAC;QACxCX,YAAY,CAACW,MAAM,CAAC,OAAO,CAAC;QAC5BZ,eAAe,CAACC,YAAY,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAEH,eAAepC,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}