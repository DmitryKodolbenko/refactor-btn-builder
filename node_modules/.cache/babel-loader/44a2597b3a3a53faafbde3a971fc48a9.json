{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"../index.js\"),\n  Contract = _require.Contract;\nvar _require2 = require(\"../../boc\"),\n  Cell = _require2.Cell;\nvar _require3 = require(\"../../utils\"),\n  hexToBytes = _require3.hexToBytes,\n  BN = _require3.BN,\n  nacl = _require3.nacl,\n  bytesToBase64 = _require3.bytesToBase64;\nvar SubscriptionContract = /*#__PURE__*/function (_Contract) {\n  \"use strict\";\n\n  _inherits(SubscriptionContract, _Contract);\n  var _super = _createSuper(SubscriptionContract);\n  /**\n   * @param provider\n   * @param options   {{wc: number, wallet: Address, beneficiary: Address, amount: BN, period: number, timeout: number, startAt: number, subscriptionId: number, address?: Address | string}}\n   */\n  function SubscriptionContract(provider, options) {\n    var _this;\n    _classCallCheck(this, SubscriptionContract);\n    options.code = Cell.oneFromBocn    _this = _super.call(this, provider, options);\n    _this.methods.pay = function () {\n      return Contract.createMethod(provider, _this.createPayExternalMessage());\n    };\n    _this.methods.getSubscriptionData = _this.getSubscriptionData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * @override\n   * @private\n   * @return {Cell} cell contains wallet data\n   */\n  _createClass(SubscriptionContract, [{\n    key: \"createDataCell\",\n    value: function createDataCell() {\n      var cell = new Cell();\n      cell.bits.writeAddress(this.options.wallet);\n      cell.bits.writeAddress(this.options.beneficiary);\n      cell.bits.writeGrams(this.options.amount);\n      cell.bits.writeUint(this.options.period, 32);\n      cell.bits.writeUint(this.options.startAt, 32); // start_time\n      cell.bits.writeUint(this.options.timeout, 32);\n      cell.bits.writeUint(0, 32); // last_payment_time\n      cell.bits.writeUint(0, 32); // last_request_time\n      cell.bits.writeUint(0, 8); // failed_attempts\n      cell.bits.writeUint(this.options.subscriptionId, 32); // subscription_id\n      return cell;\n    }\n\n    /**\n     * Payment body (from wallet to subscription)\n     * @return {Cell}\n     */\n  }, {\n    key: \"createBody\",\n    value: function createBody() {\n      var body = new Cell();\n      body.bits.writeUint(new BN(0x706c7567).add(new BN(0x80000000)), 32); // op\n      return body;\n    }\n\n    /**\n     * Destroy plugin body (from wallet to subscription OR from beneficiary to subscription)\n     * @return {Cell}\n     */\n  }, {\n    key: \"createSelfDestructBody\",\n    value: function createSelfDestructBody() {\n      var body = new Cell();\n      body.bits.writeUint(0x64737472, 32); // op\n      return body;\n    }\n  }, {\n    key: \"getSubscriptionData\",\n    value: function () {\n      var _getSubscriptionData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var parseAddress, myAddress, result, wallet, beneficiary, amount, period, startAt, timeout, lastPayment, lastRequest, failedAttempts, subscriptionId;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                parseAddress = function parseAddress(tuple) {\n                  return tuple[0].toNumber() + ':' + tuple[1].toString(16);\n                };\n                _context.next = 3;\n                return this.getAddress();\n              case 3:\n                myAddress = _context.sent;\n                _context.next = 6;\n                return this.provider.call2(myAddress.toString(), 'get_subscription_data');\n              case 6:\n                result = _context.sent;\n                wallet = parseAddress(result[0]);\n                beneficiary = parseAddress(result[1]);\n                amount = result[2];\n                period = result[3].toNumber();\n                startAt = result[4].toNumber(); // start_time\n                timeout = result[5].toNumber();\n                lastPayment = result[6].toNumber(); // last_payment_time\n                lastRequest = result[7].toNumber(); // last_request_time\n                failedAttempts = result[8].toNumber();\n                subscriptionId = result[9].toNumber();\n                return _context.abrupt(\"return\", {\n                  wallet: wallet,\n                  beneficiary: beneficiary,\n                  amount: amount,\n                  period: period,\n                  startAt: startAt,\n                  timeout: timeout,\n                  lastPayment: lastPayment,\n                  lastRequest: lastRequest,\n                  failedAttempts: failedAttempts,\n                  subscriptionId: subscriptionId\n                });\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getSubscriptionData() {\n        return _getSubscriptionData.apply(this, arguments);\n      }\n      return getSubscriptionData;\n    }()\n    /**\n     * @protected\n     * @return {Promise<{address: Address, signature: Uint8Array, message: Cell, cell: Cell, body: Cell, resultMessage: Cell}>}\n     */\n  }, {\n    key: \"createPayExternalMessage\",\n    value: function () {\n      var _createPayExternalMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var selfAddress, header, resultMessage, body;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getAddress();\n              case 2:\n                selfAddress = _context2.sent;\n                header = Contract.createExternalMessageHeader(selfAddress);\n                resultMessage = Contract.createCommonMsgInfo(header, null, null);\n                body = new Cell();\n                body.bits.writeUint(Math.floor(Date.now() / 1000), 64); // this is not required by the contract; just to make it easier to distinguish messages\n                return _context2.abrupt(\"return\", {\n                  address: selfAddress,\n                  message: resultMessage,\n                  body: body\n                });\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function createPayExternalMessage() {\n        return _createPayExternalMessage.apply(this, arguments);\n      }\n      return createPayExternalMessage;\n    }()\n  }]);\n  return SubscriptionContract;\n}(Contract);\nmodule.exports = {\n  SubscriptionContract: SubscriptionContract\n};","map":{"version":3,"names":["require","Contract","Cell","hexToBytes","BN","nacl","bytesToBase64","SubscriptionContract","provider","options","code","oneFromBoc","methods","pay","createMethod","createPayExternalMessage","getSubscriptionData","bind","cell","bits","writeAddress","wallet","beneficiary","writeGrams","amount","writeUint","period","startAt","timeout","subscriptionId","body","add","parseAddress","tuple","toNumber","toString","getAddress","myAddress","call2","result","lastPayment","lastRequest","failedAttempts","selfAddress","header","createExternalMessageHeader","resultMessage","createCommonMsgInfo","Math","floor","Date","now","address","message","module","exports"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/contract/subscription/index.js"],"sourcesContent":["const {Contract} = require(\"../index.js\");\nconst {Cell} = require(\"../../boc\");\nconst {hexToBytes, BN, nacl, bytesToBase64} = require(\"../../utils\");\n\n\nclass SubscriptionContract extends Contract {\n    /**\n     * @param provider\n     * @param options   {{wc: number, wallet: Address, beneficiary: Address, amount: BN, period: number, timeout: number, startAt: number, subscriptionId: number, address?: Address | string}}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n\n        this.methods.pay = () => Contract.createMethod(provider, this.createPayExternalMessage());\n        this.methods.getSubscriptionData = this.getSubscriptionData.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.wallet);\n        cell.bits.writeAddress(this.options.beneficiary);\n        cell.bits.writeGrams(this.options.amount);\n        cell.bits.writeUint(this.options.period, 32);\n        cell.bits.writeUint(this.options.startAt, 32); // start_time\n        cell.bits.writeUint(this.options.timeout, 32);\n        cell.bits.writeUint(0, 32); // last_payment_time\n        cell.bits.writeUint(0, 32); // last_request_time\n        cell.bits.writeUint(0, 8); // failed_attempts\n        cell.bits.writeUint(this.options.subscriptionId, 32); // subscription_id\n        return cell;\n    }\n\n    /**\n     * Payment body (from wallet to subscription)\n     * @return {Cell}\n     */\n    createBody() {\n        const body = new Cell();\n        body.bits.writeUint(new BN(0x706c7567).add(new BN(0x80000000)), 32); // op\n        return body;\n    }\n\n    /**\n     * Destroy plugin body (from wallet to subscription OR from beneficiary to subscription)\n     * @return {Cell}\n     */\n    createSelfDestructBody() {\n        const body = new Cell();\n        body.bits.writeUint(0x64737472, 32); // op\n        return body;\n    }\n\n    async getSubscriptionData() {\n        const parseAddress = tuple => tuple[0].toNumber() + ':' + tuple[1].toString(16);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_subscription_data');\n\n        const wallet = parseAddress(result[0]);\n        const beneficiary = parseAddress(result[1]);\n        const amount = result[2];\n        const period = result[3].toNumber();\n        const startAt = result[4].toNumber(); // start_time\n        const timeout = result[5].toNumber();\n        const lastPayment = result[6].toNumber(); // last_payment_time\n        const lastRequest = result[7].toNumber(); // last_request_time\n        const failedAttempts = result[8].toNumber();\n        const subscriptionId = result[9].toNumber();\n\n        return {wallet, beneficiary, amount, period, startAt, timeout, lastPayment, lastRequest, failedAttempts, subscriptionId};\n    }\n\n    /**\n     * @protected\n     * @return {Promise<{address: Address, signature: Uint8Array, message: Cell, cell: Cell, body: Cell, resultMessage: Cell}>}\n     */\n    async createPayExternalMessage() {\n        const selfAddress = await this.getAddress();\n        const header = Contract.createExternalMessageHeader(selfAddress);\n        const resultMessage = Contract.createCommonMsgInfo(header, null, null);\n        const body = new Cell();\n        body.bits.writeUint(Math.floor(Date.now() / 1000), 64); // this is not required by the contract; just to make it easier to distinguish messages\n\n        return {\n            address: selfAddress,\n            message: resultMessage,\n            body: body\n        };\n    }\n}\n\nmodule.exports = {SubscriptionContract};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}