{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = require(\"@cosmjs/amino\");\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst utils_1 = require(\"@cosmjs/utils\");\nfunction isAminoMsgCreateValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgCreateValidator\";\n}\nexports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;\nfunction isAminoMsgEditValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgEditValidator\";\n}\nexports.isAminoMsgEditValidator = isAminoMsgEditValidator;\nfunction isAminoMsgDelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgDelegate\";\n}\nexports.isAminoMsgDelegate = isAminoMsgDelegate;\nfunction isAminoMsgBeginRedelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgBeginRedelegate\";\n}\nexports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;\nfunction isAminoMsgUndelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgUndelegate\";\n}\nexports.isAminoMsgUndelegate = isAminoMsgUndelegate;\nfunction createStakingAminoConverters(prefix) {\n  return {\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: _ref => {\n        let {\n          delegatorAddress,\n          validatorSrcAddress,\n          validatorDstAddress,\n          amount\n        } = _ref;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          delegator_address,\n          validator_src_address,\n          validator_dst_address,\n          amount\n        } = _ref2;\n        return {\n          delegatorAddress: delegator_address,\n          validatorSrcAddress: validator_src_address,\n          validatorDstAddress: validator_dst_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: _ref3 => {\n        let {\n          description,\n          commission,\n          minSelfDelegation,\n          delegatorAddress,\n          validatorAddress,\n          pubkey,\n          value\n        } = _ref3;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n        (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n        (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            max_rate: commission.maxRate,\n            max_change_rate: commission.maxChangeRate\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: (0, amino_1.encodeBech32Pubkey)({\n            type: \"tendermint/PubKeySecp256k1\",\n            value: (0, encoding_1.toBase64)(pubkey.value)\n          }, prefix),\n          value: value\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          description,\n          commission,\n          min_self_delegation,\n          delegator_address,\n          validator_address,\n          pubkey,\n          value\n        } = _ref4;\n        const decodedPubkey = (0, amino_1.decodeBech32Pubkey)(pubkey);\n        if (decodedPubkey.type !== \"tendermint/PubKeySecp256k1\") {\n          throw new Error(\"Only Secp256k1 public keys are supported\");\n        }\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            maxRate: commission.max_rate,\n            maxChangeRate: commission.max_change_rate\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: {\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: (0, encoding_1.fromBase64)(decodedPubkey.value)\n          },\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: _ref5 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref5;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref6;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: _ref7 => {\n        let {\n          description,\n          commissionRate,\n          minSelfDelegation,\n          validatorAddress\n        } = _ref7;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission_rate: commissionRate,\n          min_self_delegation: minSelfDelegation,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref8 => {\n        let {\n          description,\n          commission_rate,\n          min_self_delegation,\n          validator_address\n        } = _ref8;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commissionRate: commission_rate,\n          minSelfDelegation: min_self_delegation,\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: _ref9 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref9;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref10 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref10;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    }\n  };\n}\nexports.createStakingAminoConverters = createStakingAminoConverters;","map":{"version":3,"sources":["../../../src/modules/staking/aminomessages.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = require(\"@cosmjs/amino\");\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst utils_1 = require(\"@cosmjs/utils\");\nfunction isAminoMsgCreateValidator(msg) {\n    return msg.type === \"cosmos-sdk/MsgCreateValidator\";\n}\nexports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;\nfunction isAminoMsgEditValidator(msg) {\n    return msg.type === \"cosmos-sdk/MsgEditValidator\";\n}\nexports.isAminoMsgEditValidator = isAminoMsgEditValidator;\nfunction isAminoMsgDelegate(msg) {\n    return msg.type === \"cosmos-sdk/MsgDelegate\";\n}\nexports.isAminoMsgDelegate = isAminoMsgDelegate;\nfunction isAminoMsgBeginRedelegate(msg) {\n    return msg.type === \"cosmos-sdk/MsgBeginRedelegate\";\n}\nexports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;\nfunction isAminoMsgUndelegate(msg) {\n    return msg.type === \"cosmos-sdk/MsgUndelegate\";\n}\nexports.isAminoMsgUndelegate = isAminoMsgUndelegate;\nfunction createStakingAminoConverters(prefix) {\n    return {\n        \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n            aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n            toAmino: ({ delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_src_address: validatorSrcAddress,\n                    validator_dst_address: validatorDstAddress,\n                    amount: amount,\n                };\n            },\n            fromAmino: ({ delegator_address, validator_src_address, validator_dst_address, amount, }) => ({\n                delegatorAddress: delegator_address,\n                validatorSrcAddress: validator_src_address,\n                validatorDstAddress: validator_dst_address,\n                amount: amount,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n            aminoType: \"cosmos-sdk/MsgCreateValidator\",\n            toAmino: ({ description, commission, minSelfDelegation, delegatorAddress, validatorAddress, pubkey, value, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n                (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n                (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n                (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n                return {\n                    description: {\n                        moniker: description.moniker,\n                        identity: description.identity,\n                        website: description.website,\n                        security_contact: description.securityContact,\n                        details: description.details,\n                    },\n                    commission: {\n                        rate: commission.rate,\n                        max_rate: commission.maxRate,\n                        max_change_rate: commission.maxChangeRate,\n                    },\n                    min_self_delegation: minSelfDelegation,\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    pubkey: (0, amino_1.encodeBech32Pubkey)({\n                        type: \"tendermint/PubKeySecp256k1\",\n                        value: (0, encoding_1.toBase64)(pubkey.value),\n                    }, prefix),\n                    value: value,\n                };\n            },\n            fromAmino: ({ description, commission, min_self_delegation, delegator_address, validator_address, pubkey, value, }) => {\n                const decodedPubkey = (0, amino_1.decodeBech32Pubkey)(pubkey);\n                if (decodedPubkey.type !== \"tendermint/PubKeySecp256k1\") {\n                    throw new Error(\"Only Secp256k1 public keys are supported\");\n                }\n                return {\n                    description: {\n                        moniker: description.moniker,\n                        identity: description.identity,\n                        website: description.website,\n                        securityContact: description.security_contact,\n                        details: description.details,\n                    },\n                    commission: {\n                        rate: commission.rate,\n                        maxRate: commission.max_rate,\n                        maxChangeRate: commission.max_change_rate,\n                    },\n                    minSelfDelegation: min_self_delegation,\n                    delegatorAddress: delegator_address,\n                    validatorAddress: validator_address,\n                    pubkey: {\n                        typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n                        value: (0, encoding_1.fromBase64)(decodedPubkey.value),\n                    },\n                    value: value,\n                };\n            },\n        },\n        \"/cosmos.staking.v1beta1.MsgDelegate\": {\n            aminoType: \"cosmos-sdk/MsgDelegate\",\n            toAmino: ({ delegatorAddress, validatorAddress, amount }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    amount: amount,\n                };\n            },\n            fromAmino: ({ delegator_address, validator_address, amount, }) => ({\n                delegatorAddress: delegator_address,\n                validatorAddress: validator_address,\n                amount: amount,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n            aminoType: \"cosmos-sdk/MsgEditValidator\",\n            toAmino: ({ description, commissionRate, minSelfDelegation, validatorAddress, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n                return {\n                    description: {\n                        moniker: description.moniker,\n                        identity: description.identity,\n                        website: description.website,\n                        security_contact: description.securityContact,\n                        details: description.details,\n                    },\n                    commission_rate: commissionRate,\n                    min_self_delegation: minSelfDelegation,\n                    validator_address: validatorAddress,\n                };\n            },\n            fromAmino: ({ description, commission_rate, min_self_delegation, validator_address, }) => ({\n                description: {\n                    moniker: description.moniker,\n                    identity: description.identity,\n                    website: description.website,\n                    securityContact: description.security_contact,\n                    details: description.details,\n                },\n                commissionRate: commission_rate,\n                minSelfDelegation: min_self_delegation,\n                validatorAddress: validator_address,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n            aminoType: \"cosmos-sdk/MsgUndelegate\",\n            toAmino: ({ delegatorAddress, validatorAddress, amount, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    amount: amount,\n                };\n            },\n            fromAmino: ({ delegator_address, validator_address, amount, }) => ({\n                delegatorAddress: delegator_address,\n                validatorAddress: validator_address,\n                amount: amount,\n            }),\n        },\n    };\n}\nexports.createStakingAminoConverters = createStakingAminoConverters;\n//# sourceMappingURL=aminomessages.js.map"]},"metadata":{},"sourceType":"script"}