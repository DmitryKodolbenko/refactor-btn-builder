{"ast":null,"code":"import { Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport { message } from \"antd\";\nimport \"dotenv/config\";\nimport { setupWalletSelector } from \"@near-wallet-selector/core\";\nimport { setupModal } from \"@near-wallet-selector/modal-ui\";\nimport { setupNearWallet } from \"@near-wallet-selector/near-wallet\";\nimport { setupSender } from \"@near-wallet-selector/sender\";\nimport { setupHereWallet } from \"@near-wallet-selector/here-wallet\";\nimport { setupMathWallet } from \"@near-wallet-selector/math-wallet\";\nimport { setupNightly } from \"@near-wallet-selector/nightly\";\nimport { setupMeteorWallet } from \"@near-wallet-selector/meteor-wallet\";\nimport { setupWelldoneWallet } from \"@near-wallet-selector/welldone-wallet\";\n// import { setupWalletConnect } from \"@near-wallet-selector/wallet-connect\";\nimport { setupNightlyConnect } from \"@near-wallet-selector/nightly-connect\";\nimport { setupDefaultWallets } from \"@near-wallet-selector/default-wallets\";\nimport { setupNearFi } from \"@near-wallet-selector/nearfi\";\nimport { setupCoin98Wallet } from \"@near-wallet-selector/coin98-wallet\";\nimport { setupOptoWallet } from \"@near-wallet-selector/opto-wallet\";\nimport { setupNeth } from \"@near-wallet-selector/neth\";\n// import \"./dist/packages/modal-ui/styles.css\";/\n\nconst connectWalletNear = async setNearWalletKey => {\n  try {\n    const connectionConfig = {\n      networkId: \"mainnet\",\n      keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n      nodeUrl: \"https://rpc.mainnet.near.org\",\n      walletUrl: \"https://wallet.mainnet.near.org\",\n      helperUrl: \"https://helper.mainnet.near.org\",\n      explorerUrl: \"https://explorer.mainnet.near.org\"\n    };\n\n    // (async ()=>{\n\n    //     const nearConnection = await connect(connectionConfig as any);\n    //     const receiver = process.env.REACT_APP_BACK_NEAR_WALLET ? process.env.REACT_APP_BACK_NEAR_WALLET : '';\n\n    //     const walletConnection = new WalletConnection(nearConnection, receiver);\n    //     await(await(await nearConnection.account('sepezho.near')).getAccountBalance()).available\n    //   })()\n\n    // const getAccount = () => {\n    // \tconst getAccount network = connectionConfig;\n    // \tconst provider = new providers.JsonRpcProvider({ url: network.nodeUrl });\n    //\n    // \treturn provider\n    // \t\t.query<AccountView>({\n    // \t\t\trequest_type: \"view_account\",\n    // \t\t\tfinality: \"final\",\n    // \t\t\taccount_id: accountId,\n    // \t\t})\n    // \t\t.then((data) => ({\n    // \t\t\t...data,\n    // \t\t\taccount_id: accountId,\n    // \t\t}));\n    // };\n\n    // useEffect(() => {\n    // \tif (!accountId) {\n    // \t\treturn setAccount(null);\n    // \t}\n\n    // \tsetLoading(true);\n\n    // \tgetAccount().then((nextAccount) => {\n    // \t\tsetAccount(nextAccount);\n    // \t\tsetLoading(false);\n    // \t});\n    // }, [accountId, getAccount]);\n\n    // const handleSignIn = () => {\n    // \tmodal.show();\n    // };\n\n    // const handleSwitchWallet = () => {\n    // \tmodal.show();\n    // };\n\n    (async () => {\n      const _selector = await setupWalletSelector({\n        network: \"mainnet\",\n        debug: true,\n        modules: [...(await setupDefaultWallets()), setupNearWallet(), setupSender(), setupMathWallet(), setupNightly(), setupMeteorWallet(), setupWelldoneWallet(), setupHereWallet(), setupCoin98Wallet(), setupNearFi(), setupNeth({\n          gas: \"300000000000000\",\n          bundle: false\n        }), setupOptoWallet(),\n        // setupWalletConnect({\n        // \tprojectId: \"c4f79cc...\",\n        // \tmetadata: {\n        // \t\tname: \"NEAR Wallet Selector\",\n        // \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n        // \t\turl: \"https://github.com/near/wallet-selector\",\n        // \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n        // \t},\n        // }),\n        setupNightlyConnect({\n          url: \"wss://relay.nightly.app/app\",\n          appMetadata: {\n            additionalInfo: \"\",\n            application: \"NEAR Wallet Selector\",\n            description: \"Example dApp used by NEAR Wallet Selector\",\n            icon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\"\n          }\n        })]\n      });\n      const _modal = setupModal(_selector, {\n        contractId: \"tonana.near\"\n      });\n      _modal.show();\n      const state = _selector.store.getState();\n      let accounts = state.accounts;\n\n      //@ts-ignore\n      window.selector = _selector;\n      //@ts-ignore\n      window.modal = _modal;\n\n      // setSelector(_selector);\n      // setModal(_modal);\n      // }, []);\n\n      // const subscription = await _selector.store.observable\n      // \t.pipe(\n      // \t\tmap((state) => state.accounts),\n      // \t\tdistinctUntilChanged()\n      // \t)\n      // \t.subscribe((nextAccounts) => {\n      // \t\tconsole.log(\"Accounts Update\", nextAccounts);\n\n      // \t\taccounts = nextAccounts;\n      // \t});\n\n      // subscription.unsubscribe();\n\n      const accountId = accounts.find(account => account.active) || null;\n      console.log(accountId);\n\n      // const nearConnection = await connect(connectionConfig as any);\n      const receiver = process.env.REACT_APP_NEAR_CONTRACT ? process.env.REACT_APP_NEAR_CONTRACT : \"\";\n      console.log(receiver);\n      const walletConnection = new WalletConnection(new Near(connectionConfig), receiver);\n      //@ts-ignore\n      window.contract = new Contract(walletConnection.account(), receiver, {\n        changeMethods: [\"payToWallet\"],\n        viewMethods: []\n      });\n      console.log('dasdfladshkl');\n      console.log(walletConnection.isSignedIn());\n      if (walletConnection.isSignedIn()) {\n        console.log(123);\n        const walletAccountId = walletConnection.getAccountId();\n        console.log(walletAccountId);\n        setNearWalletKey(accountId.accountId);\n      } else {\n        await walletConnection.requestSignIn({\n          contractId: process.env.REACT_APP_NEAR_CONTRACT,\n          methodNames: [\"payToWallet\"]\n        });\n      }\n\n      // const selector = await setupWalletSelector({\n      // \tnetwork: \"testnet\",\n      // \tmodules: [\n      // \t\t...(await setupDefaultWallets()),\n      // \t\tsetupNearWallet(),\n      // \t\tsetupMyNearWallet(),\n      // \t\tsetupSender(),\n      // \t\tsetupHereWallet(),\n      // \t\tsetupMathWallet(),\n      // \t\tsetupNightly(),\n      // \t\tsetupMeteorWallet(),\n      // \t\tsetupWelldoneWallet(),\n      // \t\tsetupLedger(),\n      // \t\tsetupNearFi(),\n      // \t\tsetupCoin98Wallet(),\n      // \t\tsetupOptoWallet(),\n      // \t\tsetupNeth(),\n      // \t\t// setupWalletConnect({\n      // \t\t// \tprojectId: \"c4f79cc...\",\n      // \t\t// \tmetadata: {\n      // \t\t// \t\tname: \"NEAR Wallet Selector\",\n      // \t\t// \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n      // \t\t// \t\turl: \"https://github.com/near/wallet-selector\",\n      // \t\t// \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n      // \t\t// \t},\n      // \t\t// }),\n      // \t\tsetupNightlyConnect({\n      // \t\t\turl: \"wss://relay.nightly.app/app\",\n      // \t\t\tappMetadata: {\n      // \t\t\t\tadditionalInfo: \"\",\n      // \t\t\t\tapplication: \"NEAR Wallet Selector\",\n      // \t\t\t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n      // \t\t\t\ticon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\",\n      // \t\t\t},\n      // \t\t}),\n      // \t],\n      // });\n\n      // const afd = setupModal(selector, {\n      // \tcontractId: \"guest-book.testnet\",\n      // });\n      // afd.show();\n    })();\n\n    //     const nearConnection = await connect(connectionConfig as any);\n    //     const receiver = process.env.REACT_APP_NEAR_CONTRACT ? process.env.REACT_APP_NEAR_CONTRACT : '';\n\n    //     const walletConnection = new WalletConnection(nearConnection, receiver);\n    //   //@ts-ignore\n    // window.contract = await new Contract(walletConnection.account(), receiver, {\n    //   changeMethods: ['payToWallet'],\n    //   viewMethods: []\n    // })\n    //     if (walletConnection.isSignedIn()) {\n    //       const walletAccountId = walletConnection.getAccountId();\n    //       setNearWalletKey(walletAccountId);\n    //     } else {\n    //       await walletConnection.requestSignIn(\n    //         {\n    //           contractId:process.env.REACT_APP_NEAR_CONTRACT,\n    //           methodNames:['payToWallet']\n    //       }\n\n    //       );\n    //     }\n  } catch (err) {\n    console.log(err);\n    message.error(\"Use NEAR wallet. Close all windows and try again pls\", 5);\n  }\n};\nexport default connectWalletNear;\n\n// NEAR CHECK FEES ALOWANCE\n//   const response = await near.connection.provider.query({\n//   request_type: \"view_access_key\",\n//   finality: \"final\",\n//   account_id: \"client.chainlink.testnet\",\n//   public_key: \"ed25519:H9k5eiU4xXS3M4z8HzKJSLaZdqGdGwBG49o7orNC4eZW\",\n// });","map":{"version":3,"names":["Contract","keyStores","WalletConnection","message","setupWalletSelector","setupModal","setupNearWallet","setupSender","setupHereWallet","setupMathWallet","setupNightly","setupMeteorWallet","setupWelldoneWallet","setupNightlyConnect","setupDefaultWallets","setupNearFi","setupCoin98Wallet","setupOptoWallet","setupNeth","connectWalletNear","setNearWalletKey","connectionConfig","networkId","keyStore","BrowserLocalStorageKeyStore","nodeUrl","walletUrl","helperUrl","explorerUrl","_selector","network","debug","modules","gas","bundle","url","appMetadata","additionalInfo","application","description","icon","_modal","contractId","show","state","store","getState","accounts","window","selector","modal","accountId","find","account","active","console","log","receiver","process","env","REACT_APP_NEAR_CONTRACT","walletConnection","Near","contract","changeMethods","viewMethods","isSignedIn","walletAccountId","getAccountId","requestSignIn","methodNames","err","error"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletNEAR.ts"],"sourcesContent":["import {\n\tconnect,\n\tContract,\n\tutils,\n\ttransactions,\n\tkeyStores,\n\tWalletConnection,\n} from \"near-api-js\";\nimport { message } from \"antd\";\nimport \"dotenv/config\";\n\nimport { setupWalletSelector } from \"@near-wallet-selector/core\";\nimport { setupModal } from \"@near-wallet-selector/modal-ui\";\nimport { setupNearWallet } from \"@near-wallet-selector/near-wallet\";\nimport { setupMyNearWallet } from \"@near-wallet-selector/my-near-wallet\";\nimport { setupSender } from \"@near-wallet-selector/sender\";\nimport { setupHereWallet } from \"@near-wallet-selector/here-wallet\";\nimport { setupMathWallet } from \"@near-wallet-selector/math-wallet\";\nimport { setupNightly } from \"@near-wallet-selector/nightly\";\nimport { setupMeteorWallet } from \"@near-wallet-selector/meteor-wallet\";\nimport { setupWelldoneWallet } from \"@near-wallet-selector/welldone-wallet\";\nimport { setupLedger } from \"@near-wallet-selector/ledger\";\n// import { setupWalletConnect } from \"@near-wallet-selector/wallet-connect\";\nimport { setupNightlyConnect } from \"@near-wallet-selector/nightly-connect\";\nimport { setupDefaultWallets } from \"@near-wallet-selector/default-wallets\";\nimport { setupNearFi } from \"@near-wallet-selector/nearfi\";\nimport { setupCoin98Wallet } from \"@near-wallet-selector/coin98-wallet\";\nimport { setupOptoWallet } from \"@near-wallet-selector/opto-wallet\";\nimport { setupNeth } from \"@near-wallet-selector/neth\";\n// import \"./dist/packages/modal-ui/styles.css\";/\n\nconst connectWalletNear = async (setNearWalletKey: any) => {\n\ttry {\n\t\tconst connectionConfig = {\n\t\t\tnetworkId: \"mainnet\",\n\t\t\tkeyStore: new keyStores.BrowserLocalStorageKeyStore(),\n\t\t\tnodeUrl: \"https://rpc.mainnet.near.org\",\n\t\t\twalletUrl: \"https://wallet.mainnet.near.org\",\n\t\t\thelperUrl: \"https://helper.mainnet.near.org\",\n\t\t\texplorerUrl: \"https://explorer.mainnet.near.org\",\n\t\t};\n\n\t\t// (async ()=>{\n\n\t\t//     const nearConnection = await connect(connectionConfig as any);\n\t\t//     const receiver = process.env.REACT_APP_BACK_NEAR_WALLET ? process.env.REACT_APP_BACK_NEAR_WALLET : '';\n\n\t\t//     const walletConnection = new WalletConnection(nearConnection, receiver);\n\t\t//     await(await(await nearConnection.account('sepezho.near')).getAccountBalance()).available\n\t\t//   })()\n\n\t\t// const getAccount = () => {\n\t\t// \tconst getAccount network = connectionConfig;\n\t\t// \tconst provider = new providers.JsonRpcProvider({ url: network.nodeUrl });\n\t\t//\n\t\t// \treturn provider\n\t\t// \t\t.query<AccountView>({\n\t\t// \t\t\trequest_type: \"view_account\",\n\t\t// \t\t\tfinality: \"final\",\n\t\t// \t\t\taccount_id: accountId,\n\t\t// \t\t})\n\t\t// \t\t.then((data) => ({\n\t\t// \t\t\t...data,\n\t\t// \t\t\taccount_id: accountId,\n\t\t// \t\t}));\n\t\t// };\n\n\t\t// useEffect(() => {\n\t\t// \tif (!accountId) {\n\t\t// \t\treturn setAccount(null);\n\t\t// \t}\n\n\t\t// \tsetLoading(true);\n\n\t\t// \tgetAccount().then((nextAccount) => {\n\t\t// \t\tsetAccount(nextAccount);\n\t\t// \t\tsetLoading(false);\n\t\t// \t});\n\t\t// }, [accountId, getAccount]);\n\n\t\t// const handleSignIn = () => {\n\t\t// \tmodal.show();\n\t\t// };\n\n\t\t// const handleSwitchWallet = () => {\n\t\t// \tmodal.show();\n\t\t// };\n\n\t\t(async () => {\n\t\t\tconst _selector = await setupWalletSelector({\n\t\t\t\tnetwork: \"mainnet\",\n\t\t\t\tdebug: true,\n\t\t\t\tmodules: [\n\t\t\t\t\t...(await setupDefaultWallets()),\n\t\t\t\t\tsetupNearWallet(),\n\t\t\t\t\tsetupSender(),\n\t\t\t\t\tsetupMathWallet(),\n\t\t\t\t\tsetupNightly(),\n\t\t\t\t\tsetupMeteorWallet(),\n\t\t\t\t\tsetupWelldoneWallet(),\n\t\t\t\t\tsetupHereWallet(),\n\t\t\t\t\tsetupCoin98Wallet(),\n\t\t\t\t\tsetupNearFi(),\n\t\t\t\t\tsetupNeth({\n\t\t\t\t\t\tgas: \"300000000000000\",\n\t\t\t\t\t\tbundle: false,\n\t\t\t\t\t}),\n\t\t\t\t\tsetupOptoWallet(),\n\t\t\t\t\t// setupWalletConnect({\n\t\t\t\t\t// \tprojectId: \"c4f79cc...\",\n\t\t\t\t\t// \tmetadata: {\n\t\t\t\t\t// \t\tname: \"NEAR Wallet Selector\",\n\t\t\t\t\t// \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t\t\t// \t\turl: \"https://github.com/near/wallet-selector\",\n\t\t\t\t\t// \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n\t\t\t\t\t// \t},\n\t\t\t\t\t// }),\n\t\t\t\t\tsetupNightlyConnect({\n\t\t\t\t\t\turl: \"wss://relay.nightly.app/app\",\n\t\t\t\t\t\tappMetadata: {\n\t\t\t\t\t\t\tadditionalInfo: \"\",\n\t\t\t\t\t\t\tapplication: \"NEAR Wallet Selector\",\n\t\t\t\t\t\t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t\t\t\t\ticon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t});\n\t\t\tconst _modal = setupModal(_selector, { contractId: \"tonana.near\" });\n\t\t\t_modal.show();\n\t\t\tconst state = _selector.store.getState();\n\t\t\tlet accounts = state.accounts as any;\n\n\t\t\t//@ts-ignore\n\t\t\twindow.selector = _selector;\n\t\t\t//@ts-ignore\n\t\t\twindow.modal = _modal;\n\n\t\t\t// setSelector(_selector);\n\t\t\t// setModal(_modal);\n\t\t\t// }, []);\n\n\t\t\t// const subscription = await _selector.store.observable\n\t\t\t// \t.pipe(\n\t\t\t// \t\tmap((state) => state.accounts),\n\t\t\t// \t\tdistinctUntilChanged()\n\t\t\t// \t)\n\t\t\t// \t.subscribe((nextAccounts) => {\n\t\t\t// \t\tconsole.log(\"Accounts Update\", nextAccounts);\n\n\t\t\t// \t\taccounts = nextAccounts;\n\t\t\t// \t});\n\n\t\t\t// subscription.unsubscribe();\n\n\t\t\tconst accountId = accounts.find((account: any) => account.active) || null;\n\n\t\t\tconsole.log(accountId);\n\n\t\t\t// const nearConnection = await connect(connectionConfig as any);\n\t\t\tconst receiver = process.env.REACT_APP_NEAR_CONTRACT\n\t\t\t\t? process.env.REACT_APP_NEAR_CONTRACT\n\t\t\t\t: \"\";\n\t\t\tconsole.log(receiver)\n\n\t\t\tconst walletConnection = new WalletConnection(new Near(connectionConfig), receiver);\n\t\t\t//@ts-ignore\n\t\t\twindow.contract = new Contract(\n\t\t\t\twalletConnection.account(),\n\t\t\t\treceiver,\n\t\t\t\t{\n\t\t\t\t\tchangeMethods: [\"payToWallet\"],\n\t\t\t\t\tviewMethods: [],\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tconsole.log('dasdfladshkl')\n\t\t\tconsole.log(walletConnection.isSignedIn())\n\t\t\tif (walletConnection.isSignedIn()) {\n\t\t\t\tconsole.log(123)\n\t\t\t\tconst walletAccountId = walletConnection.getAccountId();\n\t\t\t\tconsole.log(walletAccountId)\n\t\t\t\tsetNearWalletKey(accountId.accountId);\n\t\t\t} else {\n\t\t\t\tawait walletConnection.requestSignIn({\n\t\t\t\t\tcontractId: process.env.REACT_APP_NEAR_CONTRACT,\n\t\t\t\t\tmethodNames: [\"payToWallet\"],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// const selector = await setupWalletSelector({\n\t\t\t// \tnetwork: \"testnet\",\n\t\t\t// \tmodules: [\n\t\t\t// \t\t...(await setupDefaultWallets()),\n\t\t\t// \t\tsetupNearWallet(),\n\t\t\t// \t\tsetupMyNearWallet(),\n\t\t\t// \t\tsetupSender(),\n\t\t\t// \t\tsetupHereWallet(),\n\t\t\t// \t\tsetupMathWallet(),\n\t\t\t// \t\tsetupNightly(),\n\t\t\t// \t\tsetupMeteorWallet(),\n\t\t\t// \t\tsetupWelldoneWallet(),\n\t\t\t// \t\tsetupLedger(),\n\t\t\t// \t\tsetupNearFi(),\n\t\t\t// \t\tsetupCoin98Wallet(),\n\t\t\t// \t\tsetupOptoWallet(),\n\t\t\t// \t\tsetupNeth(),\n\t\t\t// \t\t// setupWalletConnect({\n\t\t\t// \t\t// \tprojectId: \"c4f79cc...\",\n\t\t\t// \t\t// \tmetadata: {\n\t\t\t// \t\t// \t\tname: \"NEAR Wallet Selector\",\n\t\t\t// \t\t// \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t// \t\t// \t\turl: \"https://github.com/near/wallet-selector\",\n\t\t\t// \t\t// \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n\t\t\t// \t\t// \t},\n\t\t\t// \t\t// }),\n\t\t\t// \t\tsetupNightlyConnect({\n\t\t\t// \t\t\turl: \"wss://relay.nightly.app/app\",\n\t\t\t// \t\t\tappMetadata: {\n\t\t\t// \t\t\t\tadditionalInfo: \"\",\n\t\t\t// \t\t\t\tapplication: \"NEAR Wallet Selector\",\n\t\t\t// \t\t\t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t// \t\t\t\ticon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\",\n\t\t\t// \t\t\t},\n\t\t\t// \t\t}),\n\t\t\t// \t],\n\t\t\t// });\n\n\t\t\t// const afd = setupModal(selector, {\n\t\t\t// \tcontractId: \"guest-book.testnet\",\n\t\t\t// });\n\t\t\t// afd.show();\n\t\t})();\n\n\t\t//     const nearConnection = await connect(connectionConfig as any);\n\t\t//     const receiver = process.env.REACT_APP_NEAR_CONTRACT ? process.env.REACT_APP_NEAR_CONTRACT : '';\n\n\t\t//     const walletConnection = new WalletConnection(nearConnection, receiver);\n\t\t//   //@ts-ignore\n\t\t// window.contract = await new Contract(walletConnection.account(), receiver, {\n\t\t//   changeMethods: ['payToWallet'],\n\t\t//   viewMethods: []\n\t\t// })\n\t\t//     if (walletConnection.isSignedIn()) {\n\t\t//       const walletAccountId = walletConnection.getAccountId();\n\t\t//       setNearWalletKey(walletAccountId);\n\t\t//     } else {\n\t\t//       await walletConnection.requestSignIn(\n\t\t//         {\n\t\t//           contractId:process.env.REACT_APP_NEAR_CONTRACT,\n\t\t//           methodNames:['payToWallet']\n\t\t//       }\n\n\t\t//       );\n\t\t//     }\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tmessage.error(\"Use NEAR wallet. Close all windows and try again pls\", 5);\n\t}\n};\n\nexport default connectWalletNear;\n\n// NEAR CHECK FEES ALOWANCE\n//   const response = await near.connection.provider.query({\n//   request_type: \"view_access_key\",\n//   finality: \"final\",\n//   account_id: \"client.chainlink.testnet\",\n//   public_key: \"ed25519:H9k5eiU4xXS3M4z8HzKJSLaZdqGdGwBG49o7orNC4eZW\",\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}