{"ast":null,"code":"import CoinGecko from \"coingecko-api\";\nconst fetchMarkets = async (stu, ssu, sau, snu, sauruu, susn, sethu) => {\n  const CoinGeckoClient = new CoinGecko();\n  stu((await CoinGeckoClient.coins.fetch(\"the-open-network\", {})).data.market_data.current_price.usd);\n  ssu((await CoinGeckoClient.coins.fetch(\"solana\", {})).data.market_data.current_price.usd);\n  sau((await CoinGeckoClient.coins.fetch(\"cosmos\", {})).data.market_data.current_price.usd);\n  snu((await CoinGeckoClient.coins.fetch(\"near\", {})).data.market_data.current_price.usd);\n  sauruu((await CoinGeckoClient.coins.fetch(\"aurora-near\", {})).data.market_data.current_price.usd);\n  susn((await CoinGeckoClient.coins.fetch(\"usn\", {})).data.market_data.current_price.usd);\n  sethu((await CoinGeckoClient.coins.fetch(\"ethereum\", {})).data.market_data.current_price.usd);\n};\nexport default fetchMarkets;","map":{"version":3,"names":["CoinGecko","fetchMarkets","stu","ssu","sau","snu","sauruu","susn","sethu","CoinGeckoClient","coins","fetch","data","market_data","current_price","usd"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/fetch/fetchMarkets.ts"],"sourcesContent":["import CoinGecko from \"coingecko-api\";\n\nconst fetchMarkets = async (stu: any, ssu: any, sau: any, snu:any,sauruu:any, susn: any, sethu: any) => {\n\tconst CoinGeckoClient = new CoinGecko();\n\tstu((await CoinGeckoClient.coins.fetch(\"the-open-network\", {})).data\n\t.market_data.current_price.usd);\n\tssu((await CoinGeckoClient.coins.fetch(\"solana\", {})).data\n\t.market_data.current_price.usd);\n\tsau((await CoinGeckoClient.coins.fetch(\"cosmos\", {})).data\n\t.market_data.current_price.usd);\n\tsnu((await CoinGeckoClient.coins.fetch(\"near\", {})).data.market_data\n\t.current_price.usd);\n\tsauruu((await CoinGeckoClient.coins.fetch(\"aurora-near\", {})).data\n\t.market_data.current_price.usd)\n\tsusn((await CoinGeckoClient.coins.fetch(\"usn\", {})).data.market_data\n\t.current_price.usd)\n\tsethu((await CoinGeckoClient.coins.fetch(\"ethereum\", {})).data.market_data\n\t.current_price.usd)\n};\n\nexport default fetchMarkets;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,eAAe;AAErC,MAAMC,YAAY,GAAG,OAAOC,GAAQ,EAAEC,GAAQ,EAAEC,GAAQ,EAAEC,GAAO,EAACC,MAAU,EAAEC,IAAS,EAAEC,KAAU,KAAK;EACvG,MAAMC,eAAe,GAAG,IAAIT,SAAS,EAAE;EACvCE,GAAG,CAAC,CAAC,MAAMO,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CACnEC,WAAW,CAACC,aAAa,CAACC,GAAG,CAAC;EAC/BZ,GAAG,CAAC,CAAC,MAAMM,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CACzDC,WAAW,CAACC,aAAa,CAACC,GAAG,CAAC;EAC/BX,GAAG,CAAC,CAAC,MAAMK,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CACzDC,WAAW,CAACC,aAAa,CAACC,GAAG,CAAC;EAC/BV,GAAG,CAAC,CAAC,MAAMI,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CAACC,WAAW,CACnEC,aAAa,CAACC,GAAG,CAAC;EACnBT,MAAM,CAAC,CAAC,MAAMG,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CACjEC,WAAW,CAACC,aAAa,CAACC,GAAG,CAAC;EAC/BR,IAAI,CAAC,CAAC,MAAME,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CAACC,WAAW,CACnEC,aAAa,CAACC,GAAG,CAAC;EACnBP,KAAK,CAAC,CAAC,MAAMC,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAEC,IAAI,CAACC,WAAW,CACzEC,aAAa,CAACC,GAAG,CAAC;AACpB,CAAC;AAED,eAAed,YAAY"},"metadata":{},"sourceType":"module"}