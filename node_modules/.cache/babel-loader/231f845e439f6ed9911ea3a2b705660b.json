{"ast":null,"code":"import { message } from \"antd\";\nimport { utils, transactions } from 'near-api-js';\nimport TonWeb from \"tonweb\";\nconst axios = require(\"axios\").default;\nconst MakeNEARTrx = async (activeBtn, setIsload, NEARwalletKey, amount, walletTo, netTo, hexString, openData, add, params) => {\n  if (activeBtn) {\n    setIsload(true);\n    //@ts-ignore\n    await window.contract.account._signAndSendTransaction({\n      receiverId: process.env.REACT_APP_NEAR_CONTRACT,\n      actions: [transactions.functionCall('payToWallet', {\n        target: process.env.REACT_APP_BACK_NEAR_WALLET,\n        message: `${openData ? \"SM#\" : \"\"}${netTo}#${openData ? add : walletTo}${openData ? `#${btoa(params)}` : \"\"}`\n      }, new TonWeb.utils.BN(40000000000000), new TonWeb.utils.BN(utils.format.parseNearAmount(amount) + ''))],\n      walletCallbackUrl: 'https://app.tonana.org/?isnear=true'\n    });\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n_c = MakeNEARTrx;\nexport const makeNEARTrxAfterLoad = (transactionHashes, setSearchParams, searchParams) => {\n  if (transactionHashes) {\n    fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\" : \"https://api.tonana.org/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        hash: transactionHashes,\n        sourceChain: \"near\"\n      })\n    }).then(e => e.text()).then(e => {\n      if (e === \"Done!\") {\n        searchParams.delete(\"transactionHashes\");\n        searchParams.delete(\"isnear\");\n        setSearchParams(searchParams);\n      }\n    });\n  }\n};\nexport default MakeNEARTrx;\nvar _c;\n$RefreshReg$(_c, \"MakeNEARTrx\");","map":{"version":3,"names":["message","utils","transactions","TonWeb","axios","require","default","MakeNEARTrx","activeBtn","setIsload","NEARwalletKey","amount","walletTo","netTo","hexString","openData","add","params","window","contract","account","_signAndSendTransaction","receiverId","process","env","REACT_APP_NEAR_CONTRACT","actions","functionCall","target","REACT_APP_BACK_NEAR_WALLET","btoa","BN","format","parseNearAmount","walletCallbackUrl","error","makeNEARTrxAfterLoad","transactionHashes","setSearchParams","searchParams","fetch","REACT_APP_STATE","method","headers","body","JSON","stringify","hash","sourceChain","then","e","text","delete"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeNEARTrx.ts"],"sourcesContent":["import { message } from \"antd\";\nimport { connect,Contract, utils,transactions, keyStores, WalletConnection } from 'near-api-js';\nimport TonWeb from \"tonweb\";\nconst axios = require(\"axios\").default;\n\nconst MakeNEARTrx = async (activeBtn: any, setIsload: any, NEARwalletKey: string, amount: any, walletTo: any, netTo: string, hexString: any, openData: boolean, add: string, params: string) => {\n  if (activeBtn) {\n    setIsload(true);\n    //@ts-ignore\n    await window.contract.account._signAndSendTransaction({\n      receiverId: process.env.REACT_APP_NEAR_CONTRACT,\n      actions: [\n        transactions.functionCall(\n          'payToWallet',\n          {\n            target: process.env.REACT_APP_BACK_NEAR_WALLET,\n            message: `${openData ? \"SM#\" : \"\"}${netTo}#${openData? add : walletTo}${openData ? `#${btoa(params)}` : \"\"}`\n          },\n          new TonWeb.utils.BN(40000000000000),\n          new TonWeb.utils.BN(utils.format.parseNearAmount(amount)+'')\n        )\n      ],\n      walletCallbackUrl: 'https://app.tonana.org/?isnear=true'\n    })\n\n  } else {\n    message.error(\"Fill all forms and connect wallets!\", 10);\n  }\n};\n\nexport const makeNEARTrxAfterLoad = (transactionHashes: any, setSearchParams:any,searchParams: any) => {\n  if (transactionHashes) {\n    fetch(process.env.REACT_APP_STATE === \"dev\" ? \"http://localhost:8092\" : process.env.REACT_APP_STATE === \"dev-remote\" ? \"https://dev.api.tonana.org\"   : \"https://api.tonana.org/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        hash: transactionHashes,\n        sourceChain: \"near\",\n      }),\n    })\n      .then((e) => e.text())\n      .then((e) => {\n        if (e === \"Done!\") {\n          searchParams.delete(\"transactionHashes\");\n          searchParams.delete(\"isnear\");\n          setSearchParams(searchParams);\n        }\n      });\n    }\n  }\n\nexport default MakeNEARTrx"],"mappings":"AAAA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAA2BC,KAAK,EAACC,YAAY,QAAqC,aAAa;AAC/F,OAAOC,MAAM,MAAM,QAAQ;AAC3B,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO;AAEtC,MAAMC,WAAW,GAAG,OAAOC,SAAc,EAAEC,SAAc,EAAEC,aAAqB,EAAEC,MAAW,EAAEC,QAAa,EAAEC,KAAa,EAAEC,SAAc,EAAEC,QAAiB,EAAEC,GAAW,EAAEC,MAAc,KAAK;EAC9L,IAAIT,SAAS,EAAE;IACbC,SAAS,CAAC,IAAI,CAAC;IACf;IACA,MAAMS,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACC,uBAAuB,CAAC;MACpDC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,uBAAuB;MAC/CC,OAAO,EAAE,CACPxB,YAAY,CAACyB,YAAY,CACvB,aAAa,EACb;QACEC,MAAM,EAAEL,OAAO,CAACC,GAAG,CAACK,0BAA0B;QAC9C7B,OAAO,EAAG,GAAEe,QAAQ,GAAG,KAAK,GAAG,EAAG,GAAEF,KAAM,IAAGE,QAAQ,GAAEC,GAAG,GAAGJ,QAAS,GAAEG,QAAQ,GAAI,IAAGe,IAAI,CAACb,MAAM,CAAE,EAAC,GAAG,EAAG;MAC7G,CAAC,EACD,IAAId,MAAM,CAACF,KAAK,CAAC8B,EAAE,CAAC,cAAc,CAAC,EACnC,IAAI5B,MAAM,CAACF,KAAK,CAAC8B,EAAE,CAAC9B,KAAK,CAAC+B,MAAM,CAACC,eAAe,CAACtB,MAAM,CAAC,GAAC,EAAE,CAAC,CAC7D,CACF;MACDuB,iBAAiB,EAAE;IACrB,CAAC,CAAC;EAEJ,CAAC,MAAM;IACLlC,OAAO,CAACmC,KAAK,CAAC,qCAAqC,EAAE,EAAE,CAAC;EAC1D;AACF,CAAC;AAAC,KAvBI5B,WAAW;AAyBjB,OAAO,MAAM6B,oBAAoB,GAAG,CAACC,iBAAsB,EAAEC,eAAmB,EAACC,YAAiB,KAAK;EACrG,IAAIF,iBAAiB,EAAE;IACrBG,KAAK,CAACjB,OAAO,CAACC,GAAG,CAACiB,eAAe,KAAK,KAAK,GAAG,uBAAuB,GAAGlB,OAAO,CAACC,GAAG,CAACiB,eAAe,KAAK,YAAY,GAAG,4BAA4B,GAAK,yBAAyB,EAAE;MACjLC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEV,iBAAiB;QACvBW,WAAW,EAAE;MACf,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAAEC,CAAC,IAAK;MACX,IAAIA,CAAC,KAAK,OAAO,EAAE;QACjBX,YAAY,CAACa,MAAM,CAAC,mBAAmB,CAAC;QACxCb,YAAY,CAACa,MAAM,CAAC,QAAQ,CAAC;QAC7Bd,eAAe,CAACC,YAAY,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAEH,eAAehC,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}