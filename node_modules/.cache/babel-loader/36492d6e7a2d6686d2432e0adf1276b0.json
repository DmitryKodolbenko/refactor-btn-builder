{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nvar long_1 = __importDefault(require(\"long\"));\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nvar connection_1 = require(\"../../../../ibc/core/connection/v1/connection\");\nvar any_1 = require(\"../../../../google/protobuf/any\");\nvar client_1 = require(\"../../../../ibc/core/client/v1/client\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nvar baseMsgConnectionOpenInit = {\n  clientId: \"\",\n  delayPeriod: long_1.default.UZERO,\n  signer: \"\"\n};\nexports.MsgConnectionOpenInit = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenInit);\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgConnectionOpenInit);\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromJSON(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromString(object.delayPeriod) : long_1.default.UZERO;\n    message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b;\n    var message = Object.assign({}, baseMsgConnectionOpenInit);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.signer = (_b = object.signer) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nvar baseMsgConnectionOpenInitResponse = {};\nexports.MsgConnectionOpenInitResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenInitResponse);\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenInitResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenInitResponse);\n    return message;\n  }\n};\nvar baseMsgConnectionOpenTry = {\n  clientId: \"\",\n  previousConnectionId: \"\",\n  delayPeriod: long_1.default.UZERO,\n  signer: \"\"\n};\nexports.MsgConnectionOpenTry = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    var _iterator = _createForOfIteratorHelper(message.counterpartyVersions),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenTry);\n    message.counterpartyVersions = [];\n    message.proofInit = new Uint8Array();\n    message.proofClient = new Uint8Array();\n    message.proofConsensus = new Uint8Array();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var _a;\n    var message = Object.assign({}, baseMsgConnectionOpenTry);\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.previousConnectionId = object.previousConnectionId !== undefined && object.previousConnectionId !== null ? String(object.previousConnectionId) : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromJSON(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromString(object.delayPeriod) : long_1.default.UZERO;\n    message.counterpartyVersions = ((_a = object.counterpartyVersions) !== null && _a !== void 0 ? _a : []).map(function (e) {\n      return connection_1.Version.fromJSON(e);\n    });\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    message.proofInit = object.proofInit !== undefined && object.proofInit !== null ? bytesFromBase64(object.proofInit) : new Uint8Array();\n    message.proofClient = object.proofClient !== undefined && object.proofClient !== null ? bytesFromBase64(object.proofClient) : new Uint8Array();\n    message.proofConsensus = object.proofConsensus !== undefined && object.proofConsensus !== null ? bytesFromBase64(object.proofConsensus) : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromJSON(object.consensusHeight) : undefined;\n    message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    if (message.counterpartyVersions) {\n      obj.counterpartyVersions = message.counterpartyVersions.map(function (e) {\n        return e ? connection_1.Version.toJSON(e) : undefined;\n      });\n    } else {\n      obj.counterpartyVersions = [];\n    }\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofInit !== undefined && (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    var message = Object.assign({}, baseMsgConnectionOpenTry);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.previousConnectionId = (_b = object.previousConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.counterpartyVersions = ((_c = object.counterpartyVersions) === null || _c === void 0 ? void 0 : _c.map(function (e) {\n      return connection_1.Version.fromPartial(e);\n    })) || [];\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofInit = (_d = object.proofInit) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofClient = (_e = object.proofClient) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.proofConsensus = (_f = object.proofConsensus) !== null && _f !== void 0 ? _f : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_g = object.signer) !== null && _g !== void 0 ? _g : \"\";\n    return message;\n  }\n};\nvar baseMsgConnectionOpenTryResponse = {};\nexports.MsgConnectionOpenTryResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenTryResponse);\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenTryResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenTryResponse);\n    return message;\n  }\n};\nvar baseMsgConnectionOpenAck = {\n  connectionId: \"\",\n  counterpartyConnectionId: \"\",\n  signer: \"\"\n};\nexports.MsgConnectionOpenAck = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenAck);\n    message.proofTry = new Uint8Array();\n    message.proofClient = new Uint8Array();\n    message.proofConsensus = new Uint8Array();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgConnectionOpenAck);\n    message.connectionId = object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n    message.counterpartyConnectionId = object.counterpartyConnectionId !== undefined && object.counterpartyConnectionId !== null ? String(object.counterpartyConnectionId) : \"\";\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromJSON(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromJSON(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    message.proofTry = object.proofTry !== undefined && object.proofTry !== null ? bytesFromBase64(object.proofTry) : new Uint8Array();\n    message.proofClient = object.proofClient !== undefined && object.proofClient !== null ? bytesFromBase64(object.proofClient) : new Uint8Array();\n    message.proofConsensus = object.proofConsensus !== undefined && object.proofConsensus !== null ? bytesFromBase64(object.proofConsensus) : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromJSON(object.consensusHeight) : undefined;\n    message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.counterpartyConnectionId !== undefined && (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofTry !== undefined && (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    var message = Object.assign({}, baseMsgConnectionOpenAck);\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterpartyConnectionId = (_b = object.counterpartyConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofTry = (_c = object.proofTry) !== null && _c !== void 0 ? _c : new Uint8Array();\n    message.proofClient = (_d = object.proofClient) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofConsensus = (_e = object.proofConsensus) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_f = object.signer) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nvar baseMsgConnectionOpenAckResponse = {};\nexports.MsgConnectionOpenAckResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenAckResponse);\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenAckResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenAckResponse);\n    return message;\n  }\n};\nvar baseMsgConnectionOpenConfirm = {\n  connectionId: \"\",\n  signer: \"\"\n};\nexports.MsgConnectionOpenConfirm = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenConfirm);\n    message.proofAck = new Uint8Array();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgConnectionOpenConfirm);\n    message.connectionId = object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n    message.proofAck = object.proofAck !== undefined && object.proofAck !== null ? bytesFromBase64(object.proofAck) : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.proofAck !== undefined && (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var _a, _b, _c;\n    var message = Object.assign({}, baseMsgConnectionOpenConfirm);\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.proofAck = (_b = object.proofAck) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_c = object.signer) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nvar baseMsgConnectionOpenConfirmResponse = {};\nexports.MsgConnectionOpenConfirmResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgConnectionOpenConfirmResponse);\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenConfirmResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgConnectionOpenConfirmResponse);\n    return message;\n  }\n};\nvar MsgClientImpl = /*#__PURE__*/function () {\n  function MsgClientImpl(rpc) {\n    _classCallCheck(this, MsgClientImpl);\n    this.rpc = rpc;\n    this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n    this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n    this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n    this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n  }\n  _createClass(MsgClientImpl, [{\n    key: \"ConnectionOpenInit\",\n    value: function ConnectionOpenInit(request) {\n      var data = exports.MsgConnectionOpenInit.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n      return promise.then(function (data) {\n        return exports.MsgConnectionOpenInitResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ConnectionOpenTry\",\n    value: function ConnectionOpenTry(request) {\n      var data = exports.MsgConnectionOpenTry.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n      return promise.then(function (data) {\n        return exports.MsgConnectionOpenTryResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ConnectionOpenAck\",\n    value: function ConnectionOpenAck(request) {\n      var data = exports.MsgConnectionOpenAck.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n      return promise.then(function (data) {\n        return exports.MsgConnectionOpenAckResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ConnectionOpenConfirm\",\n    value: function ConnectionOpenConfirm(request) {\n      var data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n      var promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n      return promise.then(function (data) {\n        return exports.MsgConnectionOpenConfirmResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n  return MsgClientImpl;\n}();\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\nfunction base64FromBytes(arr) {\n  var bin = [];\n  var _iterator2 = _createForOfIteratorHelper(arr),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var byte = _step2.value;\n      bin.push(String.fromCharCode(byte));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../../src/ibc/core/connection/v1/tx.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst connection_1 = require(\"../../../../ibc/core/connection/v1/connection\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = { clientId: \"\", delayPeriod: long_1.default.UZERO, signer: \"\" };\nexports.MsgConnectionOpenInit = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (!message.delayPeriod.isZero()) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenInit);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = connection_1.Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgConnectionOpenInit);\n        message.clientId =\n            object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? connection_1.Counterparty.fromJSON(object.counterparty)\n                : undefined;\n        message.version =\n            object.version !== undefined && object.version !== null ? connection_1.Version.fromJSON(object.version) : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromString(object.delayPeriod)\n                : long_1.default.UZERO;\n        message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseMsgConnectionOpenInit);\n        message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? connection_1.Counterparty.fromPartial(object.counterparty)\n                : undefined;\n        message.version =\n            object.version !== undefined && object.version !== null\n                ? connection_1.Version.fromPartial(object.version)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromValue(object.delayPeriod)\n                : long_1.default.UZERO;\n        message.signer = (_b = object.signer) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexports.MsgConnectionOpenInitResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenInitResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenInitResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenInitResponse);\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: long_1.default.UZERO,\n    signer: \"\",\n};\nexports.MsgConnectionOpenTry = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (!message.delayPeriod.isZero()) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenTry);\n        message.counterpartyVersions = [];\n        message.proofInit = new Uint8Array();\n        message.proofClient = new Uint8Array();\n        message.proofConsensus = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = reader.uint64();\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseMsgConnectionOpenTry);\n        message.clientId =\n            object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n        message.previousConnectionId =\n            object.previousConnectionId !== undefined && object.previousConnectionId !== null\n                ? String(object.previousConnectionId)\n                : \"\";\n        message.clientState =\n            object.clientState !== undefined && object.clientState !== null\n                ? any_1.Any.fromJSON(object.clientState)\n                : undefined;\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? connection_1.Counterparty.fromJSON(object.counterparty)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromString(object.delayPeriod)\n                : long_1.default.UZERO;\n        message.counterpartyVersions = ((_a = object.counterpartyVersions) !== null && _a !== void 0 ? _a : []).map((e) => connection_1.Version.fromJSON(e));\n        message.proofHeight =\n            object.proofHeight !== undefined && object.proofHeight !== null\n                ? client_1.Height.fromJSON(object.proofHeight)\n                : undefined;\n        message.proofInit =\n            object.proofInit !== undefined && object.proofInit !== null\n                ? bytesFromBase64(object.proofInit)\n                : new Uint8Array();\n        message.proofClient =\n            object.proofClient !== undefined && object.proofClient !== null\n                ? bytesFromBase64(object.proofClient)\n                : new Uint8Array();\n        message.proofConsensus =\n            object.proofConsensus !== undefined && object.proofConsensus !== null\n                ? bytesFromBase64(object.proofConsensus)\n                : new Uint8Array();\n        message.consensusHeight =\n            object.consensusHeight !== undefined && object.consensusHeight !== null\n                ? client_1.Height.fromJSON(object.consensusHeight)\n                : undefined;\n        message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => (e ? connection_1.Version.toJSON(e) : undefined));\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const message = Object.assign({}, baseMsgConnectionOpenTry);\n        message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n        message.previousConnectionId = (_b = object.previousConnectionId) !== null && _b !== void 0 ? _b : \"\";\n        message.clientState =\n            object.clientState !== undefined && object.clientState !== null\n                ? any_1.Any.fromPartial(object.clientState)\n                : undefined;\n        message.counterparty =\n            object.counterparty !== undefined && object.counterparty !== null\n                ? connection_1.Counterparty.fromPartial(object.counterparty)\n                : undefined;\n        message.delayPeriod =\n            object.delayPeriod !== undefined && object.delayPeriod !== null\n                ? long_1.default.fromValue(object.delayPeriod)\n                : long_1.default.UZERO;\n        message.counterpartyVersions = ((_c = object.counterpartyVersions) === null || _c === void 0 ? void 0 : _c.map((e) => connection_1.Version.fromPartial(e))) || [];\n        message.proofHeight =\n            object.proofHeight !== undefined && object.proofHeight !== null\n                ? client_1.Height.fromPartial(object.proofHeight)\n                : undefined;\n        message.proofInit = (_d = object.proofInit) !== null && _d !== void 0 ? _d : new Uint8Array();\n        message.proofClient = (_e = object.proofClient) !== null && _e !== void 0 ? _e : new Uint8Array();\n        message.proofConsensus = (_f = object.proofConsensus) !== null && _f !== void 0 ? _f : new Uint8Array();\n        message.consensusHeight =\n            object.consensusHeight !== undefined && object.consensusHeight !== null\n                ? client_1.Height.fromPartial(object.consensusHeight)\n                : undefined;\n        message.signer = (_g = object.signer) !== null && _g !== void 0 ? _g : \"\";\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexports.MsgConnectionOpenTryResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenTryResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenTryResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenTryResponse);\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = { connectionId: \"\", counterpartyConnectionId: \"\", signer: \"\" };\nexports.MsgConnectionOpenAck = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenAck);\n        message.proofTry = new Uint8Array();\n        message.proofClient = new Uint8Array();\n        message.proofConsensus = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = connection_1.Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgConnectionOpenAck);\n        message.connectionId =\n            object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n        message.counterpartyConnectionId =\n            object.counterpartyConnectionId !== undefined && object.counterpartyConnectionId !== null\n                ? String(object.counterpartyConnectionId)\n                : \"\";\n        message.version =\n            object.version !== undefined && object.version !== null ? connection_1.Version.fromJSON(object.version) : undefined;\n        message.clientState =\n            object.clientState !== undefined && object.clientState !== null\n                ? any_1.Any.fromJSON(object.clientState)\n                : undefined;\n        message.proofHeight =\n            object.proofHeight !== undefined && object.proofHeight !== null\n                ? client_1.Height.fromJSON(object.proofHeight)\n                : undefined;\n        message.proofTry =\n            object.proofTry !== undefined && object.proofTry !== null\n                ? bytesFromBase64(object.proofTry)\n                : new Uint8Array();\n        message.proofClient =\n            object.proofClient !== undefined && object.proofClient !== null\n                ? bytesFromBase64(object.proofClient)\n                : new Uint8Array();\n        message.proofConsensus =\n            object.proofConsensus !== undefined && object.proofConsensus !== null\n                ? bytesFromBase64(object.proofConsensus)\n                : new Uint8Array();\n        message.consensusHeight =\n            object.consensusHeight !== undefined && object.consensusHeight !== null\n                ? client_1.Height.fromJSON(object.consensusHeight)\n                : undefined;\n        message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = Object.assign({}, baseMsgConnectionOpenAck);\n        message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n        message.counterpartyConnectionId = (_b = object.counterpartyConnectionId) !== null && _b !== void 0 ? _b : \"\";\n        message.version =\n            object.version !== undefined && object.version !== null\n                ? connection_1.Version.fromPartial(object.version)\n                : undefined;\n        message.clientState =\n            object.clientState !== undefined && object.clientState !== null\n                ? any_1.Any.fromPartial(object.clientState)\n                : undefined;\n        message.proofHeight =\n            object.proofHeight !== undefined && object.proofHeight !== null\n                ? client_1.Height.fromPartial(object.proofHeight)\n                : undefined;\n        message.proofTry = (_c = object.proofTry) !== null && _c !== void 0 ? _c : new Uint8Array();\n        message.proofClient = (_d = object.proofClient) !== null && _d !== void 0 ? _d : new Uint8Array();\n        message.proofConsensus = (_e = object.proofConsensus) !== null && _e !== void 0 ? _e : new Uint8Array();\n        message.consensusHeight =\n            object.consensusHeight !== undefined && object.consensusHeight !== null\n                ? client_1.Height.fromPartial(object.consensusHeight)\n                : undefined;\n        message.signer = (_f = object.signer) !== null && _f !== void 0 ? _f : \"\";\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexports.MsgConnectionOpenAckResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenAckResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenAckResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenAckResponse);\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexports.MsgConnectionOpenConfirm = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenConfirm);\n        message.proofAck = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgConnectionOpenConfirm);\n        message.connectionId =\n            object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n        message.proofAck =\n            object.proofAck !== undefined && object.proofAck !== null\n                ? bytesFromBase64(object.proofAck)\n                : new Uint8Array();\n        message.proofHeight =\n            object.proofHeight !== undefined && object.proofHeight !== null\n                ? client_1.Height.fromJSON(object.proofHeight)\n                : undefined;\n        message.signer = object.signer !== undefined && object.signer !== null ? String(object.signer) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseMsgConnectionOpenConfirm);\n        message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n        message.proofAck = (_b = object.proofAck) !== null && _b !== void 0 ? _b : new Uint8Array();\n        message.proofHeight =\n            object.proofHeight !== undefined && object.proofHeight !== null\n                ? client_1.Height.fromPartial(object.proofHeight)\n                : undefined;\n        message.signer = (_c = object.signer) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexports.MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgConnectionOpenConfirmResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenConfirmResponse);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseMsgConnectionOpenConfirmResponse);\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n        this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n        this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n        this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n    }\n    ConnectionOpenInit(request) {\n        const data = exports.MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => exports.MsgConnectionOpenInitResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = exports.MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => exports.MsgConnectionOpenTryResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = exports.MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => exports.MsgConnectionOpenAckResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => exports.MsgConnectionOpenConfirmResponse.decode(new minimal_1.default.Reader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=tx.js.map"]},"metadata":{},"sourceType":"script"}