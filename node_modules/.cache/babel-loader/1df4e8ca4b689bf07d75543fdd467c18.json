{"ast":null,"code":"/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { chainFirst } from './Chain';\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n  return function (onNone) {\n    return function (ma) {\n      return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value));\n    };\n  };\n}\nexport function fromPredicate(F) {\n  return function (predicate, onFalse) {\n    return function (a) {\n      return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    };\n  };\n}\nexport function fromOptionK(F) {\n  var fromOptionF = fromOption(F);\n  return function (onNone) {\n    var from = fromOptionF(onNone);\n    return function (f) {\n      return flow(f, from);\n    };\n  };\n}\nexport function chainOptionK(F, M) {\n  var fromOptionKF = fromOptionK(F);\n  return function (onNone) {\n    var from = fromOptionKF(onNone);\n    return function (f) {\n      return function (ma) {\n        return M.chain(ma, from(f));\n      };\n    };\n  };\n}\nexport function fromEitherK(F) {\n  return function (f) {\n    return flow(f, F.fromEither);\n  };\n}\nexport function chainEitherK(F, M) {\n  var fromEitherKF = fromEitherK(F);\n  return function (f) {\n    return function (ma) {\n      return M.chain(ma, fromEitherKF(f));\n    };\n  };\n}\nexport function chainFirstEitherK(F, M) {\n  return flow(fromEitherK(F), chainFirst(M));\n}\nexport function filterOrElse(F, M) {\n  return function (predicate, onFalse) {\n    return function (ma) {\n      return M.chain(ma, function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n      });\n    };\n  };\n}","map":{"version":3,"names":["chainFirst","flow","_","fromOption","F","onNone","ma","fromEither","isNone","left","right","value","fromPredicate","predicate","onFalse","a","fromOptionK","fromOptionF","from","f","chainOptionK","M","fromOptionKF","chain","fromEitherK","chainEitherK","fromEitherKF","chainFirstEitherK","filterOrElse"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/fp-ts/es6/FromEither.js"],"sourcesContent":["/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { chainFirst } from './Chain';\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexport function fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexport function fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return flow(f, from); };\n    };\n}\nexport function chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexport function fromEitherK(F) {\n    return function (f) { return flow(f, F.fromEither); };\n}\nexport function chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexport function chainFirstEitherK(F, M) {\n    return flow(fromEitherK(F), chainFirst(M));\n}\nexport function filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}