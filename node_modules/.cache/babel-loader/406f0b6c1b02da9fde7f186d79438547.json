{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupGovExtension = void 0;\nvar query_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/query\");\nvar queryclient_1 = require(\"../../queryclient\");\nfunction setupGovExtension(base) {\n  var rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  var queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    gov: {\n      params: function () {\n        var _params = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(parametersType) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return queryService.Params({\n                    paramsType: parametersType\n                  });\n                case 2:\n                  response = _context.sent;\n                  return _context.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        function params(_x) {\n          return _params.apply(this, arguments);\n        }\n        return params;\n      }(),\n      proposals: function () {\n        var _proposals = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(proposalStatus, depositorAddress, voterAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return queryService.Proposals({\n                    proposalStatus: proposalStatus,\n                    depositor: depositorAddress,\n                    voter: voterAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context2.sent;\n                  return _context2.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n        function proposals(_x2, _x3, _x4, _x5) {\n          return _proposals.apply(this, arguments);\n        }\n        return proposals;\n      }(),\n      proposal: function () {\n        var _proposal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(proposalId) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return queryService.Proposal({\n                    proposalId: (0, queryclient_1.longify)(proposalId)\n                  });\n                case 2:\n                  response = _context3.sent;\n                  return _context3.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n        function proposal(_x6) {\n          return _proposal.apply(this, arguments);\n        }\n        return proposal;\n      }(),\n      deposits: function () {\n        var _deposits = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(proposalId, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return queryService.Deposits({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context4.sent;\n                  return _context4.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n        function deposits(_x7, _x8) {\n          return _deposits.apply(this, arguments);\n        }\n        return deposits;\n      }(),\n      deposit: function () {\n        var _deposit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(proposalId, depositorAddress) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return queryService.Deposit({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    depositor: depositorAddress\n                  });\n                case 2:\n                  response = _context5.sent;\n                  return _context5.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n        function deposit(_x9, _x10) {\n          return _deposit.apply(this, arguments);\n        }\n        return deposit;\n      }(),\n      tally: function () {\n        var _tally = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(proposalId) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return queryService.TallyResult({\n                    proposalId: (0, queryclient_1.longify)(proposalId)\n                  });\n                case 2:\n                  response = _context6.sent;\n                  return _context6.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n        function tally(_x11) {\n          return _tally.apply(this, arguments);\n        }\n        return tally;\n      }(),\n      votes: function () {\n        var _votes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(proposalId, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return queryService.Votes({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context7.sent;\n                  return _context7.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n        function votes(_x12, _x13) {\n          return _votes.apply(this, arguments);\n        }\n        return votes;\n      }(),\n      vote: function () {\n        var _vote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(proposalId, voterAddress) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return queryService.Vote({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    voter: voterAddress\n                  });\n                case 2:\n                  response = _context8.sent;\n                  return _context8.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n        function vote(_x14, _x15) {\n          return _vote.apply(this, arguments);\n        }\n        return vote;\n      }()\n    }\n  };\n}\nexports.setupGovExtension = setupGovExtension;","map":{"version":3,"sources":["../../../src/modules/gov/queries.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupGovExtension = void 0;\nconst query_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/query\");\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupGovExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        gov: {\n            params: async (parametersType) => {\n                const response = await queryService.Params({ paramsType: parametersType });\n                return response;\n            },\n            proposals: async (proposalStatus, depositorAddress, voterAddress, paginationKey) => {\n                const response = await queryService.Proposals({\n                    proposalStatus,\n                    depositor: depositorAddress,\n                    voter: voterAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            proposal: async (proposalId) => {\n                const response = await queryService.Proposal({ proposalId: (0, queryclient_1.longify)(proposalId) });\n                return response;\n            },\n            deposits: async (proposalId, paginationKey) => {\n                const response = await queryService.Deposits({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            deposit: async (proposalId, depositorAddress) => {\n                const response = await queryService.Deposit({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    depositor: depositorAddress,\n                });\n                return response;\n            },\n            tally: async (proposalId) => {\n                const response = await queryService.TallyResult({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                });\n                return response;\n            },\n            votes: async (proposalId, paginationKey) => {\n                const response = await queryService.Votes({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            vote: async (proposalId, voterAddress) => {\n                const response = await queryService.Vote({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    voter: voterAddress,\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupGovExtension = setupGovExtension;\n//# sourceMappingURL=queries.js.map"]},"metadata":{},"sourceType":"script"}