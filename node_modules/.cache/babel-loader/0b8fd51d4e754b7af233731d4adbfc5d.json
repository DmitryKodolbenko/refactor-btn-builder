{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction exponentialBackoff(_x, _x2, _x3, _x4) {\n  return _exponentialBackoff.apply(this, arguments);\n}\nfunction _exponentialBackoff() {\n  _exponentialBackoff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(startWaitTime, retryNumber, waitBackoff, getResult) {\n    var waitTime, i, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // TODO: jitter?\n            waitTime = startWaitTime;\n            i = 0;\n          case 2:\n            if (!(i < retryNumber)) {\n              _context.next = 14;\n              break;\n            }\n            _context.next = 5;\n            return getResult();\n          case 5:\n            result = _context.sent;\n            if (!result) {\n              _context.next = 8;\n              break;\n            }\n            return _context.abrupt(\"return\", result);\n          case 8:\n            _context.next = 10;\n            return sleep(waitTime);\n          case 10:\n            waitTime *= waitBackoff;\n          case 11:\n            i++;\n            _context.next = 2;\n            break;\n          case 14:\n            return _context.abrupt(\"return\", null);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _exponentialBackoff.apply(this, arguments);\n}\nexports.default = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, millis);\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","exponentialBackoff","startWaitTime","retryNumber","waitBackoff","getResult","waitTime","i","result","sleep","default","millis","Promise","resolve","setTimeout"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/@nightlylabs/connect-near/node_modules/near-api-js/lib/utils/exponential-backoff.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nasync function exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    // TODO: jitter?\n    let waitTime = startWaitTime;\n    for (let i = 0; i < retryNumber; i++) {\n        const result = await getResult();\n        if (result) {\n            return result;\n        }\n        await sleep(waitTime);\n        waitTime *= waitBackoff;\n    }\n    return null;\n}\nexports.default = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAAC,SAC/CC,kBAAkB;EAAA;AAAA;AAAA;EAAA,iFAAjC,iBAAkCC,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS;IAAA;IAAA;MAAA;QAAA;UAAA;YAChF;YACIC,QAAQ,GAAGJ,aAAa;YACnBK,CAAC,GAAG,CAAC;UAAA;YAAA,MAAEA,CAAC,GAAGJ,WAAW;cAAA;cAAA;YAAA;YAAA;YAAA,OACNE,SAAS,EAAE;UAAA;YAA1BG,MAAM;YAAA,KACRA,MAAM;cAAA;cAAA;YAAA;YAAA,iCACCA,MAAM;UAAA;YAAA;YAAA,OAEXC,KAAK,CAACH,QAAQ,CAAC;UAAA;YACrBA,QAAQ,IAAIF,WAAW;UAAC;YANKG,CAAC,EAAE;YAAA;YAAA;UAAA;YAAA,iCAQ7B,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACd;EAAA;AAAA;AACDR,OAAO,CAACW,OAAO,GAAGT,kBAAkB;AACpC;AACA,SAASQ,KAAK,CAACE,MAAM,EAAE;EACnB,OAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO;IAAA,OAAIC,UAAU,CAACD,OAAO,EAAEF,MAAM,CAAC;EAAA,EAAC;AAC9D"},"metadata":{},"sourceType":"script"}