{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nexports.protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n  address: \"\",\n  startHeight: long_1.default.ZERO,\n  indexOffset: long_1.default.ZERO,\n  tombstoned: false,\n  missedBlocksCounter: long_1.default.ZERO\n};\nexports.ValidatorSigningInfo = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (!message.startHeight.isZero()) {\n      writer.uint32(16).int64(message.startHeight);\n    }\n    if (!message.indexOffset.isZero()) {\n      writer.uint32(24).int64(message.indexOffset);\n    }\n    if (message.jailedUntil !== undefined) {\n      timestamp_1.Timestamp.encode(message.jailedUntil, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.tombstoned === true) {\n      writer.uint32(40).bool(message.tombstoned);\n    }\n    if (!message.missedBlocksCounter.isZero()) {\n      writer.uint32(48).int64(message.missedBlocksCounter);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValidatorSigningInfo);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.startHeight = reader.int64();\n          break;\n        case 3:\n          message.indexOffset = reader.int64();\n          break;\n        case 4:\n          message.jailedUntil = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.tombstoned = reader.bool();\n          break;\n        case 6:\n          message.missedBlocksCounter = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseValidatorSigningInfo);\n    message.address = object.address !== undefined && object.address !== null ? String(object.address) : \"\";\n    message.startHeight = object.startHeight !== undefined && object.startHeight !== null ? long_1.default.fromString(object.startHeight) : long_1.default.ZERO;\n    message.indexOffset = object.indexOffset !== undefined && object.indexOffset !== null ? long_1.default.fromString(object.indexOffset) : long_1.default.ZERO;\n    message.jailedUntil = object.jailedUntil !== undefined && object.jailedUntil !== null ? fromJsonTimestamp(object.jailedUntil) : undefined;\n    message.tombstoned = object.tombstoned !== undefined && object.tombstoned !== null ? Boolean(object.tombstoned) : false;\n    message.missedBlocksCounter = object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null ? long_1.default.fromString(object.missedBlocksCounter) : long_1.default.ZERO;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.startHeight !== undefined && (obj.startHeight = (message.startHeight || long_1.default.ZERO).toString());\n    message.indexOffset !== undefined && (obj.indexOffset = (message.indexOffset || long_1.default.ZERO).toString());\n    message.jailedUntil !== undefined && (obj.jailedUntil = fromTimestamp(message.jailedUntil).toISOString());\n    message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n    message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = (message.missedBlocksCounter || long_1.default.ZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseValidatorSigningInfo);\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.startHeight = object.startHeight !== undefined && object.startHeight !== null ? long_1.default.fromValue(object.startHeight) : long_1.default.ZERO;\n    message.indexOffset = object.indexOffset !== undefined && object.indexOffset !== null ? long_1.default.fromValue(object.indexOffset) : long_1.default.ZERO;\n    message.jailedUntil = object.jailedUntil !== undefined && object.jailedUntil !== null ? timestamp_1.Timestamp.fromPartial(object.jailedUntil) : undefined;\n    message.tombstoned = (_b = object.tombstoned) !== null && _b !== void 0 ? _b : false;\n    message.missedBlocksCounter = object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null ? long_1.default.fromValue(object.missedBlocksCounter) : long_1.default.ZERO;\n    return message;\n  }\n};\nconst baseParams = {\n  signedBlocksWindow: long_1.default.ZERO\n};\nexports.Params = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.signedBlocksWindow.isZero()) {\n      writer.uint32(8).int64(message.signedBlocksWindow);\n    }\n    if (message.minSignedPerWindow.length !== 0) {\n      writer.uint32(18).bytes(message.minSignedPerWindow);\n    }\n    if (message.downtimeJailDuration !== undefined) {\n      duration_1.Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.slashFractionDoubleSign.length !== 0) {\n      writer.uint32(34).bytes(message.slashFractionDoubleSign);\n    }\n    if (message.slashFractionDowntime.length !== 0) {\n      writer.uint32(42).bytes(message.slashFractionDowntime);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseParams);\n    message.minSignedPerWindow = new Uint8Array();\n    message.slashFractionDoubleSign = new Uint8Array();\n    message.slashFractionDowntime = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signedBlocksWindow = reader.int64();\n          break;\n        case 2:\n          message.minSignedPerWindow = reader.bytes();\n          break;\n        case 3:\n          message.downtimeJailDuration = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.slashFractionDoubleSign = reader.bytes();\n          break;\n        case 5:\n          message.slashFractionDowntime = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseParams);\n    message.signedBlocksWindow = object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null ? long_1.default.fromString(object.signedBlocksWindow) : long_1.default.ZERO;\n    message.minSignedPerWindow = object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null ? bytesFromBase64(object.minSignedPerWindow) : new Uint8Array();\n    message.downtimeJailDuration = object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null ? duration_1.Duration.fromJSON(object.downtimeJailDuration) : undefined;\n    message.slashFractionDoubleSign = object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null ? bytesFromBase64(object.slashFractionDoubleSign) : new Uint8Array();\n    message.slashFractionDowntime = object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null ? bytesFromBase64(object.slashFractionDowntime) : new Uint8Array();\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = (message.signedBlocksWindow || long_1.default.ZERO).toString());\n    message.minSignedPerWindow !== undefined && (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n    message.downtimeJailDuration !== undefined && (obj.downtimeJailDuration = message.downtimeJailDuration ? duration_1.Duration.toJSON(message.downtimeJailDuration) : undefined);\n    message.slashFractionDoubleSign !== undefined && (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n    message.slashFractionDowntime !== undefined && (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = Object.assign({}, baseParams);\n    message.signedBlocksWindow = object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null ? long_1.default.fromValue(object.signedBlocksWindow) : long_1.default.ZERO;\n    message.minSignedPerWindow = (_a = object.minSignedPerWindow) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.downtimeJailDuration = object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null ? duration_1.Duration.fromPartial(object.downtimeJailDuration) : undefined;\n    message.slashFractionDoubleSign = (_b = object.slashFractionDoubleSign) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.slashFractionDowntime = (_c = object.slashFractionDowntime) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n  const seconds = numberToLong(date.getTime() / 1000);\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\nfunction fromTimestamp(t) {\n  let millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === \"string\") {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/cosmos/slashing/v1beta1/slashing.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = exports.ValidatorSigningInfo = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nexports.protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: long_1.default.ZERO,\n    indexOffset: long_1.default.ZERO,\n    tombstoned: false,\n    missedBlocksCounter: long_1.default.ZERO,\n};\nexports.ValidatorSigningInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (!message.startHeight.isZero()) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (!message.indexOffset.isZero()) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            timestamp_1.Timestamp.encode(message.jailedUntil, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (!message.missedBlocksCounter.isZero()) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidatorSigningInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = reader.int64();\n                    break;\n                case 3:\n                    message.indexOffset = reader.int64();\n                    break;\n                case 4:\n                    message.jailedUntil = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidatorSigningInfo);\n        message.address = object.address !== undefined && object.address !== null ? String(object.address) : \"\";\n        message.startHeight =\n            object.startHeight !== undefined && object.startHeight !== null\n                ? long_1.default.fromString(object.startHeight)\n                : long_1.default.ZERO;\n        message.indexOffset =\n            object.indexOffset !== undefined && object.indexOffset !== null\n                ? long_1.default.fromString(object.indexOffset)\n                : long_1.default.ZERO;\n        message.jailedUntil =\n            object.jailedUntil !== undefined && object.jailedUntil !== null\n                ? fromJsonTimestamp(object.jailedUntil)\n                : undefined;\n        message.tombstoned =\n            object.tombstoned !== undefined && object.tombstoned !== null ? Boolean(object.tombstoned) : false;\n        message.missedBlocksCounter =\n            object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null\n                ? long_1.default.fromString(object.missedBlocksCounter)\n                : long_1.default.ZERO;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = (message.startHeight || long_1.default.ZERO).toString());\n        message.indexOffset !== undefined && (obj.indexOffset = (message.indexOffset || long_1.default.ZERO).toString());\n        message.jailedUntil !== undefined && (obj.jailedUntil = fromTimestamp(message.jailedUntil).toISOString());\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = (message.missedBlocksCounter || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseValidatorSigningInfo);\n        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n        message.startHeight =\n            object.startHeight !== undefined && object.startHeight !== null\n                ? long_1.default.fromValue(object.startHeight)\n                : long_1.default.ZERO;\n        message.indexOffset =\n            object.indexOffset !== undefined && object.indexOffset !== null\n                ? long_1.default.fromValue(object.indexOffset)\n                : long_1.default.ZERO;\n        message.jailedUntil =\n            object.jailedUntil !== undefined && object.jailedUntil !== null\n                ? timestamp_1.Timestamp.fromPartial(object.jailedUntil)\n                : undefined;\n        message.tombstoned = (_b = object.tombstoned) !== null && _b !== void 0 ? _b : false;\n        message.missedBlocksCounter =\n            object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null\n                ? long_1.default.fromValue(object.missedBlocksCounter)\n                : long_1.default.ZERO;\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: long_1.default.ZERO };\nexports.Params = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.signedBlocksWindow.isZero()) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            duration_1.Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseParams);\n        message.minSignedPerWindow = new Uint8Array();\n        message.slashFractionDoubleSign = new Uint8Array();\n        message.slashFractionDowntime = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = reader.int64();\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseParams);\n        message.signedBlocksWindow =\n            object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null\n                ? long_1.default.fromString(object.signedBlocksWindow)\n                : long_1.default.ZERO;\n        message.minSignedPerWindow =\n            object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null\n                ? bytesFromBase64(object.minSignedPerWindow)\n                : new Uint8Array();\n        message.downtimeJailDuration =\n            object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null\n                ? duration_1.Duration.fromJSON(object.downtimeJailDuration)\n                : undefined;\n        message.slashFractionDoubleSign =\n            object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null\n                ? bytesFromBase64(object.slashFractionDoubleSign)\n                : new Uint8Array();\n        message.slashFractionDowntime =\n            object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null\n                ? bytesFromBase64(object.slashFractionDowntime)\n                : new Uint8Array();\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = (message.signedBlocksWindow || long_1.default.ZERO).toString());\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? duration_1.Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseParams);\n        message.signedBlocksWindow =\n            object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null\n                ? long_1.default.fromValue(object.signedBlocksWindow)\n                : long_1.default.ZERO;\n        message.minSignedPerWindow = (_a = object.minSignedPerWindow) !== null && _a !== void 0 ? _a : new Uint8Array();\n        message.downtimeJailDuration =\n            object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null\n                ? duration_1.Duration.fromPartial(object.downtimeJailDuration)\n                : undefined;\n        message.slashFractionDoubleSign = (_b = object.slashFractionDoubleSign) !== null && _b !== void 0 ? _b : new Uint8Array();\n        message.slashFractionDowntime = (_c = object.slashFractionDowntime) !== null && _c !== void 0 ? _c : new Uint8Array();\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds.toNumber() * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return toTimestamp(o);\n    }\n    else if (typeof o === \"string\") {\n        return toTimestamp(new Date(o));\n    }\n    else {\n        return timestamp_1.Timestamp.fromJSON(o);\n    }\n}\nfunction numberToLong(number) {\n    return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=slashing.js.map"]},"metadata":{},"sourceType":"script"}