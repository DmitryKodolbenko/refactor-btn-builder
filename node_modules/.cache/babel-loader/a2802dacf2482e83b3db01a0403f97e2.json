{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport * as N from './number';\nimport { fromCompare } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isEmpty = function (as) {\n  return as.length === 0;\n};\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @since 2.11.0\n */\nexport var prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @since 2.11.0\n */\nexport var appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var makeBy = function (n, f) {\n  return n <= 0 ? empty : RNEA.makeBy(f)(n);\n};\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var replicate = function (n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n};\nexport function fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? [a] : empty;\n  };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.11.0\n */\nexport var fromOption = function (ma) {\n  return _.isNone(ma) ? empty : [ma.value];\n};\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromEither = function (e) {\n  return _.isLeft(e) ? empty : [e.right];\n};\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n  };\n};\n/**\n * @category pattern matching\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n  };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n  };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category sequencing\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n  return function (as) {\n    if (isEmpty(as)) {\n      return empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n  };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.5.0\n */\nexport var scanLeft = function (b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n  };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.5.0\n */\nexport var scanRight = function (b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n  };\n};\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nexport var size = function (as) {\n  return as.length;\n};\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport var isOutOfBound = RNEA.isOutOfBound;\nexport function lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport var head = function (as) {\n  return isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none;\n};\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport var last = function (as) {\n  return isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none;\n};\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport var tail = function (as) {\n  return isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport var init = function (as) {\n  return isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeLeft = function (n) {\n  return function (as) {\n    return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(0, n);\n  };\n};\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeRight = function (n) {\n  return function (as) {\n    return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(-n);\n  };\n};\nexport function takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      if (!predicate(a)) {\n        break;\n      }\n      out.push(a);\n    }\n    var len = out.length;\n    return len === as.length ? as : len === 0 ? empty : out;\n  };\n}\nvar spanLeftIndex = function (as, predicate) {\n  var l = as.length;\n  var i = 0;\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n  return i;\n};\nexport function spanLeft(predicate) {\n  return function (as) {\n    var _a = splitAt(spanLeftIndex(as, predicate))(as),\n      init = _a[0],\n      rest = _a[1];\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropLeft = function (n) {\n  return function (as) {\n    return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(n, as.length);\n  };\n};\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropRight = function (n) {\n  return function (as) {\n    return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(0, as.length - n);\n  };\n};\nexport function dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanLeftIndex(as, predicate);\n    return i === 0 ? as : i === as.length ? empty : as.slice(i);\n  };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport var findIndex = function (predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return _.some(i);\n      }\n    }\n    return _.none;\n  };\n};\nexport function findFirst(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return _.some(as[i]);\n      }\n    }\n    return _.none;\n  };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport var findFirstMap = function (f) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      var out = f(as[i]);\n      if (_.isSome(out)) {\n        return out;\n      }\n    }\n    return _.none;\n  };\n};\nexport function findLast(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return _.some(as[i]);\n      }\n    }\n    return _.none;\n  };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport var findLastMap = function (f) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      var out = f(as[i]);\n      if (_.isSome(out)) {\n        return out;\n      }\n    }\n    return _.none;\n  };\n};\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport var findLastIndex = function (predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return _.some(i);\n      }\n    }\n    return _.none;\n  };\n};\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport var insertAt = function (i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport var deleteAt = function (i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n  };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.5.0\n */\nexport var reverse = function (as) {\n  return as.length <= 1 ? as : as.slice().reverse();\n};\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var rights = function (as) {\n  var r = [];\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n  return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport var lefts = function (as) {\n  var r = [];\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n  return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var sort = function (O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.5.0\n */\nexport var zipWith = function (fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n  return fc;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport var unzip = function (as) {\n  var fa = [];\n  var fb = [];\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n  return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n  var f = RNEA.prependAll(middle);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n  var f = RNEA.intersperse(middle);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var rotate = function (n) {\n  var f = RNEA.rotate(n);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\nexport function elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n    var predicate = function (element) {\n      return E.equals(element, a);\n    };\n    var i = 0;\n    for (; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var uniq = function (E) {\n  var f = RNEA.uniq(E);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.5.0\n */\nexport var sortBy = function (ords) {\n  var f = RNEA.sortBy(ords);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.5.0\n */\nexport var chop = function (f) {\n  var g = RNEA.chop(f);\n  return function (as) {\n    return isNonEmpty(as) ? g(as) : empty;\n  };\n};\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport var splitAt = function (n) {\n  return function (as) {\n    return n >= 1 && isNonEmpty(as) ? RNEA.splitAt(n)(as) : isEmpty(as) ? [as, empty] : [empty, as];\n  };\n};\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.5.0\n */\nexport var chunksOf = function (n) {\n  var f = RNEA.chunksOf(n);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : empty;\n  };\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) {\n  return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n    return fromOption(f.apply(void 0, a));\n  };\n};\nexport function comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function () {\n      return true;\n    };\n  }\n  var go = function (scope, input) {\n    return isNonEmpty(input) ? pipe(RNEA.head(input), chain(function (x) {\n      return go(pipe(scope, append(x)), RNEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n  };\n  return go(empty, input);\n}\n/**\n * @since 2.11.0\n */\nexport var concatW = function (second) {\n  return function (first) {\n    return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n  };\n};\n/**\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n  var unionE = RNEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (second) {\n        return unionE_1(second, first);\n      };\n    }\n    return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? first : second;\n  };\n}\nexport function intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\nexport function difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\nvar _map = function (fa, f) {\n  return pipe(fa, map(f));\n};\nvar _mapWithIndex = function (fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\nvar _ap = function (fab, fa) {\n  return pipe(fab, ap(fa));\n};\nvar _chain = function (ma, f) {\n  return pipe(ma, chain(f));\n};\nvar _filter = function (fa, predicate) {\n  return pipe(fa, filter(predicate));\n};\nvar _filterMap = function (fa, f) {\n  return pipe(fa, filterMap(f));\n};\nvar _partition = function (fa, predicate) {\n  return pipe(fa, partition(predicate));\n};\nvar _partitionMap = function (fa, f) {\n  return pipe(fa, partitionMap(f));\n};\nvar _partitionWithIndex = function (fa, predicateWithIndex) {\n  return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\nvar _partitionMapWithIndex = function (fa, f) {\n  return pipe(fa, partitionMapWithIndex(f));\n};\nvar _alt = function (fa, that) {\n  return pipe(fa, alt(that));\n};\nvar _reduce = function (fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\nvar _foldMap = function (M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\nvar _reduceRight = function (fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\nvar _reduceWithIndex = function (fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) {\n  return pipe(fa, filterMapWithIndex(f));\n};\nvar _filterWithIndex = function (fa, predicateWithIndex) {\n  return pipe(fa, filterWithIndex(predicateWithIndex));\n};\nvar _extend = function (fa, f) {\n  return pipe(fa, extend(f));\n};\nvar _traverse = function (F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n/** @internal */\nexport var _chainRecDepthFirst = function (a, f) {\n  return pipe(a, chainRecDepthFirst(f));\n};\n/** @internal */\nexport var _chainRecBreadthFirst = function (a, f) {\n  return pipe(a, chainRecBreadthFirst(f));\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = RNEA.of;\n/**\n * @since 2.7.0\n */\nexport var zero = function () {\n  return empty;\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n  return chain(function (f) {\n    return pipe(fa, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) {\n  return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n  var left = [];\n  var right = [];\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return separated(left, right);\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n  return function (as) {\n    return as.filter(predicate);\n  };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) {\n  return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n      if (_.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n    return out;\n  };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n  return filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var compact = /*#__PURE__*/filterMap(identity);\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n  return partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n  return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n      var a = as[i];\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n    return separated(left, right);\n  };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n  return partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n    return separated(left, right);\n  };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n  return function (as) {\n    return as.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n  return function (f) {\n    return function (fa) {\n      return fa.reduce(function (b, a, i) {\n        return M.concat(b, f(i, a));\n      }, M.empty);\n    };\n  };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n  return reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) {\n  return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n      out = f(i, out, fa[i]);\n    }\n    return out;\n  };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n  return reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n  return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return pipe(as, append(a));\n        };\n      }), fa);\n    });\n  };\n};\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n  return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return pipe(bs, append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n  var _witherF = _wither(F);\n  return function (f) {\n    return function (fa) {\n      return _witherF(fa, f);\n    };\n  };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n  var _wiltF = _wilt(F);\n  return function (f) {\n    return function (fa) {\n      return _wiltF(fa, f);\n    };\n  };\n};\n/**\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n  var out = [];\n  var bb = b;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    var mt = f(bb);\n    if (_.isSome(mt)) {\n      var _a = mt.value,\n        a = _a[0],\n        b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n  return out;\n};\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) {\n  return {\n    show: function (as) {\n      return \"[\".concat(as.map(S.show).join(', '), \"]\");\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () {\n  return {\n    concat: function (first, second) {\n      return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n    }\n  };\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getMonoid = function () {\n  return {\n    concat: getSemigroup().concat,\n    empty: empty\n  };\n};\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n  return fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getOrd = function (O) {\n  return fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n    return N.Ord.compare(aLen, bLen);\n  });\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n  var unionE = union(E);\n  return {\n    concat: function (first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) {\n  return {\n    concat: getUnionSemigroup(E).concat,\n    empty: empty\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n  var intersectionE = intersection(E);\n  return {\n    concat: function (first, second) {\n      return intersectionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n  var differenceE = difference(E);\n  return {\n    concat: function (first, second) {\n      return differenceE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n  URI: URI,\n  unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n  URI: URI,\n  zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  alt: _alt,\n  zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n  URI: URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n  URI: URI,\n  compact: compact,\n  separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n  URI: URI,\n  map: _map,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = function (f) {\n  return function (a) {\n    var todo = __spreadArray([], f(a), true);\n    var out = [];\n    while (todo.length > 0) {\n      var e = todo.shift();\n      if (_.isLeft(e)) {\n        todo.unshift.apply(todo, f(e.left));\n      } else {\n        out.push(e.right);\n      }\n    }\n    return out;\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = function (f) {\n  return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n    function go(e) {\n      if (_.isLeft(e)) {\n        f(e.left).forEach(function (v) {\n          return todo.push(v);\n        });\n      } else {\n        out.push(e.right);\n      }\n    }\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n      var e = initial_1[_i];\n      go(e);\n    }\n    while (todo.length > 0) {\n      go(todo.shift());\n    }\n    return out;\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecBreadthFirst\n};\nvar _wither = /*#__PURE__*/witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n  URI: URI,\n  map: _map,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexport var filterE = /*#__PURE__*/filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n  URI: URI,\n  fromEither: fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/fromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n  return isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n};\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var toArray = function (as) {\n  return as.slice();\n};\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) {\n  return isEmpty(as) ? empty : as.slice();\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = RNEA.empty;\nexport function every(predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n}\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (M) {\n  var intercalateM = RNEA.intercalate(M);\n  return function (middle) {\n    return match(function () {\n      return M.empty;\n    }, intercalateM(middle));\n  };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\nvar let_ = /*#__PURE__*/let__(Functor);\nexport {\n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/apS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RA.Functor` instead of `RA.readonlyArray`\n * (where `RA` is from `import RA from 'fp-ts/ReadonlyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyArray = {\n  URI: URI,\n  compact: compact,\n  separate: separate,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: zero,\n  unfold: unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","apFirst","apFirst_","apS","apS_","apSecond","apSecond_","bind","bind_","chainFirst","chainFirst_","fromEquals","fromEitherK","fromEitherK_","identity","pipe","bindTo","bindTo_","flap","flap_","let","let__","_","N","fromCompare","RNEA","separated","filterE","filterE_","wiltDefault","witherDefault","guard","guard_","isEmpty","as","isNonEmpty","prepend","prependW","append","appendW","makeBy","n","f","empty","replicate","a","fromPredicate","predicate","fromOption","ma","isNone","value","fromEither","e","isLeft","right","matchW","onEmpty","onNonEmpty","match","matchLeftW","head","tail","matchLeft","foldLeft","matchRightW","init","last","matchRight","foldRight","chainWithIndex","out","push","apply","scanLeft","b","len","scanRight","size","isOutOfBound","lookup","undefined","none","some","takeLeft","takeRight","takeLeftWhile","_i","as_1","spanLeftIndex","spanLeft","_a","splitAt","rest","dropLeft","dropRight","dropLeftWhile","findIndex","findFirst","findFirstMap","isSome","findLast","findLastMap","findLastIndex","insertAt","unsafeInsertAt","updateAt","modifyAt","deleteAt","unsafeDeleteAt","unsafeUpdateAt","reverse","rights","r","_tag","lefts","left","sort","O","compare","zipWith","fa","fb","fc","Math","min","zip","bs","unzip","prependAll","middle","intersperse","rotate","elem","E","elemE_1","element","equals","uniq","sortBy","ords","chop","g","chunksOf","fromOptionK","comprehension","input","go","scope","chain","x","concatW","second","first","union","unionE","unionE_1","intersection","elemE","xs","ys","intersectionE_1","filter","difference","differenceE_1","_map","map","_mapWithIndex","mapWithIndex","_ap","fab","ap","_chain","_filter","_filterMap","filterMap","_partition","partition","_partitionMap","partitionMap","_partitionWithIndex","predicateWithIndex","partitionWithIndex","_partitionMapWithIndex","partitionMapWithIndex","_alt","that","alt","_reduce","reduce","_foldMap","M","foldMapM","foldMap","_reduceRight","reduceRight","_reduceWithIndex","reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","foldMapWithIndex","_reduceRightWithIndex","reduceRightWithIndex","_filterMapWithIndex","filterMapWithIndex","_filterWithIndex","filterWithIndex","_extend","extend","_traverse","F","traverseF","traverse","ta","_traverseWithIndex","traverseWithIndexF","traverseWithIndex","_chainRecDepthFirst","chainRecDepthFirst","_chainRecBreadthFirst","chainRecBreadthFirst","of","zero","altW","flatten","separate","fa_1","optionB","compact","wa","duplicate","sequence","fas","fbs","wither","_witherF","_wither","wilt","_wiltF","_wilt","unfold","bb","mt","b_1","URI","getShow","S","show","join","getSemigroup","getMonoid","getEq","every","getOrd","aLen","bLen","ordering","Ord","getUnionSemigroup","getUnionMonoid","getIntersectionSemigroup","intersectionE","getDifferenceMagma","differenceE","Functor","Pointed","FunctorWithIndex","Apply","Applicative","Chain","Monad","Unfoldable","Alt","Zero","Alternative","Extend","Compactable","Filterable","FilterableWithIndex","Foldable","FoldableWithIndex","Traversable","TraversableWithIndex","todo","shift","unshift","ChainRecDepthFirst","chainRec","initial","forEach","v","initial_1","ChainRecBreadthFirst","Witherable","FromEither","splice","toArray","fromArray","exists","intercalate","intercalateM","Do","emptyRecord","let_","range","cons","snoc","prependToAll","readonlyArray"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/fp-ts/es6/ReadonlyArray.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport * as N from './number';\nimport { fromCompare } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @since 2.11.0\n */\nexport var prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @since 2.11.0\n */\nexport var appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? empty : RNEA.makeBy(f)(n)); };\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : empty); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? empty : [ma.value]); };\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? empty : [e.right]); };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\n/**\n * @category pattern matching\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n    };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n    };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category sequencing\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        if (isEmpty(as)) {\n            return empty;\n        }\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.5.0\n */\nexport var scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.5.0\n */\nexport var scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport var isOutOfBound = RNEA.isOutOfBound;\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport var head = function (as) { return (isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport var last = function (as) { return (isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport var tail = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport var init = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeLeft = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(0, n);\n    };\n};\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeRight = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(-n);\n    };\n};\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? empty : out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(n, as.length);\n    };\n};\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(0, as.length - n);\n    };\n};\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? empty : as.slice(i);\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport var findIndex = function (predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexport function findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport var findFirstMap = function (f) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexport function findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport var findLastMap = function (f) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport var findLastIndex = function (predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport var deleteAt = function (i) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n    };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.5.0\n */\nexport var reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? as : as.slice().sort(O.compare);\n    };\n};\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.5.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.5.0\n */\nexport var sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.5.0\n */\nexport var chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : empty); };\n};\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && isNonEmpty(as) ? RNEA.splitAt(n)(as) : isEmpty(as) ? [as, empty] : [empty, as];\n    };\n};\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.5.0\n */\nexport var chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : empty); };\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromOption(f.apply(void 0, a));\n    };\n};\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(RNEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : empty;\n    };\n    return go(empty, input);\n}\n/**\n * @since 2.11.0\n */\nexport var concatW = function (second) {\n    return function (first) {\n        return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? first : second;\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _filter = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nexport var _chainRecDepthFirst = function (a, f) { return pipe(a, chainRecDepthFirst(f)); };\n/** @internal */\nexport var _chainRecBreadthFirst = function (a, f) { return pipe(a, chainRecBreadthFirst(f)); };\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = RNEA.of;\n/**\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var compact = /*#__PURE__*/ filterMap(identity);\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var a = as[i];\n            if (predicateWithIndex(i, a)) {\n                right.push(a);\n            }\n            else {\n                left.push(a);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    return function (f) {\n        return function (fa) {\n            return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) {\n    return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n}; };\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of(zero()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n        });\n    };\n};\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n        });\n    };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return (isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second)); }\n}); };\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getOrd = function (O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = function (f) {\n    return function (a) {\n        var todo = __spreadArray([], f(a), true);\n        var out = [];\n        while (todo.length > 0) {\n            var e = todo.shift();\n            if (_.isLeft(e)) {\n                todo.unshift.apply(todo, f(e.left));\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        return out;\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = function (f) {\n    return function (a) {\n        var initial = f(a);\n        var todo = [];\n        var out = [];\n        function go(e) {\n            if (_.isLeft(e)) {\n                f(e.left).forEach(function (v) { return todo.push(v); });\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n            var e = initial_1[_i];\n            go(e);\n        }\n        while (todo.length > 0) {\n            go(todo.shift());\n        }\n        return out;\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexport var filterE = /*#__PURE__*/ filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var toArray = function (as) { return as.slice(); };\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return (isEmpty(as) ? empty : as.slice()); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = RNEA.empty;\nexport function every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return match(function () { return M.empty; }, intercalateM(middle)); };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RA.Functor` instead of `RA.readonlyArray`\n * (where `RA` is from `import RA from 'fp-ts/ReadonlyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}