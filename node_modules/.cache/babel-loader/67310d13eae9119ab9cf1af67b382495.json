{"ast":null,"code":"var _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../utils\"),\n  BN = _require.BN,\n  base64ToBytes = _require.base64ToBytes;\nvar _require2 = require(\"../boc\"),\n  Cell = _require2.Cell;\nvar HttpProviderUtils = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function HttpProviderUtils() {\n    _classCallCheck(this, HttpProviderUtils);\n  }\n  _createClass(HttpProviderUtils, null, [{\n    key: \"parseObject\",\n    value: function parseObject(x) {\n      var typeName = x['@type'];\n      switch (typeName) {\n        case 'tvm.list':\n        case 'tvm.tuple':\n          return x.elements.map(HttpProviderUtils.parseObject);\n        case 'tvm.stackEntryTuple':\n          return HttpProviderUtils.parseObject(x.tuple);\n        case 'tvm.stackEntryNumber':\n          return HttpProviderUtils.parseObject(x.number);\n        case 'tvm.numberDecimal':\n          return new BN(x.number, 10);\n        default:\n          throw new Error('unknown type ' + typeName);\n      }\n    }\n\n    /**\n     * @param pair  {any[]}\n     * @return {any}\n     */\n  }, {\n    key: \"parseResponseStack\",\n    value: function parseResponseStack(pair) {\n      var typeName = pair[0];\n      var value = pair[1];\n      switch (typeName) {\n        case 'num':\n          return new BN(value.replace(/0x/, ''), 16);\n        case 'list':\n        case 'tuple':\n          return HttpProviderUtils.parseObject(value);\n        case 'cell':\n          var contentBytes = base64ToBytes(value.bytes);\n          return Cell.oneFromBoc(contentBytes);\n        default:\n          throw new Error('unknown type ' + typeName);\n      }\n    }\n  }, {\n    key: \"parseResponse\",\n    value: function parseResponse(result) {\n      if (result.exit_code !== 0) throw new Error(result);\n      var arr = result.stack.map(HttpProviderUtils.parseResponseStack);\n      return arr.length === 1 ? arr[0] : arr;\n    }\n  }, {\n    key: \"makeArg\",\n    value: function makeArg(arg) {\n      if (arg instanceof BN || arg instanceof Number) {\n        return ['num', arg];\n      } else {\n        throw new Error('unknown arg type ' + arg);\n      }\n    }\n  }, {\n    key: \"makeArgs\",\n    value: function makeArgs(args) {\n      return args.map(this.makeArg);\n    }\n  }]);\n  return HttpProviderUtils;\n}();\nmodule.exports.default = HttpProviderUtils;","map":{"version":3,"names":["require","BN","base64ToBytes","Cell","HttpProviderUtils","x","typeName","elements","map","parseObject","tuple","number","Error","pair","value","replace","contentBytes","bytes","oneFromBoc","result","exit_code","arr","stack","parseResponseStack","length","arg","Number","args","makeArg","module","exports","default"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/providers/HttpProviderUtils.js"],"sourcesContent":["const {BN, base64ToBytes} = require(\"../utils\");\nconst {Cell} = require(\"../boc\");\n\nclass HttpProviderUtils {\n\n    static parseObject(x) {\n        const typeName = x['@type'];\n        switch (typeName) {\n            case 'tvm.list':\n            case 'tvm.tuple':\n                return x.elements.map(HttpProviderUtils.parseObject);\n            case 'tvm.stackEntryTuple':\n                return HttpProviderUtils.parseObject(x.tuple);\n            case 'tvm.stackEntryNumber':\n                return HttpProviderUtils.parseObject(x.number);\n            case 'tvm.numberDecimal':\n                return new BN(x.number, 10);\n            default:\n                throw new Error('unknown type ' + typeName);\n        }\n    }\n\n    /**\n     * @param pair  {any[]}\n     * @return {any}\n     */\n    static parseResponseStack(pair) {\n        const typeName = pair[0];\n        const value = pair[1];\n\n        switch (typeName) {\n            case 'num':\n                return new BN(value.replace(/0x/, ''), 16);\n            case 'list':\n            case 'tuple':\n                return HttpProviderUtils.parseObject(value);\n            case 'cell':\n                const contentBytes = base64ToBytes(value.bytes);\n                return Cell.oneFromBoc(contentBytes);\n            default:\n                throw new Error('unknown type ' + typeName);\n        }\n    }\n\n    static parseResponse(result) {\n        if (result.exit_code !== 0) throw new Error(result);\n        const arr = result.stack.map(HttpProviderUtils.parseResponseStack);\n        return arr.length === 1 ? arr[0] : arr;\n    }\n\n    static makeArg(arg) {\n        if (arg instanceof BN || arg instanceof Number) {\n            return ['num', arg];\n        } else {\n            throw new Error('unknown arg type ' + arg);\n        }\n    }\n\n    static makeArgs(args) {\n        return args.map(this.makeArg);\n    }\n\n}\n\nmodule.exports.default = HttpProviderUtils;"],"mappings":";;AAAA,eAA4BA,OAAO,CAAC,UAAU,CAAC;EAAxCC,EAAE,YAAFA,EAAE;EAAEC,aAAa,YAAbA,aAAa;AACxB,gBAAeF,OAAO,CAAC,QAAQ,CAAC;EAAzBG,IAAI,aAAJA,IAAI;AAAsB,IAE3BC,iBAAiB;EAAA;;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAEnB,qBAAmBC,CAAC,EAAE;MAClB,IAAMC,QAAQ,GAAGD,CAAC,CAAC,OAAO,CAAC;MAC3B,QAAQC,QAAQ;QACZ,KAAK,UAAU;QACf,KAAK,WAAW;UACZ,OAAOD,CAAC,CAACE,QAAQ,CAACC,GAAG,CAACJ,iBAAiB,CAACK,WAAW,CAAC;QACxD,KAAK,qBAAqB;UACtB,OAAOL,iBAAiB,CAACK,WAAW,CAACJ,CAAC,CAACK,KAAK,CAAC;QACjD,KAAK,sBAAsB;UACvB,OAAON,iBAAiB,CAACK,WAAW,CAACJ,CAAC,CAACM,MAAM,CAAC;QAClD,KAAK,mBAAmB;UACpB,OAAO,IAAIV,EAAE,CAACI,CAAC,CAACM,MAAM,EAAE,EAAE,CAAC;QAC/B;UACI,MAAM,IAAIC,KAAK,CAAC,eAAe,GAAGN,QAAQ,CAAC;MAAC;IAExD;;IAEA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,4BAA0BO,IAAI,EAAE;MAC5B,IAAMP,QAAQ,GAAGO,IAAI,CAAC,CAAC,CAAC;MACxB,IAAMC,KAAK,GAAGD,IAAI,CAAC,CAAC,CAAC;MAErB,QAAQP,QAAQ;QACZ,KAAK,KAAK;UACN,OAAO,IAAIL,EAAE,CAACa,KAAK,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9C,KAAK,MAAM;QACX,KAAK,OAAO;UACR,OAAOX,iBAAiB,CAACK,WAAW,CAACK,KAAK,CAAC;QAC/C,KAAK,MAAM;UACP,IAAME,YAAY,GAAGd,aAAa,CAACY,KAAK,CAACG,KAAK,CAAC;UAC/C,OAAOd,IAAI,CAACe,UAAU,CAACF,YAAY,CAAC;QACxC;UACI,MAAM,IAAIJ,KAAK,CAAC,eAAe,GAAGN,QAAQ,CAAC;MAAC;IAExD;EAAC;IAAA;IAAA,OAED,uBAAqBa,MAAM,EAAE;MACzB,IAAIA,MAAM,CAACC,SAAS,KAAK,CAAC,EAAE,MAAM,IAAIR,KAAK,CAACO,MAAM,CAAC;MACnD,IAAME,GAAG,GAAGF,MAAM,CAACG,KAAK,CAACd,GAAG,CAACJ,iBAAiB,CAACmB,kBAAkB,CAAC;MAClE,OAAOF,GAAG,CAACG,MAAM,KAAK,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;IAC1C;EAAC;IAAA;IAAA,OAED,iBAAeI,GAAG,EAAE;MAChB,IAAIA,GAAG,YAAYxB,EAAE,IAAIwB,GAAG,YAAYC,MAAM,EAAE;QAC5C,OAAO,CAAC,KAAK,EAAED,GAAG,CAAC;MACvB,CAAC,MAAM;QACH,MAAM,IAAIb,KAAK,CAAC,mBAAmB,GAAGa,GAAG,CAAC;MAC9C;IACJ;EAAC;IAAA;IAAA,OAED,kBAAgBE,IAAI,EAAE;MAClB,OAAOA,IAAI,CAACnB,GAAG,CAAC,IAAI,CAACoB,OAAO,CAAC;IACjC;EAAC;EAAA;AAAA;AAILC,MAAM,CAACC,OAAO,CAACC,OAAO,GAAG3B,iBAAiB"},"metadata":{},"sourceType":"script"}