{"ast":null,"code":"var _jsxFileName = \"/Users/sepezho/Work/tonana/fe/src/components/BtnBuilder.tsx\";\nimport phantom from \"../static/img/phantom.png\";\nimport near from \"../static/img/near.png\";\nimport tonIco from \"../static/img/ton.png\";\nimport keplr from \"../static/img/keplr.png\";\nimport metamask from \"../static/img/metamask.png\";\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport { utils } from \"near-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SUGGESTED_DONATION = \"0\";\nconst BOATLOAD_OF_GAS = utils.format.parseNearAmount(\"0.00000000003\");\n\n// const Content: React.FC = () => {\n\n// if (loading) {\n//   return null;\n// }\n\n//   if (!account) {\n//     return (\n//       <Fragment>\n//         <div>\n//           <button onClick={handleSignIn}>Log in</button>\n//         </div>\n//         <SignIn />\n//       </Fragment>\n//     );\n//   }\n\n//   return (\n//     <Fragment>\n//       <div>\n//         <button onClick={handleSignOut}>Log out</button>\n//         <button onClick={handleSwitchWallet}>Switch Wallet</button>\n//         <button onClick={handleVerifyOwner}>Verify Owner</button>\n//         {accounts.length > 1 && (\n//           <button onClick={handleSwitchAccount}>Switch Account</button>\n//         )}\n//       </div>\n//       <Form\n//         account={account}\n//         onSubmit={(e) => handleSubmit(e as unknown as Submitted)}\n//       />\n//       <Messages messages={messages} />\n//     </Fragment>\n//   );\n// };\n\nconst zipName = name => `${name.slice(0, 5)}...${name.slice(-3)}`;\nexport const generateBtn = (currencyName, btnProps) => {\n  const {\n    selector,\n    modal,\n    accounts,\n    accountId\n  } = btnProps;\n\n  // const addMessages = useCallback(\n  // \tasync (message: string, donation: string, multiple: boolean) => {\n  // \t\tconst { contract } = selector.store.getState();\n  // \t\tconst wallet = await selector.wallet();\n\n  // \t\tif (!multiple) {\n  // \t\t\treturn wallet\n  // \t\t\t\t.signAndSendTransaction({\n  // \t\t\t\t\tsignerId: accountId!,\n  // \t\t\t\t\tactions: [\n  // \t\t\t\t\t\t{\n  // \t\t\t\t\t\t\ttype: \"FunctionCall\",\n  // \t\t\t\t\t\t\tparams: {\n  // \t\t\t\t\t\t\t\tmethodName: \"addMessage\",\n  // \t\t\t\t\t\t\t\targs: { text: message },\n  // \t\t\t\t\t\t\t\tgas: BOATLOAD_OF_GAS,\n  // \t\t\t\t\t\t\t\tdeposit: utils.format.parseNearAmount(donation)!,\n  // \t\t\t\t\t\t\t},\n  // \t\t\t\t\t\t},\n  // \t\t\t\t\t],\n  // \t\t\t\t})\n  // \t\t\t\t.catch((err) => {\n  // \t\t\t\t\talert(\"Failed to add message\");\n  // \t\t\t\t\tconsole.log(\"Failed to add message\");\n\n  // \t\t\t\t\tthrow err;\n  // \t\t\t\t});\n  // \t\t}\n\n  // \t\tconst transactions: Array<Transaction> = [];\n\n  // \t\tfor (let i = 0; i < 2; i += 1) {\n  // \t\t\ttransactions.push({\n  // \t\t\t\tsignerId: accountId!,\n  // \t\t\t\treceiverId: contract!.contractId,\n  // \t\t\t\tactions: [\n  // \t\t\t\t\t{\n  // \t\t\t\t\t\ttype: \"FunctionCall\",\n  // \t\t\t\t\t\tparams: {\n  // \t\t\t\t\t\t\tmethodName: \"addMessage\",\n  // \t\t\t\t\t\t\targs: {\n  // \t\t\t\t\t\t\t\ttext: `${message} (${i + 1}/2)`,\n  // \t\t\t\t\t\t\t},\n  // \t\t\t\t\t\t\tgas: BOATLOAD_OF_GAS,\n  // \t\t\t\t\t\t\tdeposit: utils.format.parseNearAmount(donation)!,\n  // \t\t\t\t\t\t},\n  // \t\t\t\t\t},\n  // \t\t\t\t],\n  // \t\t\t});\n  // \t\t}\n\n  // \t\treturn wallet.signAndSendTransactions({ transactions }).catch((err) => {\n  // \t\t\talert(\"Failed to add messages exception \" + err);\n  // \t\t\tconsole.log(\"Failed to add messages\");\n\n  // \t\t\tthrow err;\n  // \t\t});\n  // \t},\n  // \t[selector, accountId]\n  // );\n\n  // const handleVerifyOwner = async () => {\n  // \tconst wallet = await selector.wallet();\n  // \ttry {\n  // \t\tconst owner = await wallet.verifyOwner({\n  // \t\t\tmessage: \"test message for verification\",\n  // \t\t});\n\n  // \t\tif (owner) {\n  // \t\t\talert(`Signature for verification: ${JSON.stringify(owner)}`);\n  // \t\t}\n  // \t} catch (err) {\n  // \t\tconst message =\n  // \t\t\terr instanceof Error ? err.message : \"Something went wrong\";\n  // \t\talert(message);\n  // \t}\n  // };\n\n  // const handleSubmit = useCallback(\n  // \tasync (e: Submitted) => {\n  // \t\te.preventDefault();\n\n  // \t\tconst { fieldset, message, donation, multiple } = e.target.elements;\n\n  // \t\tfieldset.disabled = true;\n\n  // \t\treturn addMessages(message.value, donation.value || \"0\", multiple.checked)\n  // \t\t\t.then(() => {\n  // \t\t\t\treturn getMessages()\n  // \t\t\t\t\t.then((nextMessages) => {\n  // \t\t\t\t\t\tsetMessages(nextMessages);\n  // \t\t\t\t\t\tmessage.value = \"\";\n  // \t\t\t\t\t\tdonation.value = SUGGESTED_DONATION;\n  // \t\t\t\t\t\tfieldset.disabled = false;\n  // \t\t\t\t\t\tmultiple.checked = false;\n  // \t\t\t\t\t\tmessage.focus();\n  // \t\t\t\t\t})\n  // \t\t\t\t\t.catch((err) => {\n  // \t\t\t\t\t\talert(\"Failed to refresh messages\");\n  // \t\t\t\t\t\tconsole.log(\"Failed to refresh messages\");\n\n  // \t\t\t\t\t\tthrow err;\n  // \t\t\t\t\t});\n  // \t\t\t})\n  // \t\t\t.catch((err) => {\n  // \t\t\t\tconsole.error(err);\n\n  // \t\t\t\tfieldset.disabled = false;\n  // \t\t\t});\n  // \t},\n  // \t[addMessages, getMessages]\n  // );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currencyName === \"SOL\" ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      id: \"connectWalletBtn\",\n      onClick: () => btnProps.connectWalletSOL(btnProps.setSOLWalletKey),\n      children: btnProps.SOLwalletKey ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: phantom,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 8\n        }, this), zipName(btnProps.SOLwalletKey)]\n      }, void 0, true) : \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this) : null, currencyName === \"TON\" || currencyName === \"wNEAR (TON)\" || currencyName === \"wETH (TON)\" || currencyName === \"wSOL (TON)\" || currencyName === \"wAURORA (TON)\" || currencyName === \"wUSN (TON)\" || currencyName === \"wATOM (TON)\" ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      id: \"connectWalletBtn\",\n      onClick: () => btnProps.connectWalletTON(btnProps.setTONwalletKey),\n      children: btnProps.TONwalletKey ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tonIco,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 8\n        }, this), zipName(btnProps.TONwalletKey)]\n      }, void 0, true) : \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }, this) : null, currencyName === \"USN\" || currencyName === \"NEAR\" ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      id: \"connectWalletBtn\",\n      onClick: () => btnProps.connectWalletNEAR(btnProps.setNEARwalletKey),\n      children: btnProps.NEARwalletKey ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: near,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 8\n        }, this), zipName(btnProps.NEARwalletKey)]\n      }, void 0, true) : \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this) : null, currencyName === \"ATOM\" ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      id: \"connectWalletBtn\",\n      onClick: () => btnProps.connectWalletATOM(btnProps.setATOMwalletKey),\n      children: btnProps.ATOMwalletKey ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: keplr,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 8\n        }, this), zipName(btnProps.ATOMwalletKey)]\n      }, void 0, true) : \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }, this) : null, currencyName === \"AURORA\" ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      id: \"connectWalletBtn\",\n      onClick: () => btnProps.connectWalletAUR(btnProps.setAURwalletKey),\n      children: btnProps.AURwalletKey ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: metamask,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 8\n        }, this), zipName(btnProps.AURwalletKey)]\n      }, void 0, true) : \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }, this) : null, currencyName === \"ETH\" ? /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      id: \"connectWalletBtn\",\n      onClick: () => btnProps.connectWalletETH(btnProps.setETHWalletKey),\n      children: btnProps.ETHwalletKey ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: metamask,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 8\n        }, this), zipName(btnProps.ETHwalletKey)]\n      }, void 0, true) : \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }, this) : null]\n  }, void 0, true);\n};","map":{"version":3,"names":["phantom","near","tonIco","keplr","metamask","Button","React","utils","SUGGESTED_DONATION","BOATLOAD_OF_GAS","format","parseNearAmount","zipName","name","slice","generateBtn","currencyName","btnProps","selector","modal","accounts","accountId","connectWalletSOL","setSOLWalletKey","SOLwalletKey","connectWalletTON","setTONwalletKey","TONwalletKey","connectWalletNEAR","setNEARwalletKey","NEARwalletKey","connectWalletATOM","setATOMwalletKey","ATOMwalletKey","connectWalletAUR","setAURwalletKey","AURwalletKey","connectWalletETH","setETHWalletKey","ETHwalletKey"],"sources":["/Users/sepezho/Work/tonana/fe/src/components/BtnBuilder.tsx"],"sourcesContent":["import phantom from \"../static/img/phantom.png\";\nimport near from \"../static/img/near.png\";\nimport tonIco from \"../static/img/ton.png\";\nimport keplr from \"../static/img/keplr.png\";\nimport metamask from \"../static/img/metamask.png\";\n\nimport { Button } from \"antd\";\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { providers, utils } from \"near-api-js\";\nimport type {\n\tAccountView,\n\tCodeResult,\n} from \"near-api-js/lib/providers/provider\";\nimport type { Transaction } from \"@near-wallet-selector/core\";\n\nimport { useWalletSelector } from \"../contexts/WalletSelectorContext\";\n\ntype Submitted = SubmitEvent & {\n\ttarget: { elements: { [key: string]: HTMLInputElement } };\n};\n\nconst SUGGESTED_DONATION = \"0\";\nconst BOATLOAD_OF_GAS = utils.format.parseNearAmount(\"0.00000000003\")!;\n\n// const Content: React.FC = () => {\n\n// if (loading) {\n//   return null;\n// }\n\n//   if (!account) {\n//     return (\n//       <Fragment>\n//         <div>\n//           <button onClick={handleSignIn}>Log in</button>\n//         </div>\n//         <SignIn />\n//       </Fragment>\n//     );\n//   }\n\n//   return (\n//     <Fragment>\n//       <div>\n//         <button onClick={handleSignOut}>Log out</button>\n//         <button onClick={handleSwitchWallet}>Switch Wallet</button>\n//         <button onClick={handleVerifyOwner}>Verify Owner</button>\n//         {accounts.length > 1 && (\n//           <button onClick={handleSwitchAccount}>Switch Account</button>\n//         )}\n//       </div>\n//       <Form\n//         account={account}\n//         onSubmit={(e) => handleSubmit(e as unknown as Submitted)}\n//       />\n//       <Messages messages={messages} />\n//     </Fragment>\n//   );\n// };\n\nconst zipName = (name: string) => `${name.slice(0, 5)}...${name.slice(-3)}`;\n\nexport const generateBtn = (currencyName: string, btnProps: any) => {\n\tconst { selector, modal, accounts, accountId } = btnProps;\n\n\t// const addMessages = useCallback(\n\t// \tasync (message: string, donation: string, multiple: boolean) => {\n\t// \t\tconst { contract } = selector.store.getState();\n\t// \t\tconst wallet = await selector.wallet();\n\n\t// \t\tif (!multiple) {\n\t// \t\t\treturn wallet\n\t// \t\t\t\t.signAndSendTransaction({\n\t// \t\t\t\t\tsignerId: accountId!,\n\t// \t\t\t\t\tactions: [\n\t// \t\t\t\t\t\t{\n\t// \t\t\t\t\t\t\ttype: \"FunctionCall\",\n\t// \t\t\t\t\t\t\tparams: {\n\t// \t\t\t\t\t\t\t\tmethodName: \"addMessage\",\n\t// \t\t\t\t\t\t\t\targs: { text: message },\n\t// \t\t\t\t\t\t\t\tgas: BOATLOAD_OF_GAS,\n\t// \t\t\t\t\t\t\t\tdeposit: utils.format.parseNearAmount(donation)!,\n\t// \t\t\t\t\t\t\t},\n\t// \t\t\t\t\t\t},\n\t// \t\t\t\t\t],\n\t// \t\t\t\t})\n\t// \t\t\t\t.catch((err) => {\n\t// \t\t\t\t\talert(\"Failed to add message\");\n\t// \t\t\t\t\tconsole.log(\"Failed to add message\");\n\n\t// \t\t\t\t\tthrow err;\n\t// \t\t\t\t});\n\t// \t\t}\n\n\t// \t\tconst transactions: Array<Transaction> = [];\n\n\t// \t\tfor (let i = 0; i < 2; i += 1) {\n\t// \t\t\ttransactions.push({\n\t// \t\t\t\tsignerId: accountId!,\n\t// \t\t\t\treceiverId: contract!.contractId,\n\t// \t\t\t\tactions: [\n\t// \t\t\t\t\t{\n\t// \t\t\t\t\t\ttype: \"FunctionCall\",\n\t// \t\t\t\t\t\tparams: {\n\t// \t\t\t\t\t\t\tmethodName: \"addMessage\",\n\t// \t\t\t\t\t\t\targs: {\n\t// \t\t\t\t\t\t\t\ttext: `${message} (${i + 1}/2)`,\n\t// \t\t\t\t\t\t\t},\n\t// \t\t\t\t\t\t\tgas: BOATLOAD_OF_GAS,\n\t// \t\t\t\t\t\t\tdeposit: utils.format.parseNearAmount(donation)!,\n\t// \t\t\t\t\t\t},\n\t// \t\t\t\t\t},\n\t// \t\t\t\t],\n\t// \t\t\t});\n\t// \t\t}\n\n\t// \t\treturn wallet.signAndSendTransactions({ transactions }).catch((err) => {\n\t// \t\t\talert(\"Failed to add messages exception \" + err);\n\t// \t\t\tconsole.log(\"Failed to add messages\");\n\n\t// \t\t\tthrow err;\n\t// \t\t});\n\t// \t},\n\t// \t[selector, accountId]\n\t// );\n\n\t// const handleVerifyOwner = async () => {\n\t// \tconst wallet = await selector.wallet();\n\t// \ttry {\n\t// \t\tconst owner = await wallet.verifyOwner({\n\t// \t\t\tmessage: \"test message for verification\",\n\t// \t\t});\n\n\t// \t\tif (owner) {\n\t// \t\t\talert(`Signature for verification: ${JSON.stringify(owner)}`);\n\t// \t\t}\n\t// \t} catch (err) {\n\t// \t\tconst message =\n\t// \t\t\terr instanceof Error ? err.message : \"Something went wrong\";\n\t// \t\talert(message);\n\t// \t}\n\t// };\n\n\t// const handleSubmit = useCallback(\n\t// \tasync (e: Submitted) => {\n\t// \t\te.preventDefault();\n\n\t// \t\tconst { fieldset, message, donation, multiple } = e.target.elements;\n\n\t// \t\tfieldset.disabled = true;\n\n\t// \t\treturn addMessages(message.value, donation.value || \"0\", multiple.checked)\n\t// \t\t\t.then(() => {\n\t// \t\t\t\treturn getMessages()\n\t// \t\t\t\t\t.then((nextMessages) => {\n\t// \t\t\t\t\t\tsetMessages(nextMessages);\n\t// \t\t\t\t\t\tmessage.value = \"\";\n\t// \t\t\t\t\t\tdonation.value = SUGGESTED_DONATION;\n\t// \t\t\t\t\t\tfieldset.disabled = false;\n\t// \t\t\t\t\t\tmultiple.checked = false;\n\t// \t\t\t\t\t\tmessage.focus();\n\t// \t\t\t\t\t})\n\t// \t\t\t\t\t.catch((err) => {\n\t// \t\t\t\t\t\talert(\"Failed to refresh messages\");\n\t// \t\t\t\t\t\tconsole.log(\"Failed to refresh messages\");\n\n\t// \t\t\t\t\t\tthrow err;\n\t// \t\t\t\t\t});\n\t// \t\t\t})\n\t// \t\t\t.catch((err) => {\n\t// \t\t\t\tconsole.error(err);\n\n\t// \t\t\t\tfieldset.disabled = false;\n\t// \t\t\t});\n\t// \t},\n\t// \t[addMessages, getMessages]\n\t// );\n\n\treturn (\n\t\t<>\n\t\t\t{currencyName === \"SOL\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletSOL(btnProps.setSOLWalletKey)}>\n\t\t\t\t\t{btnProps.SOLwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={phantom} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.SOLwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"TON\" ||\n\t\t\tcurrencyName === \"wNEAR (TON)\" ||\n\t\t\tcurrencyName === \"wETH (TON)\" ||\n\t\t\tcurrencyName === \"wSOL (TON)\" ||\n\t\t\tcurrencyName === \"wAURORA (TON)\" ||\n\t\t\tcurrencyName === \"wUSN (TON)\" ||\n\t\t\tcurrencyName === \"wATOM (TON)\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletTON(btnProps.setTONwalletKey)}>\n\t\t\t\t\t{btnProps.TONwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={tonIco} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.TONwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"USN\" || currencyName === \"NEAR\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletNEAR(btnProps.setNEARwalletKey)}>\n\t\t\t\t\t{btnProps.NEARwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={near} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.NEARwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"ATOM\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletATOM(btnProps.setATOMwalletKey)}>\n\t\t\t\t\t{btnProps.ATOMwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={keplr} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.ATOMwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"AURORA\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletAUR(btnProps.setAURwalletKey)}>\n\t\t\t\t\t{btnProps.AURwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={metamask} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.AURwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t{currencyName === \"ETH\" ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tid={\"connectWalletBtn\"}\n\t\t\t\t\tonClick={() => btnProps.connectWalletETH(btnProps.setETHWalletKey)}>\n\t\t\t\t\t{btnProps.ETHwalletKey ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<img src={metamask} alt={\"#\"} />\n\t\t\t\t\t\t\t{zipName(btnProps.ETHwalletKey)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Connect wallet\"\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}