{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultValueProducer = void 0;\n// allows pre-producing values before anyone is listening\nclass DefaultValueProducer {\n  constructor(value, callbacks) {\n    this.callbacks = callbacks;\n    this.internalValue = value;\n  }\n  get value() {\n    return this.internalValue;\n  }\n  /**\n   * Update the current value.\n   *\n   * If producer is active (i.e. someone is listening), this emits an event.\n   * If not, just the current value is updated.\n   */\n  update(value) {\n    this.internalValue = value;\n    if (this.listener) {\n      this.listener.next(value);\n    }\n  }\n  /**\n   * Produce an error\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  error(error) {\n    if (this.listener) {\n      this.listener.error(error);\n    }\n  }\n  /**\n   * Called by the stream. Do not call this directly.\n   */\n  start(listener) {\n    this.listener = listener;\n    listener.next(this.internalValue);\n    if (this.callbacks) {\n      this.callbacks.onStarted();\n    }\n  }\n  /**\n   * Called by the stream. Do not call this directly.\n   */\n  stop() {\n    if (this.callbacks) {\n      this.callbacks.onStop();\n    }\n    this.listener = undefined;\n  }\n}\nexports.DefaultValueProducer = DefaultValueProducer;","map":{"version":3,"sources":["../src/defaultvalueproducer.ts"],"names":[],"mappings":";;;;;;AAOA;AACA,MAAa,oBAAoB,CAAA;EAS/B,WAAA,CAAmB,KAAQ,EAAE,SAA0C,EAAA;IACrE,IAAI,CAAC,SAAS,GAAG,SAAS;IAC1B,IAAI,CAAC,aAAa,GAAG,KAAK;EAC5B;EAXA,IAAW,KAAK,GAAA;IACd,OAAO,IAAI,CAAC,aAAa;EAC3B;EAWA;;;;;AAKG;EACI,MAAM,CAAC,KAAQ,EAAA;IACpB,IAAI,CAAC,aAAa,GAAG,KAAK;IAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IAC1B;EACH;EAEA;;AAEG;EACH;EACO,KAAK,CAAC,KAAU,EAAA;IACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;IAC3B;EACH;EAEA;;AAEG;EACI,KAAK,CAAC,QAAqB,EAAA;IAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ;IACxB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IAEjC,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IAC3B;EACH;EAEA;;AAEG;EACI,IAAI,GAAA;IACT,IAAI,IAAI,CAAC,SAAS,EAAE;MAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;IACxB;IACD,IAAI,CAAC,QAAQ,GAAG,SAAS;EAC3B;AACD;AA1DD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultValueProducer = void 0;\n// allows pre-producing values before anyone is listening\nclass DefaultValueProducer {\n    constructor(value, callbacks) {\n        this.callbacks = callbacks;\n        this.internalValue = value;\n    }\n    get value() {\n        return this.internalValue;\n    }\n    /**\n     * Update the current value.\n     *\n     * If producer is active (i.e. someone is listening), this emits an event.\n     * If not, just the current value is updated.\n     */\n    update(value) {\n        this.internalValue = value;\n        if (this.listener) {\n            this.listener.next(value);\n        }\n    }\n    /**\n     * Produce an error\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    error(error) {\n        if (this.listener) {\n            this.listener.error(error);\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    start(listener) {\n        this.listener = listener;\n        listener.next(this.internalValue);\n        if (this.callbacks) {\n            this.callbacks.onStarted();\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    stop() {\n        if (this.callbacks) {\n            this.callbacks.onStop();\n        }\n        this.listener = undefined;\n    }\n}\nexports.DefaultValueProducer = DefaultValueProducer;\n//# sourceMappingURL=defaultvalueproducer.js.map"]},"metadata":{},"sourceType":"script"}