{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beginDict = exports.DictBuilder = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar Builder_1 = require(\"./Builder\");\nvar serializeDict_1 = require(\"./dict/serializeDict\");\nvar DictBuilder = /*#__PURE__*/_createClass(function DictBuilder(keySize) {\n  var _this = this;\n  _classCallCheck(this, DictBuilder);\n  this.items = new Map();\n  this.ended = false;\n  this.storeCell = function (index, value) {\n    if (_this.ended) {\n      throw Error('Already ended');\n    }\n    var key;\n    if (typeof index === 'number') {\n      key = index.toString(10);\n    } else if (bn_js_1.default.isBN(index)) {\n      key = index.toString(10);\n    } else if (Buffer.isBuffer(index)) {\n      key = new bn_js_1.default(index.toString('hex'), 'hex').toString(10);\n    } else {\n      throw Error('Invalid index type');\n    }\n    if (_this.items.has(key)) {\n      throw Error('Item ' + index + ' already exist');\n    }\n    _this.items.set(key, value);\n  };\n  this.storeRef = function (index, value) {\n    if (_this.ended) {\n      throw Error('Already ended');\n    }\n    _this.storeCell(index, (0, Builder_1.beginCell)().storeRef(value).endCell());\n  };\n  this.endDict = function () {\n    if (_this.ended) {\n      throw Error('Already ended');\n    }\n    _this.ended = true;\n    if (_this.items.size === 0) {\n      return null;\n    }\n    return (0, serializeDict_1.serializeDict)(_this.items, _this.keySize, function (src, dst) {\n      return dst.writeCell(src);\n    });\n  };\n  this.endCell = function () {\n    if (_this.ended) {\n      throw Error('Already ended');\n    }\n    if (_this.items.size === 0) {\n      throw Error('Dict is empty');\n    }\n    return _this.endDict();\n  };\n  this.keySize = keySize;\n});\nexports.DictBuilder = DictBuilder;\nfunction beginDict(keyLength) {\n  return new DictBuilder(keyLength);\n}\nexports.beginDict = beginDict;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","beginDict","DictBuilder","bn_js_1","require","Builder_1","serializeDict_1","keySize","items","Map","ended","storeCell","index","Error","key","toString","default","isBN","Buffer","isBuffer","has","set","storeRef","beginCell","endCell","endDict","size","serializeDict","src","dst","writeCell","keyLength"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/boc/DictBuilder.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.beginDict = exports.DictBuilder = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst Builder_1 = require(\"./Builder\");\nconst serializeDict_1 = require(\"./dict/serializeDict\");\nclass DictBuilder {\n    constructor(keySize) {\n        this.items = new Map();\n        this.ended = false;\n        this.storeCell = (index, value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            let key;\n            if (typeof index === 'number') {\n                key = index.toString(10);\n            }\n            else if (bn_js_1.default.isBN(index)) {\n                key = index.toString(10);\n            }\n            else if (Buffer.isBuffer(index)) {\n                key = new bn_js_1.default(index.toString('hex'), 'hex').toString(10);\n            }\n            else {\n                throw Error('Invalid index type');\n            }\n            if (this.items.has(key)) {\n                throw Error('Item ' + index + ' already exist');\n            }\n            this.items.set(key, value);\n        };\n        this.storeRef = (index, value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.storeCell(index, (0, Builder_1.beginCell)()\n                .storeRef(value)\n                .endCell());\n        };\n        this.endDict = () => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.ended = true;\n            if (this.items.size === 0) {\n                return null;\n            }\n            return (0, serializeDict_1.serializeDict)(this.items, this.keySize, (src, dst) => dst.writeCell(src));\n        };\n        this.endCell = () => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            if (this.items.size === 0) {\n                throw Error('Dict is empty');\n            }\n            return this.endDict();\n        };\n        this.keySize = keySize;\n    }\n}\nexports.DictBuilder = DictBuilder;\nfunction beginDict(keyLength) {\n    return new DictBuilder(keyLength);\n}\nexports.beginDict = beginDict;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}