{"ast":null,"code":"var _jsxFileName = \"/Users/sepezho/Work/tonana/fe/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Button, message, Dropdown } from \"antd\";\nimport { DownOutlined, SwapOutlined } from \"@ant-design/icons\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Connection } from \"@solana/web3.js\";\nimport SwapForm from \"./components/SwapForm\";\nimport getTONMaxAmount from \"./logic/fetch/getTONMaxAmount\";\nimport getATOMMaxAmount from \"./logic/fetch/getATOMMaxAmount\";\nimport getSOLMaxAmount from \"./logic/fetch/getSOLMaxAmount\";\nimport fetchMarkets from \"./logic/fetch/fetchMarkets\";\nimport connectWalletSOL from \"./logic/wallet/connectWalletSOL\";\nimport connectWalletATOM from \"./logic/wallet/connectWalletATOM\";\nimport connectWalletAUR from \"./logic/wallet/connectWalletAUR\";\nimport connectWalletTON from \"./logic/wallet/connectWalletTON\";\nimport connectWalletNEAR from \"./logic/wallet/connectWalletNEAR\";\nimport { menuBuilder } from \"./components/MenuBuilder\";\nimport { generateBtn } from \"./components/BtnBuilder\";\nimport { icoBuilder } from \"./components/IcoBuilder\";\nimport { initializeWalletNEAR } from \"./logic/wallet/initializeWalletNEAR\";\nimport { makeNEARTrxAfterLoad } from \"./logic/transaction/MakeNEARTrx\";\nimport { makeUSNTrxAfterLoad } from \"./logic/transaction/MakeUSNTrx\";\nimport connectWalletETH from \"./logic/wallet/connectWalletETH\";\nimport getAURMaxAmount from \"./logic/fetch/getAURMaxAmount\";\nimport getETHMaxAmount from \"./logic/fetch/getETHMaxAmount\";\nimport Social from \"./components/Social\";\nimport Header from \"./components/Header\";\nimport Rpcs from \"./components/Rpcs\";\nimport Gstyles from \"./styles/gstyles\";\nimport tonRpcStatus from \"./logic/rpcsStatus/ton\";\nimport solRpcStatus from \"./logic/rpcsStatus/solana\";\nimport auroraRpcStatus from \"./logic/rpcsStatus/aurora\";\nimport cosmosRpcStatus from \"./logic/rpcsStatus/cosmos\";\nimport nearRpcStatus from \"./logic/rpcsStatus/near\";\nimport ethRpcStatus from \"./logic/rpcsStatus/eth\";\nimport callBackStatus from \"./logic/rpcsStatus/back\";\nimport { Loader } from \"./styles/style\";\nimport \"antd/dist/antd.css\";\nimport bnn from \"./static/img/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [ex, sex] = useState(true);\n  const [tu, stu] = useState(0);\n  const [su, ssu] = useState(0);\n  const [au, sau] = useState(0);\n  const [nu, snu] = useState(0);\n  const [usnu, susn] = useState(0);\n  const [auru, sauruu] = useState(0);\n  const [ethu, sethu] = useState(0);\n  const [SOLwalletKey, setSOLWalletKey] = useState(\"\");\n  const [TONwalletKey, setTONwalletKey] = useState(\"\");\n  const [NEARwalletKey, setNEARwalletKey] = useState(\"\");\n  const [ATOMwalletKey, setATOMwalletKey] = useState(\"\");\n  const [AURwalletKey, setAURwalletKey] = useState(\"\");\n  const [AURMaxAmount, setAURMaxAmount] = useState(0);\n  const [SOLMaxAmount, setSOLMaxAmount] = useState(0);\n  const [TONMaxAmount, setTONMaxAmount] = useState(0);\n  const [ATOMMaxAmount, setATOMMaxAmount] = useState(0);\n  const [NEARMaxAmount, setNEARMaxAmount] = useState(0);\n  const [ETHMaxAmount, setETHMaxAmount] = useState(0);\n  const [USNMaxAmount, setUSNMaxAmount] = useState(0);\n  const [firstCurrAmount, setFirstCurrAmount] = useState(\"\");\n  const [secCurrAmount, setSecCurrAmount] = useState(\"\");\n  const [ETHwalletKey, setETHWalletKey] = useState(\"\");\n  const [isload, setIsload] = useState(false);\n  const [hexString, sHexString] = useState(\"\");\n  const [networkSource, setNetworkSource] = useState(\"ETH\");\n  const [networkDestination, setNetworkDestination] = useState(\"TON\");\n  const [rpcEthStatus, setRpcEthStatus] = useState({\n    title: \"Ethereum RPC\",\n    key: \"eth\",\n    status: false\n  });\n  const [rpcSolStatus, setRpcSolStatus] = useState({\n    title: \"Solana RPC\",\n    key: \"sol\",\n    status: false\n  });\n  const [rpcNearStatus, setRpcNearStatus] = useState({\n    title: \"Near RPC\",\n    key: \"near\",\n    status: false\n  });\n  const [rpcAuroraStatus, setRpcAuroraStatus] = useState({\n    title: \"Aurora RPC\",\n    key: \"aurora\",\n    status: false\n  });\n  const [rpcTonStatus, setRpcTonStatus] = useState({\n    title: \"Ton RPC\",\n    key: \"ton\",\n    status: false\n  });\n  const [rpcCosmosStatus, setRpcCosmosStatus] = useState({\n    title: \"Cosmos RPC\",\n    key: \"atom\",\n    status: false\n  });\n  const [backStatus, setBackStatus] = useState({\n    title: \"Tonana oracle\",\n    key: \"tnn\",\n    status: false\n  });\n  const [rpcsStatuses, setRpcsStatuses] = useState([]);\n  useEffect(() => {\n    setRpcsStatuses([backStatus, rpcTonStatus, rpcEthStatus, rpcNearStatus, rpcSolStatus, rpcCosmosStatus, rpcAuroraStatus]);\n  }, [rpcAuroraStatus, rpcNearStatus, rpcSolStatus, rpcTonStatus, rpcCosmosStatus, rpcEthStatus, backStatus]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const transactionHashes = searchParams.get(\"transactionHashes\");\n  const nearAccountId = searchParams.get(\"account_id\");\n  const isusn = searchParams.get(\"isusn\");\n  const isnear = searchParams.get(\"isnear\");\n  var connection = new Connection(\"https://solana-mainnet.g.alchemy.com/v2/B9sqdnSJnFWSdKlCTFqEQjMr8pnj7RAb\");\n  useEffect(() => {\n    (async () => {\n      setRpcTonStatus(await tonRpcStatus());\n    })();\n    (async () => {\n      setRpcSolStatus(await solRpcStatus());\n    })();\n    (async () => {\n      setRpcNearStatus(await nearRpcStatus());\n    })();\n    (async () => {\n      setRpcAuroraStatus(await auroraRpcStatus());\n    })();\n    (async () => {\n      setRpcEthStatus(await ethRpcStatus());\n    })();\n    (async () => {\n      setRpcCosmosStatus(await cosmosRpcStatus());\n    })();\n    (async () => {\n      setBackStatus(await callBackStatus());\n    })();\n    setInterval(() => {\n      (async () => {\n        setRpcTonStatus(await tonRpcStatus());\n      })();\n      (async () => {\n        setRpcSolStatus(await solRpcStatus());\n      })();\n      (async () => {\n        setRpcNearStatus(await nearRpcStatus());\n      })();\n      (async () => {\n        setRpcAuroraStatus(await auroraRpcStatus());\n      })();\n      (async () => {\n        setRpcEthStatus(await ethRpcStatus());\n      })();\n      (async () => {\n        setRpcCosmosStatus(await cosmosRpcStatus());\n      })();\n      (async () => {\n        setBackStatus(await callBackStatus());\n      })();\n    }, 30000);\n    getTONMaxAmount(setTONMaxAmount);\n    getSOLMaxAmount(setSOLMaxAmount);\n    getATOMMaxAmount(setATOMMaxAmount);\n    getAURMaxAmount(setAURMaxAmount);\n    getETHMaxAmount(setETHMaxAmount);\n    fetchMarkets(stu, ssu, sau, snu, sauruu, susn, sethu);\n    setInterval(() => {\n      fetchMarkets(stu, ssu, sau, snu, sauruu, susn, sethu);\n    }, 15000);\n    sHexString(Array(16).fill(\"\").map(() => Math.round(Math.random() * 0xf).toString(16)).join(\"\"));\n    if (localStorage.getItem(\"tonana_data\") && nearAccountId) {\n      //@ts-ignore\n      const storedData = JSON.parse(localStorage.getItem(\"tonana_data\"));\n      sex(storedData.ex);\n      setSOLWalletKey(storedData.SOLwalletKey);\n      setTONwalletKey(storedData.TONwalletKey);\n      setAURwalletKey(storedData.AURwalletKey);\n      setNEARwalletKey(storedData.NEARwalletKey);\n      setATOMwalletKey(storedData.ATOMwalletKey);\n      setETHWalletKey(storedData.ETHwalletKey);\n      sHexString(storedData.hexString);\n      setNetworkSource(storedData.networkSource);\n      setNetworkDestination(storedData.networkDestination);\n    }\n    initializeWalletNEAR(setNEARMaxAmount, setNEARwalletKey, setUSNMaxAmount);\n    if (isnear) makeNEARTrxAfterLoad(transactionHashes, setSearchParams, searchParams);\n    if (isusn) makeUSNTrxAfterLoad(transactionHashes, setSearchParams, searchParams);\n    message.success(\"Use Chrome with TonWallet & Phantom extensions\", 10);\n    message.success(\"Connect both and make trx, then wait a little bit\", 11);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"tonana_data\", JSON.stringify({\n      ex,\n      SOLwalletKey,\n      TONwalletKey,\n      ETHwalletKey,\n      AURwalletKey,\n      NEARwalletKey,\n      ATOMwalletKey,\n      hexString,\n      networkSource,\n      networkDestination\n    }));\n  }, [ex, SOLwalletKey, TONwalletKey, AURwalletKey, ETHwalletKey, NEARwalletKey, ATOMwalletKey, hexString, networkSource, networkDestination]);\n  const btnProps = {\n    connectWalletSOL,\n    connectWalletETH,\n    setSOLWalletKey,\n    setETHWalletKey,\n    connectWalletTON,\n    setTONwalletKey,\n    setAURwalletKey,\n    connectWalletNEAR,\n    setNEARwalletKey,\n    connectWalletATOM,\n    connectWalletAUR,\n    setATOMwalletKey,\n    TONwalletKey,\n    AURwalletKey,\n    SOLwalletKey,\n    NEARwalletKey,\n    ATOMwalletKey,\n    ETHwalletKey\n  };\n  const menuSource = menuBuilder(networkDestination, setNetworkSource);\n  const menuDestination = menuBuilder(networkSource, setNetworkDestination);\n  const coinIco = icoBuilder(networkSource);\n  const coinIcoDest = icoBuilder(networkDestination);\n  const btnDest = generateBtn(networkDestination, btnProps);\n  const btnSource = generateBtn(networkSource, btnProps);\n  const swap = () => {\n    setNetworkDestination(networkSource);\n    setNetworkSource(networkDestination);\n    setFirstCurrAmount(secCurrAmount);\n    setSecCurrAmount(firstCurrAmount);\n    sex(!ex);\n  };\n  const btnSelectSource = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: menuSource,\n      placement: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"selectCoin\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coinIco,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 6\n        }, this), networkSource, /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n  const btnSelectDirection = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: menuDestination,\n      placement: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"selectCoin\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coinIcoDest,\n          alt: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 6\n        }, this), networkDestination, /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n  const changeDirection = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"directionBtn\",\n    children: /*#__PURE__*/_jsxDEV(SwapOutlined, {\n      onClick: swap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 3\n  }, this);\n  const fromProps = {\n    au,\n    su,\n    tu,\n    nu,\n    usnu,\n    auru,\n    ethu,\n    ATOMwalletKey,\n    ETHwalletKey,\n    SOLwalletKey,\n    TONwalletKey,\n    AURwalletKey,\n    NEARwalletKey,\n    ATOMMaxAmount,\n    SOLMaxAmount,\n    ETHMaxAmount,\n    AURMaxAmount,\n    TONMaxAmount,\n    USNMaxAmount,\n    NEARMaxAmount,\n    btnSelectSource,\n    btnSelectDirection,\n    btnDest,\n    btnSource,\n    setIsload,\n    isload,\n    hexString,\n    changeDirection,\n    connection,\n    directionNetwork: networkDestination.toLowerCase(),\n    networkSource: networkSource.toLowerCase(),\n    setFirstCurrAmount,\n    setSecCurrAmount,\n    firstCurrAmount,\n    secCurrAmount,\n    rpcsStatuses\n  };\n  const tvl = AURMaxAmount * auru + USNMaxAmount * usnu + ETHMaxAmount * ethu + NEARMaxAmount * nu + ATOMMaxAmount * au + TONMaxAmount * tu + SOLMaxAmount * su;\n  // console.log(\"aur\", AURMaxAmount * auru);\n  // console.log(\"sol\", SOLMaxAmount * su);\n  // console.log(\"ton\", TONMaxAmount * tu);\n  // console.log(\"atom\", ATOMMaxAmount * au);\n  // console.log(\"near\", NEARMaxAmount * nu);\n  // console.log(\"eth\", ETHMaxAmount * ethu);\n  // console.log(\"usn\", USNMaxAmount * usnu);\n  // console.log(\"total\", tvl);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SwapForm, {\n        ...fromProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 5\n      }, this), isload ? /*#__PURE__*/_jsxDEV(Loader, {\n        src: bnn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Rpcs, {\n      rpcsStatuses: rpcsStatuses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Social, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"version\",\n      children: [\"Tonana TVL: $\", tvl.toFixed(2), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 5\n      }, this), \"v1.0.84 (alpha)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Gstyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"tvJgrb/3L+Yq8RBiQaxcWF/LATU=\", false, function () {\n  return [useSearchParams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","message","Dropdown","DownOutlined","SwapOutlined","useSearchParams","Connection","SwapForm","getTONMaxAmount","getATOMMaxAmount","getSOLMaxAmount","fetchMarkets","connectWalletSOL","connectWalletATOM","connectWalletAUR","connectWalletTON","connectWalletNEAR","menuBuilder","generateBtn","icoBuilder","initializeWalletNEAR","makeNEARTrxAfterLoad","makeUSNTrxAfterLoad","connectWalletETH","getAURMaxAmount","getETHMaxAmount","Social","Header","Rpcs","Gstyles","tonRpcStatus","solRpcStatus","auroraRpcStatus","cosmosRpcStatus","nearRpcStatus","ethRpcStatus","callBackStatus","Loader","App","ex","sex","tu","stu","su","ssu","au","sau","nu","snu","usnu","susn","auru","sauruu","ethu","sethu","SOLwalletKey","setSOLWalletKey","TONwalletKey","setTONwalletKey","NEARwalletKey","setNEARwalletKey","ATOMwalletKey","setATOMwalletKey","AURwalletKey","setAURwalletKey","AURMaxAmount","setAURMaxAmount","SOLMaxAmount","setSOLMaxAmount","TONMaxAmount","setTONMaxAmount","ATOMMaxAmount","setATOMMaxAmount","NEARMaxAmount","setNEARMaxAmount","ETHMaxAmount","setETHMaxAmount","USNMaxAmount","setUSNMaxAmount","firstCurrAmount","setFirstCurrAmount","secCurrAmount","setSecCurrAmount","ETHwalletKey","setETHWalletKey","isload","setIsload","hexString","sHexString","networkSource","setNetworkSource","networkDestination","setNetworkDestination","rpcEthStatus","setRpcEthStatus","title","key","status","rpcSolStatus","setRpcSolStatus","rpcNearStatus","setRpcNearStatus","rpcAuroraStatus","setRpcAuroraStatus","rpcTonStatus","setRpcTonStatus","rpcCosmosStatus","setRpcCosmosStatus","backStatus","setBackStatus","rpcsStatuses","setRpcsStatuses","searchParams","setSearchParams","transactionHashes","get","nearAccountId","isusn","isnear","connection","setInterval","Array","fill","map","Math","round","random","toString","join","localStorage","getItem","storedData","JSON","parse","success","setItem","stringify","btnProps","menuSource","menuDestination","coinIco","coinIcoDest","btnDest","btnSource","swap","btnSelectSource","btnSelectDirection","changeDirection","fromProps","directionNetwork","toLowerCase","tvl","bnn","toFixed"],"sources":["/Users/sepezho/Work/tonana/fe/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button, message, Dropdown } from \"antd\";\nimport { DownOutlined, SwapOutlined } from \"@ant-design/icons\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\n\nimport SwapForm from \"./components/SwapForm\";\nimport getTONMaxAmount from \"./logic/fetch/getTONMaxAmount\";\nimport getATOMMaxAmount from \"./logic/fetch/getATOMMaxAmount\";\nimport getSOLMaxAmount from \"./logic/fetch/getSOLMaxAmount\";\nimport fetchMarkets from \"./logic/fetch/fetchMarkets\";\nimport connectWalletSOL from \"./logic/wallet/connectWalletSOL\";\nimport connectWalletATOM from \"./logic/wallet/connectWalletATOM\";\nimport connectWalletAUR from \"./logic/wallet/connectWalletAUR\";\nimport connectWalletTON from \"./logic/wallet/connectWalletTON\";\nimport connectWalletNEAR from \"./logic/wallet/connectWalletNEAR\";\nimport { menuBuilder } from \"./components/MenuBuilder\";\nimport { generateBtn } from \"./components/BtnBuilder\";\nimport { icoBuilder } from \"./components/IcoBuilder\";\nimport { initializeWalletNEAR } from \"./logic/wallet/initializeWalletNEAR\";\nimport { makeNEARTrxAfterLoad } from \"./logic/transaction/MakeNEARTrx\";\nimport { makeUSNTrxAfterLoad } from \"./logic/transaction/MakeUSNTrx\";\nimport connectWalletETH from \"./logic/wallet/connectWalletETH\";\nimport getAURMaxAmount from \"./logic/fetch/getAURMaxAmount\";\nimport getETHMaxAmount from \"./logic/fetch/getETHMaxAmount\";\nimport Social from \"./components/Social\";\nimport Header from \"./components/Header\";\nimport Rpcs from \"./components/Rpcs\";\nimport Gstyles from \"./styles/gstyles\";\nimport tonRpcStatus from \"./logic/rpcsStatus/ton\";\nimport solRpcStatus from \"./logic/rpcsStatus/solana\";\nimport auroraRpcStatus from \"./logic/rpcsStatus/aurora\";\nimport cosmosRpcStatus from \"./logic/rpcsStatus/cosmos\";\nimport nearRpcStatus from \"./logic/rpcsStatus/near\";\nimport ethRpcStatus from \"./logic/rpcsStatus/eth\";\nimport callBackStatus from \"./logic/rpcsStatus/back\";\n\nimport { Loader } from \"./styles/style\";\nimport \"antd/dist/antd.css\";\n\nimport bnn from \"./static/img/logo.svg\";\n\nconst App = () => {\n\tconst [ex, sex] = useState(true);\n\tconst [tu, stu] = useState(0);\n\tconst [su, ssu] = useState(0);\n\tconst [au, sau] = useState(0);\n\tconst [nu, snu] = useState(0);\n\tconst [usnu, susn] = useState(0);\n\tconst [auru, sauruu] = useState(0);\n\tconst [ethu, sethu] = useState(0);\n\tconst [SOLwalletKey, setSOLWalletKey] = useState(\"\");\n\tconst [TONwalletKey, setTONwalletKey] = useState(\"\");\n\tconst [NEARwalletKey, setNEARwalletKey] = useState(\"\");\n\tconst [ATOMwalletKey, setATOMwalletKey] = useState(\"\");\n\tconst [AURwalletKey, setAURwalletKey] = useState(\"\");\n\tconst [AURMaxAmount, setAURMaxAmount] = useState(0);\n\tconst [SOLMaxAmount, setSOLMaxAmount] = useState(0);\n\tconst [TONMaxAmount, setTONMaxAmount] = useState(0);\n\tconst [ATOMMaxAmount, setATOMMaxAmount] = useState(0);\n\tconst [NEARMaxAmount, setNEARMaxAmount] = useState(0);\n\tconst [ETHMaxAmount, setETHMaxAmount] = useState(0);\n\tconst [USNMaxAmount, setUSNMaxAmount] = useState(0);\n\tconst [firstCurrAmount, setFirstCurrAmount] = useState<string>(\"\");\n\tconst [secCurrAmount, setSecCurrAmount] = useState<string>(\"\");\n\tconst [ETHwalletKey, setETHWalletKey] = useState(\"\");\n\n\tconst [isload, setIsload] = useState(false);\n\tconst [hexString, sHexString] = useState(\"\");\n\tconst [networkSource, setNetworkSource] = useState(\"ETH\");\n\tconst [networkDestination, setNetworkDestination] = useState(\"TON\");\n\tconst [rpcEthStatus, setRpcEthStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Ethereum RPC\",\n\t\tkey: \"eth\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcSolStatus, setRpcSolStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Solana RPC\",\n\t\tkey: \"sol\",\n\t\tstatus: false,\n\t});\n\tconst [rpcNearStatus, setRpcNearStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Near RPC\",\n\t\tkey: \"near\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcAuroraStatus, setRpcAuroraStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Aurora RPC\",\n\t\tkey: \"aurora\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcTonStatus, setRpcTonStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Ton RPC\",\n\t\tkey: \"ton\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcCosmosStatus, setRpcCosmosStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Cosmos RPC\",\n\t\tkey: \"atom\",\n\t\tstatus: false,\n\t});\n\tconst [backStatus, setBackStatus] = useState<{\n\t\tkey: string;\n\t\ttitle: string;\n\t\tstatus: boolean;\n\t}>({\n\t\ttitle: \"Tonana oracle\",\n\t\tkey: \"tnn\",\n\t\tstatus: false,\n\t});\n\n\tconst [rpcsStatuses, setRpcsStatuses] = useState<\n\t\tArray<{\n\t\t\tkey: string;\n\t\t\ttitle: string;\n\t\t\tstatus: boolean;\n\t\t}>\n\t>([]);\n\n\tuseEffect(() => {\n\t\tsetRpcsStatuses([\n\t\t\tbackStatus,\n\t\t\trpcTonStatus,\n\t\t\trpcEthStatus,\n\t\t\trpcNearStatus,\n\t\t\trpcSolStatus,\n\t\t\trpcCosmosStatus,\n\t\t\trpcAuroraStatus,\n\t\t]);\n\t}, [\n\t\trpcAuroraStatus,\n\t\trpcNearStatus,\n\t\trpcSolStatus,\n\t\trpcTonStatus,\n\t\trpcCosmosStatus,\n\t\trpcEthStatus,\n\t\tbackStatus,\n\t]);\n\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst transactionHashes = searchParams.get(\"transactionHashes\");\n\tconst nearAccountId = searchParams.get(\"account_id\");\n\tconst isusn = searchParams.get(\"isusn\");\n\tconst isnear = searchParams.get(\"isnear\");\n\n\tvar connection = new Connection(\n\t\t\"https://solana-mainnet.g.alchemy.com/v2/B9sqdnSJnFWSdKlCTFqEQjMr8pnj7RAb\"\n\t);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tsetRpcTonStatus(await tonRpcStatus());\n\t\t})();\n\t\t(async () => {\n\t\t\tsetRpcSolStatus(await solRpcStatus());\n\t\t})();\n\t\t(async () => {\n\t\t\tsetRpcNearStatus(await nearRpcStatus());\n\t\t})();\n\t\t(async () => {\n\t\t\tsetRpcAuroraStatus(await auroraRpcStatus());\n\t\t})();\n\t\t(async () => {\n\t\t\tsetRpcEthStatus(await ethRpcStatus());\n\t\t})();\n\t\t(async () => {\n\t\t\tsetRpcCosmosStatus(await cosmosRpcStatus());\n\t\t})();\n\t\t(async () => {\n\t\t\tsetBackStatus(await callBackStatus());\n\t\t})();\n\n\t\tsetInterval(() => {\n\t\t\t(async () => {\n\t\t\t\tsetRpcTonStatus(await tonRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcSolStatus(await solRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcNearStatus(await nearRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcAuroraStatus(await auroraRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcEthStatus(await ethRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetRpcCosmosStatus(await cosmosRpcStatus());\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tsetBackStatus(await callBackStatus());\n\t\t\t})();\n\t\t}, 30000);\n\n\t\tgetTONMaxAmount(setTONMaxAmount);\n\t\tgetSOLMaxAmount(setSOLMaxAmount);\n\t\tgetATOMMaxAmount(setATOMMaxAmount);\n\t\tgetAURMaxAmount(setAURMaxAmount);\n\t\tgetETHMaxAmount(setETHMaxAmount);\n\n\t\tfetchMarkets(stu, ssu, sau, snu, sauruu, susn, sethu);\n\t\tsetInterval(() => {\n\t\t\tfetchMarkets(stu, ssu, sau, snu, sauruu, susn, sethu);\n\t\t}, 15000);\n\n\t\tsHexString(\n\t\t\tArray(16)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map(() => Math.round(Math.random() * 0xf).toString(16))\n\t\t\t\t.join(\"\")\n\t\t);\n\n\t\tif (localStorage.getItem(\"tonana_data\") && nearAccountId) {\n\t\t\t//@ts-ignore\n\t\t\tconst storedData = JSON.parse(localStorage.getItem(\"tonana_data\"));\n\t\t\tsex(storedData.ex);\n\t\t\tsetSOLWalletKey(storedData.SOLwalletKey);\n\t\t\tsetTONwalletKey(storedData.TONwalletKey);\n\t\t\tsetAURwalletKey(storedData.AURwalletKey);\n\t\t\tsetNEARwalletKey(storedData.NEARwalletKey);\n\t\t\tsetATOMwalletKey(storedData.ATOMwalletKey);\n\t\t\tsetETHWalletKey(storedData.ETHwalletKey);\n\t\t\tsHexString(storedData.hexString);\n\t\t\tsetNetworkSource(storedData.networkSource);\n\t\t\tsetNetworkDestination(storedData.networkDestination);\n\t\t}\n\n\t\tinitializeWalletNEAR(setNEARMaxAmount, setNEARwalletKey, setUSNMaxAmount);\n\t\tif (isnear)\n\t\t\tmakeNEARTrxAfterLoad(transactionHashes, setSearchParams, searchParams);\n\t\tif (isusn)\n\t\t\tmakeUSNTrxAfterLoad(transactionHashes, setSearchParams, searchParams);\n\t\tmessage.success(\"Use Chrome with TonWallet & Phantom extensions\", 10);\n\t\tmessage.success(\"Connect both and make trx, then wait a little bit\", 11);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t\"tonana_data\",\n\t\t\tJSON.stringify({\n\t\t\t\tex,\n\t\t\t\tSOLwalletKey,\n\t\t\t\tTONwalletKey,\n\t\t\t\tETHwalletKey,\n\t\t\t\tAURwalletKey,\n\t\t\t\tNEARwalletKey,\n\t\t\t\tATOMwalletKey,\n\t\t\t\thexString,\n\t\t\t\tnetworkSource,\n\t\t\t\tnetworkDestination,\n\t\t\t})\n\t\t);\n\t}, [\n\t\tex,\n\t\tSOLwalletKey,\n\t\tTONwalletKey,\n\t\tAURwalletKey,\n\t\tETHwalletKey,\n\t\tNEARwalletKey,\n\t\tATOMwalletKey,\n\t\thexString,\n\t\tnetworkSource,\n\t\tnetworkDestination,\n\t]);\n\n\tconst btnProps = {\n\t\tconnectWalletSOL,\n\t\tconnectWalletETH,\n\t\tsetSOLWalletKey,\n\t\tsetETHWalletKey,\n\t\tconnectWalletTON,\n\t\tsetTONwalletKey,\n\t\tsetAURwalletKey,\n\t\tconnectWalletNEAR,\n\t\tsetNEARwalletKey,\n\t\tconnectWalletATOM,\n\t\tconnectWalletAUR,\n\t\tsetATOMwalletKey,\n\t\tTONwalletKey,\n\t\tAURwalletKey,\n\t\tSOLwalletKey,\n\t\tNEARwalletKey,\n\t\tATOMwalletKey,\n\t\tETHwalletKey,\n\t};\n\n\tconst menuSource = menuBuilder(networkDestination, setNetworkSource);\n\tconst menuDestination = menuBuilder(networkSource, setNetworkDestination);\n\tconst coinIco = icoBuilder(networkSource);\n\tconst coinIcoDest = icoBuilder(networkDestination);\n\tconst btnDest = generateBtn(networkDestination, btnProps);\n\tconst btnSource = generateBtn(networkSource, btnProps);\n\n\tconst swap = () => {\n\t\tsetNetworkDestination(networkSource);\n\t\tsetNetworkSource(networkDestination);\n\t\tsetFirstCurrAmount(secCurrAmount);\n\t\tsetSecCurrAmount(firstCurrAmount);\n\t\tsex(!ex);\n\t};\n\n\tconst btnSelectSource = (\n\t\t<>\n\t\t\t<Dropdown overlay={menuSource} placement=\"bottom\">\n\t\t\t\t<Button id={\"selectCoin\"}>\n\t\t\t\t\t<img src={coinIco} alt={\"#\"} />\n\t\t\t\t\t{networkSource}\n\t\t\t\t\t<DownOutlined />\n\t\t\t\t</Button>\n\t\t\t</Dropdown>\n\t\t</>\n\t);\n\n\tconst btnSelectDirection = (\n\t\t<>\n\t\t\t<Dropdown overlay={menuDestination} placement=\"bottom\">\n\t\t\t\t<Button id={\"selectCoin\"}>\n\t\t\t\t\t<img src={coinIcoDest} alt={\"#\"} />\n\t\t\t\t\t{networkDestination}\n\t\t\t\t\t<DownOutlined />\n\t\t\t\t</Button>\n\t\t\t</Dropdown>\n\t\t</>\n\t);\n\n\tconst changeDirection = (\n\t\t<div id={\"directionBtn\"}>\n\t\t\t<SwapOutlined onClick={swap} />\n\t\t</div>\n\t);\n\n\tconst fromProps = {\n\t\tau,\n\t\tsu,\n\t\ttu,\n\t\tnu,\n\t\tusnu,\n\t\tauru,\n\t\tethu,\n\t\tATOMwalletKey,\n\t\tETHwalletKey,\n\t\tSOLwalletKey,\n\t\tTONwalletKey,\n\t\tAURwalletKey,\n\t\tNEARwalletKey,\n\t\tATOMMaxAmount,\n\t\tSOLMaxAmount,\n\t\tETHMaxAmount,\n\t\tAURMaxAmount,\n\t\tTONMaxAmount,\n\t\tUSNMaxAmount,\n\t\tNEARMaxAmount,\n\t\tbtnSelectSource,\n\t\tbtnSelectDirection,\n\t\tbtnDest,\n\t\tbtnSource,\n\t\tsetIsload,\n\t\tisload,\n\t\thexString,\n\t\tchangeDirection,\n\t\tconnection,\n\t\tdirectionNetwork: networkDestination.toLowerCase(),\n\t\tnetworkSource: networkSource.toLowerCase(),\n\t\tsetFirstCurrAmount,\n\t\tsetSecCurrAmount,\n\t\tfirstCurrAmount,\n\t\tsecCurrAmount,\n\t\trpcsStatuses,\n\t};\n\n\tconst tvl =\n\t\tAURMaxAmount * auru +\n\t\tUSNMaxAmount * usnu +\n\t\tETHMaxAmount * ethu +\n\t\tNEARMaxAmount * nu +\n\t\tATOMMaxAmount * au +\n\t\tTONMaxAmount * tu +\n\t\tSOLMaxAmount * su;\n\t// console.log(\"aur\", AURMaxAmount * auru);\n\t// console.log(\"sol\", SOLMaxAmount * su);\n\t// console.log(\"ton\", TONMaxAmount * tu);\n\t// console.log(\"atom\", ATOMMaxAmount * au);\n\t// console.log(\"near\", NEARMaxAmount * nu);\n\t// console.log(\"eth\", ETHMaxAmount * ethu);\n\t// console.log(\"usn\", USNMaxAmount * usnu);\n\t// console.log(\"total\", tvl);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className=\"App\">\n\t\t\t\t<SwapForm {...fromProps} />\n\t\t\t\t{isload ? <Loader src={bnn} /> : null}\n\t\t\t</div>\n\t\t\t<Rpcs rpcsStatuses={rpcsStatuses} />\n\t\t\t<Social />\n\t\t\t<div className=\"version\">\n\t\t\t\tTonana TVL: ${tvl.toFixed(2)}\n\t\t\t\t<br />\n\t\t\t\tv1.0.84 (alpha)\n\t\t\t</div>\n\t\t\t<Gstyles />\n\t\t</>\n\t);\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,MAAM;AAChD,SAASC,YAAY,EAAEC,YAAY,QAAQ,mBAAmB;AAC9D,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,UAAU,QAAuB,iBAAiB;AAE3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,oBAAoB,QAAQ,qCAAqC;AAC1E,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,cAAc,MAAM,yBAAyB;AAEpD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAO,oBAAoB;AAAC;AAAA;AAAA;AAI5B,MAAMC,GAAG,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,EAAE,EAAEC,GAAG,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAChC,MAAM,CAAC0C,EAAE,EAAEC,GAAG,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAM,CAAC4C,EAAE,EAAEC,GAAG,CAAC,GAAG7C,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAM,CAAC8C,EAAE,EAAEC,GAAG,CAAC,GAAG/C,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACgD,EAAE,EAAEC,GAAG,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACkD,IAAI,EAAEC,IAAI,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC;EAChC,MAAM,CAACoD,IAAI,EAAEC,MAAM,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACsD,IAAI,EAAEC,KAAK,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0D,YAAY,EAAEC,eAAe,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4D,aAAa,EAAEC,gBAAgB,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC8D,aAAa,EAAEC,gBAAgB,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgE,YAAY,EAAEC,eAAe,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkE,YAAY,EAAEC,eAAe,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACoE,YAAY,EAAEC,eAAe,CAAC,GAAGrE,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACsE,YAAY,EAAEC,eAAe,CAAC,GAAGvE,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACwE,aAAa,EAAEC,gBAAgB,CAAC,GAAGzE,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC0E,aAAa,EAAEC,gBAAgB,CAAC,GAAG3E,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC4E,YAAY,EAAEC,eAAe,CAAC,GAAG7E,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC8E,YAAY,EAAEC,eAAe,CAAC,GAAG/E,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgF,eAAe,EAAEC,kBAAkB,CAAC,GAAGjF,QAAQ,CAAS,EAAE,CAAC;EAClE,MAAM,CAACkF,aAAa,EAAEC,gBAAgB,CAAC,GAAGnF,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACoF,YAAY,EAAEC,eAAe,CAAC,GAAGrF,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACsF,MAAM,EAAEC,SAAS,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACwF,SAAS,EAAEC,UAAU,CAAC,GAAGzF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0F,aAAa,EAAEC,gBAAgB,CAAC,GAAG3F,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC4F,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC8F,YAAY,EAAEC,eAAe,CAAC,GAAG/F,QAAQ,CAI7C;IACFgG,KAAK,EAAE,cAAc;IACrBC,GAAG,EAAE,KAAK;IACVC,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpG,QAAQ,CAI7C;IACFgG,KAAK,EAAE,YAAY;IACnBC,GAAG,EAAE,KAAK;IACVC,MAAM,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGtG,QAAQ,CAI/C;IACFgG,KAAK,EAAE,UAAU;IACjBC,GAAG,EAAE,MAAM;IACXC,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGxG,QAAQ,CAInD;IACFgG,KAAK,EAAE,YAAY;IACnBC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAG1G,QAAQ,CAI7C;IACFgG,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,KAAK;IACVC,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAG5G,QAAQ,CAInD;IACFgG,KAAK,EAAE,YAAY;IACnBC,GAAG,EAAE,MAAM;IACXC,MAAM,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAG9G,QAAQ,CAIzC;IACFgG,KAAK,EAAE,eAAe;IACtBC,GAAG,EAAE,KAAK;IACVC,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGhH,QAAQ,CAM9C,EAAE,CAAC;EAELD,SAAS,CAAC,MAAM;IACfiH,eAAe,CAAC,CACfH,UAAU,EACVJ,YAAY,EACZX,YAAY,EACZO,aAAa,EACbF,YAAY,EACZQ,eAAe,EACfJ,eAAe,CACf,CAAC;EACH,CAAC,EAAE,CACFA,eAAe,EACfF,aAAa,EACbF,YAAY,EACZM,YAAY,EACZE,eAAe,EACfb,YAAY,EACZe,UAAU,CACV,CAAC;EAEF,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAG5G,eAAe,EAAE;EACzD,MAAM6G,iBAAiB,GAAGF,YAAY,CAACG,GAAG,CAAC,mBAAmB,CAAC;EAC/D,MAAMC,aAAa,GAAGJ,YAAY,CAACG,GAAG,CAAC,YAAY,CAAC;EACpD,MAAME,KAAK,GAAGL,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;EACvC,MAAMG,MAAM,GAAGN,YAAY,CAACG,GAAG,CAAC,QAAQ,CAAC;EAEzC,IAAII,UAAU,GAAG,IAAIjH,UAAU,CAC9B,0EAA0E,CAC1E;EAEDR,SAAS,CAAC,MAAM;IACf,CAAC,YAAY;MACZ2G,eAAe,CAAC,MAAM3E,YAAY,EAAE,CAAC;IACtC,CAAC,GAAG;IACJ,CAAC,YAAY;MACZqE,eAAe,CAAC,MAAMpE,YAAY,EAAE,CAAC;IACtC,CAAC,GAAG;IACJ,CAAC,YAAY;MACZsE,gBAAgB,CAAC,MAAMnE,aAAa,EAAE,CAAC;IACxC,CAAC,GAAG;IACJ,CAAC,YAAY;MACZqE,kBAAkB,CAAC,MAAMvE,eAAe,EAAE,CAAC;IAC5C,CAAC,GAAG;IACJ,CAAC,YAAY;MACZ8D,eAAe,CAAC,MAAM3D,YAAY,EAAE,CAAC;IACtC,CAAC,GAAG;IACJ,CAAC,YAAY;MACZwE,kBAAkB,CAAC,MAAM1E,eAAe,EAAE,CAAC;IAC5C,CAAC,GAAG;IACJ,CAAC,YAAY;MACZ4E,aAAa,CAAC,MAAMzE,cAAc,EAAE,CAAC;IACtC,CAAC,GAAG;IAEJoF,WAAW,CAAC,MAAM;MACjB,CAAC,YAAY;QACZf,eAAe,CAAC,MAAM3E,YAAY,EAAE,CAAC;MACtC,CAAC,GAAG;MACJ,CAAC,YAAY;QACZqE,eAAe,CAAC,MAAMpE,YAAY,EAAE,CAAC;MACtC,CAAC,GAAG;MACJ,CAAC,YAAY;QACZsE,gBAAgB,CAAC,MAAMnE,aAAa,EAAE,CAAC;MACxC,CAAC,GAAG;MACJ,CAAC,YAAY;QACZqE,kBAAkB,CAAC,MAAMvE,eAAe,EAAE,CAAC;MAC5C,CAAC,GAAG;MACJ,CAAC,YAAY;QACZ8D,eAAe,CAAC,MAAM3D,YAAY,EAAE,CAAC;MACtC,CAAC,GAAG;MACJ,CAAC,YAAY;QACZwE,kBAAkB,CAAC,MAAM1E,eAAe,EAAE,CAAC;MAC5C,CAAC,GAAG;MACJ,CAAC,YAAY;QACZ4E,aAAa,CAAC,MAAMzE,cAAc,EAAE,CAAC;MACtC,CAAC,GAAG;IACL,CAAC,EAAE,KAAK,CAAC;IAET5B,eAAe,CAAC8D,eAAe,CAAC;IAChC5D,eAAe,CAAC0D,eAAe,CAAC;IAChC3D,gBAAgB,CAAC+D,gBAAgB,CAAC;IAClChD,eAAe,CAAC0C,eAAe,CAAC;IAChCzC,eAAe,CAACmD,eAAe,CAAC;IAEhCjE,YAAY,CAAC+B,GAAG,EAAEE,GAAG,EAAEE,GAAG,EAAEE,GAAG,EAAEI,MAAM,EAAEF,IAAI,EAAEI,KAAK,CAAC;IACrDkE,WAAW,CAAC,MAAM;MACjB7G,YAAY,CAAC+B,GAAG,EAAEE,GAAG,EAAEE,GAAG,EAAEE,GAAG,EAAEI,MAAM,EAAEF,IAAI,EAAEI,KAAK,CAAC;IACtD,CAAC,EAAE,KAAK,CAAC;IAETkC,UAAU,CACTiC,KAAK,CAAC,EAAE,CAAC,CACPC,IAAI,CAAC,EAAE,CAAC,CACRC,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC,CACvDC,IAAI,CAAC,EAAE,CAAC,CACV;IAED,IAAIC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAId,aAAa,EAAE;MACzD;MACA,MAAMe,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;MAClE1F,GAAG,CAAC2F,UAAU,CAAC5F,EAAE,CAAC;MAClBiB,eAAe,CAAC2E,UAAU,CAAC5E,YAAY,CAAC;MACxCG,eAAe,CAACyE,UAAU,CAAC1E,YAAY,CAAC;MACxCO,eAAe,CAACmE,UAAU,CAACpE,YAAY,CAAC;MACxCH,gBAAgB,CAACuE,UAAU,CAACxE,aAAa,CAAC;MAC1CG,gBAAgB,CAACqE,UAAU,CAACtE,aAAa,CAAC;MAC1CuB,eAAe,CAAC+C,UAAU,CAAChD,YAAY,CAAC;MACxCK,UAAU,CAAC2C,UAAU,CAAC5C,SAAS,CAAC;MAChCG,gBAAgB,CAACyC,UAAU,CAAC1C,aAAa,CAAC;MAC1CG,qBAAqB,CAACuC,UAAU,CAACxC,kBAAkB,CAAC;IACrD;IAEAvE,oBAAoB,CAACsD,gBAAgB,EAAEd,gBAAgB,EAAEkB,eAAe,CAAC;IACzE,IAAIwC,MAAM,EACTjG,oBAAoB,CAAC6F,iBAAiB,EAAED,eAAe,EAAED,YAAY,CAAC;IACvE,IAAIK,KAAK,EACR/F,mBAAmB,CAAC4F,iBAAiB,EAAED,eAAe,EAAED,YAAY,CAAC;IACtE/G,OAAO,CAACqI,OAAO,CAAC,gDAAgD,EAAE,EAAE,CAAC;IACrErI,OAAO,CAACqI,OAAO,CAAC,mDAAmD,EAAE,EAAE,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAENxI,SAAS,CAAC,MAAM;IACfmI,YAAY,CAACM,OAAO,CACnB,aAAa,EACbH,IAAI,CAACI,SAAS,CAAC;MACdjG,EAAE;MACFgB,YAAY;MACZE,YAAY;MACZ0B,YAAY;MACZpB,YAAY;MACZJ,aAAa;MACbE,aAAa;MACb0B,SAAS;MACTE,aAAa;MACbE;IACD,CAAC,CAAC,CACF;EACF,CAAC,EAAE,CACFpD,EAAE,EACFgB,YAAY,EACZE,YAAY,EACZM,YAAY,EACZoB,YAAY,EACZxB,aAAa,EACbE,aAAa,EACb0B,SAAS,EACTE,aAAa,EACbE,kBAAkB,CAClB,CAAC;EAEF,MAAM8C,QAAQ,GAAG;IAChB7H,gBAAgB;IAChBW,gBAAgB;IAChBiC,eAAe;IACf4B,eAAe;IACfrE,gBAAgB;IAChB2C,eAAe;IACfM,eAAe;IACfhD,iBAAiB;IACjB4C,gBAAgB;IAChB/C,iBAAiB;IACjBC,gBAAgB;IAChBgD,gBAAgB;IAChBL,YAAY;IACZM,YAAY;IACZR,YAAY;IACZI,aAAa;IACbE,aAAa;IACbsB;EACD,CAAC;EAED,MAAMuD,UAAU,GAAGzH,WAAW,CAAC0E,kBAAkB,EAAED,gBAAgB,CAAC;EACpE,MAAMiD,eAAe,GAAG1H,WAAW,CAACwE,aAAa,EAAEG,qBAAqB,CAAC;EACzE,MAAMgD,OAAO,GAAGzH,UAAU,CAACsE,aAAa,CAAC;EACzC,MAAMoD,WAAW,GAAG1H,UAAU,CAACwE,kBAAkB,CAAC;EAClD,MAAMmD,OAAO,GAAG5H,WAAW,CAACyE,kBAAkB,EAAE8C,QAAQ,CAAC;EACzD,MAAMM,SAAS,GAAG7H,WAAW,CAACuE,aAAa,EAAEgD,QAAQ,CAAC;EAEtD,MAAMO,IAAI,GAAG,MAAM;IAClBpD,qBAAqB,CAACH,aAAa,CAAC;IACpCC,gBAAgB,CAACC,kBAAkB,CAAC;IACpCX,kBAAkB,CAACC,aAAa,CAAC;IACjCC,gBAAgB,CAACH,eAAe,CAAC;IACjCvC,GAAG,CAAC,CAACD,EAAE,CAAC;EACT,CAAC;EAED,MAAM0G,eAAe,gBACpB;IAAA,uBACC,QAAC,QAAQ;MAAC,OAAO,EAAEP,UAAW;MAAC,SAAS,EAAC,QAAQ;MAAA,uBAChD,QAAC,MAAM;QAAC,EAAE,EAAE,YAAa;QAAA,wBACxB;UAAK,GAAG,EAAEE,OAAQ;UAAC,GAAG,EAAE;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,EAC9BnD,aAAa,eACd,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA;EACC,iBAEZ;EAED,MAAMyD,kBAAkB,gBACvB;IAAA,uBACC,QAAC,QAAQ;MAAC,OAAO,EAAEP,eAAgB;MAAC,SAAS,EAAC,QAAQ;MAAA,uBACrD,QAAC,MAAM;QAAC,EAAE,EAAE,YAAa;QAAA,wBACxB;UAAK,GAAG,EAAEE,WAAY;UAAC,GAAG,EAAE;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,EAClClD,kBAAkB,eACnB,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA;EACC,iBAEZ;EAED,MAAMwD,eAAe,gBACpB;IAAK,EAAE,EAAE,cAAe;IAAA,uBACvB,QAAC,YAAY;MAAC,OAAO,EAAEH;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAEhC;EAED,MAAMI,SAAS,GAAG;IACjBvG,EAAE;IACFF,EAAE;IACFF,EAAE;IACFM,EAAE;IACFE,IAAI;IACJE,IAAI;IACJE,IAAI;IACJQ,aAAa;IACbsB,YAAY;IACZ5B,YAAY;IACZE,YAAY;IACZM,YAAY;IACZJ,aAAa;IACbY,aAAa;IACbJ,YAAY;IACZQ,YAAY;IACZV,YAAY;IACZI,YAAY;IACZQ,YAAY;IACZJ,aAAa;IACbwE,eAAe;IACfC,kBAAkB;IAClBJ,OAAO;IACPC,SAAS;IACTzD,SAAS;IACTD,MAAM;IACNE,SAAS;IACT4D,eAAe;IACf5B,UAAU;IACV8B,gBAAgB,EAAE1D,kBAAkB,CAAC2D,WAAW,EAAE;IAClD7D,aAAa,EAAEA,aAAa,CAAC6D,WAAW,EAAE;IAC1CtE,kBAAkB;IAClBE,gBAAgB;IAChBH,eAAe;IACfE,aAAa;IACb6B;EACD,CAAC;EAED,MAAMyC,GAAG,GACRtF,YAAY,GAAGd,IAAI,GACnB0B,YAAY,GAAG5B,IAAI,GACnB0B,YAAY,GAAGtB,IAAI,GACnBoB,aAAa,GAAG1B,EAAE,GAClBwB,aAAa,GAAG1B,EAAE,GAClBwB,YAAY,GAAG5B,EAAE,GACjB0B,YAAY,GAAGxB,EAAE;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACC;IAAA,wBACC,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,KAAK;MAAA,wBACnB,QAAC,QAAQ;QAAA,GAAKyG;MAAS;QAAA;QAAA;QAAA;MAAA,QAAI,EAC1B/D,MAAM,gBAAG,QAAC,MAAM;QAAC,GAAG,EAAEmE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,GAAG,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,eACN,QAAC,IAAI;MAAC,YAAY,EAAE1C;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,SAAS;MAAA,4BACTyC,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC,eAC5B;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAED,eACN,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEL,CAAC;AAAC,GAxYInH,GAAG;EAAA,QA6HgCjC,eAAe;AAAA;AAAA,KA7HlDiC,GAAG;AA0YT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}