{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _Wallet_client, _Wallet_contract;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Wallet = exports.validateWalletType = exports.allTypes = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar ton_crypto_1 = require(\"ton-crypto\");\nvar __1 = require(\"..\");\nvar WalletV1R2Source_1 = require(\"../contracts/sources/WalletV1R2Source\");\nvar WalletV1R3Source_1 = require(\"../contracts/sources/WalletV1R3Source\");\nvar WalletV2R1Source_1 = require(\"../contracts/sources/WalletV2R1Source\");\nvar WalletV2R2Source_1 = require(\"../contracts/sources/WalletV2R2Source\");\nvar WalletV3R1Source_1 = require(\"../contracts/sources/WalletV3R1Source\");\nvar WalletV3R2Source_1 = require(\"../contracts/sources/WalletV3R2Source\");\nvar WalletV4Source_1 = require(\"../contracts/sources/WalletV4Source\");\nvar WalletContract_1 = require(\"../contracts/WalletContract\");\nvar CommonMessageInfo_1 = require(\"../messages/CommonMessageInfo\");\nvar InternalMessage_1 = require(\"../messages/InternalMessage\");\nvar SendMode_1 = require(\"./SendMode\");\n// Wallet Contract Priority\nexports.allTypes = ['org.ton.wallets.simple.r2', 'org.ton.wallets.simple.r3', 'org.ton.wallets.v2', 'org.ton.wallets.v2.r2', 'org.ton.wallets.v4', 'org.ton.wallets.v3.r2', 'org.ton.wallets.v3'];\nfunction validateWalletType(src) {\n  if (src === 'org.ton.wallets.simple' || src === 'org.ton.wallets.simple.r2' || src === 'org.ton.wallets.simple.r3' || src === 'org.ton.wallets.v2' || src === 'org.ton.wallets.v2.r2' || src === 'org.ton.wallets.v3' || src === 'org.ton.wallets.v3.r2' || src === 'org.ton.wallets.v4') {\n    return src;\n  }\n  return null;\n}\nexports.validateWalletType = validateWalletType;\nfunction createContract(client, type, publicKey, workchain) {\n  if (type === 'org.ton.wallets.simple') {\n    throw Error('Unsupported wallet');\n  } else if (type === 'org.ton.wallets.simple.r2') {\n    return WalletContract_1.WalletContract.create(client, WalletV1R2Source_1.WalletV1R2Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else if (type === 'org.ton.wallets.simple.r3') {\n    return WalletContract_1.WalletContract.create(client, WalletV1R3Source_1.WalletV1R3Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else if (type === 'org.ton.wallets.v2') {\n    return WalletContract_1.WalletContract.create(client, WalletV2R1Source_1.WalletV2R1Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else if (type === 'org.ton.wallets.v2.r2') {\n    return WalletContract_1.WalletContract.create(client, WalletV2R2Source_1.WalletV2R2Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else if (type === 'org.ton.wallets.v3') {\n    return WalletContract_1.WalletContract.create(client, WalletV3R1Source_1.WalletV3R1Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else if (type === 'org.ton.wallets.v3.r2') {\n    return WalletContract_1.WalletContract.create(client, WalletV3R2Source_1.WalletV3R2Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else if (type === 'org.ton.wallets.v4') {\n    return WalletContract_1.WalletContract.create(client, WalletV4Source_1.WalletV4Source.create({\n      publicKey: publicKey,\n      workchain: workchain\n    }));\n  } else {\n    throw Error('Unknown wallet type: ' + type);\n  }\n}\nvar Wallet = /*#__PURE__*/function () {\n  function Wallet(client, address) {\n    _classCallCheck(this, Wallet);\n    _Wallet_client.set(this, void 0);\n    _Wallet_contract.set(this, null);\n    __classPrivateFieldSet(this, _Wallet_client, client, \"f\");\n    this.address = address;\n  }\n  _createClass(Wallet, [{\n    key: \"prepared\",\n    get: function get() {\n      return !!__classPrivateFieldGet(this, _Wallet_contract, \"f\");\n    }\n  }, {\n    key: \"getSeqNo\",\n    value: function () {\n      var _getSeqNo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return __classPrivateFieldGet(this, _Wallet_client, \"f\").isContractDeployed(this.address);\n              case 2:\n                if (!_context.sent) {\n                  _context.next = 9;\n                  break;\n                }\n                _context.next = 5;\n                return __classPrivateFieldGet(this, _Wallet_client, \"f\").callGetMethod(this.address, 'seqno');\n              case 5:\n                res = _context.sent;\n                return _context.abrupt(\"return\", parseInt(res.stack[0][1], 16));\n              case 9:\n                return _context.abrupt(\"return\", 0);\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getSeqNo() {\n        return _getSeqNo.apply(this, arguments);\n      }\n      return getSeqNo;\n    }()\n  }, {\n    key: \"prepare\",\n    value: function prepare(workchain, publicKey) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'org.ton.wallets.v3';\n      var contra = createContract(__classPrivateFieldGet(this, _Wallet_client, \"f\"), type, publicKey, workchain);\n      if (!contra.address.equals(this.address)) {\n        throw Error('Contract have different address');\n      }\n      __classPrivateFieldSet(this, _Wallet_contract, contra, \"f\");\n    }\n  }, {\n    key: \"prepareFromSource\",\n    value: function prepareFromSource(source) {\n      var contra = WalletContract_1.WalletContract.create(__classPrivateFieldGet(this, _Wallet_client, \"f\"), source);\n      if (!contra.address.equals(this.address)) {\n        throw Error('Contract have different address');\n      }\n      __classPrivateFieldSet(this, _Wallet_contract, contra, \"f\");\n    }\n    /**\n     * Transfers value to specified address\n     */\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(args) {\n        var contract, payload, transfer;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                contract = __classPrivateFieldGet(this, _Wallet_contract, \"f\");\n                if (contract) {\n                  _context2.next = 3;\n                  break;\n                }\n                throw Error('Please, prepare wallet first');\n              case 3:\n                // Resolve payload\n                payload = null;\n                if (args.payload) {\n                  if (typeof args.payload === 'string') {\n                    payload = new __1.CommentMessage(args.payload);\n                  } else if (Buffer.isBuffer(args.payload)) {\n                    payload = new __1.BinaryMessage(args.payload);\n                  } else if (args.payload instanceof __1.Cell) {\n                    payload = new __1.CellMessage(args.payload);\n                  }\n                }\n                // Check transfer\n                _context2.next = 7;\n                return contract.createTransfer({\n                  secretKey: args.secretKey,\n                  seqno: args.seqno,\n                  sendMode: args.sendMode || SendMode_1.SendMode.IGNORE_ERRORS + SendMode_1.SendMode.PAY_GAS_SEPARATLY,\n                  timeout: args.timeout,\n                  order: new InternalMessage_1.InternalMessage({\n                    to: args.to,\n                    value: args.value,\n                    bounce: args.bounce,\n                    body: new CommonMessageInfo_1.CommonMessageInfo({\n                      body: payload\n                    })\n                  })\n                });\n              case 7:\n                transfer = _context2.sent;\n                _context2.next = 10;\n                return __classPrivateFieldGet(this, _Wallet_client, \"f\").sendExternalMessage(contract, transfer);\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function transfer(_x) {\n        return _transfer.apply(this, arguments);\n      }\n      return transfer;\n    }()\n    /**\n     * Signing transfer request. Could be done offline.\n     * @param args sign\n     * @returns\n     */\n  }, {\n    key: \"transferSign\",\n    value: function transferSign(args) {\n      var contract = __classPrivateFieldGet(this, _Wallet_contract, \"f\");\n      if (!contract) {\n        throw Error('Please, prepare wallet first');\n      }\n      // Resolve payload\n      var payload = null;\n      if (args.payload) {\n        if (typeof args.payload === 'string') {\n          payload = new __1.CommentMessage(args.payload);\n        } else if (Buffer.isBuffer(args.payload)) {\n          payload = new __1.BinaryMessage(args.payload);\n        } else if (args.payload instanceof __1.Cell) {\n          payload = new __1.CellMessage(args.payload);\n        }\n      }\n      // Transfer\n      var transfer = contract.createTransfer({\n        secretKey: args.secretKey,\n        seqno: args.seqno,\n        sendMode: args.sendMode || SendMode_1.SendMode.IGNORE_ERRORS + SendMode_1.SendMode.PAY_GAS_SEPARATLY,\n        timeout: args.timeout,\n        order: new InternalMessage_1.InternalMessage({\n          to: args.to,\n          value: args.value,\n          bounce: args.bounce,\n          body: new CommonMessageInfo_1.CommonMessageInfo({\n            body: payload\n          })\n        })\n      });\n      // External message\n      var message = new __1.ExternalMessage({\n        to: contract.address,\n        body: new CommonMessageInfo_1.CommonMessageInfo({\n          stateInit: new __1.StateInit({\n            code: contract.source.initialCode,\n            data: contract.source.initialData\n          }),\n          body: new __1.CellMessage(transfer)\n        })\n      });\n      var res = new __1.Cell();\n      message.writeTo(res);\n      return res;\n    }\n    /**\n     * Commit prepared transfer\n     * @param transfer signed transfer for commit\n     */\n  }, {\n    key: \"transferCommit\",\n    value: function () {\n      var _transferCommit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(transfer) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return __classPrivateFieldGet(this, _Wallet_client, \"f\").sendFile(transfer.toBoc({\n                  idx: false\n                }));\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function transferCommit(_x2) {\n        return _transferCommit.apply(this, arguments);\n      }\n      return transferCommit;\n    }()\n  }], [{\n    key: \"open\",\n    value: function open(client, address) {\n      return new Wallet(client, address);\n    }\n  }, {\n    key: \"openDefault\",\n    value: function openDefault(client, workchain, secretKey) {\n      var publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n      var c = createContract(client, 'org.ton.wallets.v3', publicKey, workchain);\n      var w = new Wallet(client, c.address);\n      w.prepare(workchain, publicKey, 'org.ton.wallets.v3');\n      return w;\n    }\n  }, {\n    key: \"openByType\",\n    value: function openByType(client, workchain, secretKey, type) {\n      var publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n      var c = createContract(client, type, publicKey, workchain);\n      var w = new Wallet(client, c.address);\n      w.prepare(workchain, publicKey, type);\n      return w;\n    }\n  }, {\n    key: \"openFromSource\",\n    value: function openFromSource(client, source) {\n      var address = (0, __1.contractAddress)(source);\n      var w = new Wallet(client, address);\n      w.prepareFromSource(source);\n      return w;\n    }\n  }, {\n    key: \"findActiveBySecretKey\",\n    value: function () {\n      var _findActiveBySecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(client, workchain, secretKey) {\n        var publicKey, types, _iterator, _step, type, contra, deployed, balance;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n                types = [];\n                _iterator = _createForOfIteratorHelper(exports.allTypes);\n                _context4.prev = 3;\n                _iterator.s();\n              case 5:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 17;\n                  break;\n                }\n                type = _step.value;\n                contra = createContract(client, type, publicKey, workchain);\n                _context4.next = 10;\n                return client.isContractDeployed(contra.address);\n              case 10:\n                deployed = _context4.sent;\n                _context4.next = 13;\n                return client.getBalance(contra.address);\n              case 13:\n                balance = _context4.sent;\n                if (deployed || balance.gt(new bn_js_1.default(0))) {\n                  types.push({\n                    address: contra.address,\n                    type: type,\n                    balance: balance,\n                    deployed: deployed\n                  });\n                }\n              case 15:\n                _context4.next = 5;\n                break;\n              case 17:\n                _context4.next = 22;\n                break;\n              case 19:\n                _context4.prev = 19;\n                _context4.t0 = _context4[\"catch\"](3);\n                _iterator.e(_context4.t0);\n              case 22:\n                _context4.prev = 22;\n                _iterator.f();\n                return _context4.finish(22);\n              case 25:\n                return _context4.abrupt(\"return\", types);\n              case 26:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[3, 19, 22, 25]]);\n      }));\n      function findActiveBySecretKey(_x3, _x4, _x5) {\n        return _findActiveBySecretKey.apply(this, arguments);\n      }\n      return findActiveBySecretKey;\n    }()\n  }, {\n    key: \"findBestBySecretKey\",\n    value: function () {\n      var _findBestBySecretKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(client, workchain, secretKey) {\n        var publicKey, allActive, maxBalance, bestContract, i, ac, _c, _w, c, w;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n                _context5.next = 3;\n                return this.findActiveBySecretKey(client, workchain, secretKey);\n              case 3:\n                allActive = _context5.sent;\n                if (!(allActive.length === 0)) {\n                  _context5.next = 6;\n                  break;\n                }\n                return _context5.abrupt(\"return\", this.openDefault(client, workchain, secretKey));\n              case 6:\n                // Try to match with biggest balance\n                maxBalance = allActive[0].balance;\n                bestContract = allActive[0].type;\n                for (i = 1; i < allActive.length; i++) {\n                  ac = allActive[i]; // Contracts are sorted by priority\n                  if (ac.balance.gte(maxBalance)) {\n                    maxBalance = ac.balance;\n                    bestContract = ac.type;\n                  }\n                }\n                if (!maxBalance.gt(new bn_js_1.default(0))) {\n                  _context5.next = 15;\n                  break;\n                }\n                _c = createContract(client, bestContract, publicKey, workchain);\n                ;\n                _w = new Wallet(client, _c.address);\n                _w.prepare(workchain, publicKey, bestContract);\n                return _context5.abrupt(\"return\", _w);\n              case 15:\n                // Return last (as most recent)\n                c = createContract(client, allActive[allActive.length - 1].type, publicKey, workchain);\n                w = new Wallet(client, c.address);\n                w.prepare(workchain, publicKey, allActive[allActive.length - 1].type);\n                return _context5.abrupt(\"return\", w);\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function findBestBySecretKey(_x6, _x7, _x8) {\n        return _findBestBySecretKey.apply(this, arguments);\n      }\n      return findBestBySecretKey;\n    }()\n  }]);\n  return Wallet;\n}();\nexports.Wallet = Wallet;\n_Wallet_client = new WeakMap(), _Wallet_contract = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","__importDefault","mod","__esModule","_Wallet_client","_Wallet_contract","Object","defineProperty","exports","Wallet","validateWalletType","allTypes","bn_js_1","require","ton_crypto_1","__1","WalletV1R2Source_1","WalletV1R3Source_1","WalletV2R1Source_1","WalletV2R2Source_1","WalletV3R1Source_1","WalletV3R2Source_1","WalletV4Source_1","WalletContract_1","CommonMessageInfo_1","InternalMessage_1","SendMode_1","src","createContract","client","type","publicKey","workchain","Error","WalletContract","create","WalletV1R2Source","WalletV1R3Source","WalletV2R1Source","WalletV2R2Source","WalletV3R1Source","WalletV3R2Source","WalletV4Source","address","isContractDeployed","callGetMethod","res","parseInt","stack","contra","equals","source","args","contract","payload","CommentMessage","Buffer","isBuffer","BinaryMessage","Cell","CellMessage","createTransfer","secretKey","seqno","sendMode","SendMode","IGNORE_ERRORS","PAY_GAS_SEPARATLY","timeout","order","InternalMessage","to","bounce","body","CommonMessageInfo","transfer","sendExternalMessage","message","ExternalMessage","stateInit","StateInit","code","initialCode","data","initialData","writeTo","sendFile","toBoc","idx","keyPairFromSecretKey","c","w","prepare","contractAddress","prepareFromSource","types","deployed","getBalance","balance","gt","default","push","findActiveBySecretKey","allActive","length","openDefault","maxBalance","bestContract","i","ac","gte","WeakMap"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/client/Wallet.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_client, _Wallet_contract;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wallet = exports.validateWalletType = exports.allTypes = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst __1 = require(\"..\");\nconst WalletV1R2Source_1 = require(\"../contracts/sources/WalletV1R2Source\");\nconst WalletV1R3Source_1 = require(\"../contracts/sources/WalletV1R3Source\");\nconst WalletV2R1Source_1 = require(\"../contracts/sources/WalletV2R1Source\");\nconst WalletV2R2Source_1 = require(\"../contracts/sources/WalletV2R2Source\");\nconst WalletV3R1Source_1 = require(\"../contracts/sources/WalletV3R1Source\");\nconst WalletV3R2Source_1 = require(\"../contracts/sources/WalletV3R2Source\");\nconst WalletV4Source_1 = require(\"../contracts/sources/WalletV4Source\");\nconst WalletContract_1 = require(\"../contracts/WalletContract\");\nconst CommonMessageInfo_1 = require(\"../messages/CommonMessageInfo\");\nconst InternalMessage_1 = require(\"../messages/InternalMessage\");\nconst SendMode_1 = require(\"./SendMode\");\n// Wallet Contract Priority\nexports.allTypes = [\n    'org.ton.wallets.simple.r2',\n    'org.ton.wallets.simple.r3',\n    'org.ton.wallets.v2',\n    'org.ton.wallets.v2.r2',\n    'org.ton.wallets.v4',\n    'org.ton.wallets.v3.r2',\n    'org.ton.wallets.v3'\n];\nfunction validateWalletType(src) {\n    if (src === 'org.ton.wallets.simple'\n        || src === 'org.ton.wallets.simple.r2'\n        || src === 'org.ton.wallets.simple.r3'\n        || src === 'org.ton.wallets.v2'\n        || src === 'org.ton.wallets.v2.r2'\n        || src === 'org.ton.wallets.v3'\n        || src === 'org.ton.wallets.v3.r2'\n        || src === 'org.ton.wallets.v4') {\n        return src;\n    }\n    return null;\n}\nexports.validateWalletType = validateWalletType;\nfunction createContract(client, type, publicKey, workchain) {\n    if (type === 'org.ton.wallets.simple') {\n        throw Error('Unsupported wallet');\n    }\n    else if (type === 'org.ton.wallets.simple.r2') {\n        return WalletContract_1.WalletContract.create(client, WalletV1R2Source_1.WalletV1R2Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.simple.r3') {\n        return WalletContract_1.WalletContract.create(client, WalletV1R3Source_1.WalletV1R3Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v2') {\n        return WalletContract_1.WalletContract.create(client, WalletV2R1Source_1.WalletV2R1Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v2.r2') {\n        return WalletContract_1.WalletContract.create(client, WalletV2R2Source_1.WalletV2R2Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v3') {\n        return WalletContract_1.WalletContract.create(client, WalletV3R1Source_1.WalletV3R1Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v3.r2') {\n        return WalletContract_1.WalletContract.create(client, WalletV3R2Source_1.WalletV3R2Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v4') {\n        return WalletContract_1.WalletContract.create(client, WalletV4Source_1.WalletV4Source.create({ publicKey, workchain }));\n    }\n    else {\n        throw Error('Unknown wallet type: ' + type);\n    }\n}\nclass Wallet {\n    constructor(client, address) {\n        _Wallet_client.set(this, void 0);\n        _Wallet_contract.set(this, null);\n        __classPrivateFieldSet(this, _Wallet_client, client, \"f\");\n        this.address = address;\n    }\n    static open(client, address) {\n        return new Wallet(client, address);\n    }\n    static openDefault(client, workchain, secretKey) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let c = createContract(client, 'org.ton.wallets.v3', publicKey, workchain);\n        let w = new Wallet(client, c.address);\n        w.prepare(workchain, publicKey, 'org.ton.wallets.v3');\n        return w;\n    }\n    static openByType(client, workchain, secretKey, type) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let c = createContract(client, type, publicKey, workchain);\n        let w = new Wallet(client, c.address);\n        w.prepare(workchain, publicKey, type);\n        return w;\n    }\n    static openFromSource(client, source) {\n        let address = (0, __1.contractAddress)(source);\n        let w = new Wallet(client, address);\n        w.prepareFromSource(source);\n        return w;\n    }\n    static async findActiveBySecretKey(client, workchain, secretKey) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let types = [];\n        for (let type of exports.allTypes) {\n            let contra = createContract(client, type, publicKey, workchain);\n            let deployed = await client.isContractDeployed(contra.address);\n            let balance = await client.getBalance(contra.address);\n            if (deployed || balance.gt(new bn_js_1.default(0))) {\n                types.push({ address: contra.address, type, balance, deployed });\n            }\n        }\n        return types;\n    }\n    static async findBestBySecretKey(client, workchain, secretKey) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let allActive = await this.findActiveBySecretKey(client, workchain, secretKey);\n        // Create default one if no wallet exists\n        if (allActive.length === 0) {\n            return this.openDefault(client, workchain, secretKey);\n        }\n        // Try to match with biggest balance\n        let maxBalance = allActive[0].balance;\n        let bestContract = allActive[0].type;\n        for (let i = 1; i < allActive.length; i++) {\n            let ac = allActive[i];\n            // Contracts are sorted by priority\n            if (ac.balance.gte(maxBalance)) {\n                maxBalance = ac.balance;\n                bestContract = ac.type;\n            }\n        }\n        if (maxBalance.gt(new bn_js_1.default(0))) {\n            let c = createContract(client, bestContract, publicKey, workchain);\n            ;\n            let w = new Wallet(client, c.address);\n            w.prepare(workchain, publicKey, bestContract);\n            return w;\n        }\n        // Return last (as most recent)\n        let c = createContract(client, allActive[allActive.length - 1].type, publicKey, workchain);\n        let w = new Wallet(client, c.address);\n        w.prepare(workchain, publicKey, allActive[allActive.length - 1].type);\n        return w;\n    }\n    get prepared() {\n        return !!__classPrivateFieldGet(this, _Wallet_contract, \"f\");\n    }\n    async getSeqNo() {\n        if (await __classPrivateFieldGet(this, _Wallet_client, \"f\").isContractDeployed(this.address)) {\n            let res = await __classPrivateFieldGet(this, _Wallet_client, \"f\").callGetMethod(this.address, 'seqno');\n            return parseInt(res.stack[0][1], 16);\n        }\n        else {\n            return 0;\n        }\n    }\n    prepare(workchain, publicKey, type = 'org.ton.wallets.v3') {\n        let contra = createContract(__classPrivateFieldGet(this, _Wallet_client, \"f\"), type, publicKey, workchain);\n        if (!contra.address.equals(this.address)) {\n            throw Error('Contract have different address');\n        }\n        __classPrivateFieldSet(this, _Wallet_contract, contra, \"f\");\n    }\n    prepareFromSource(source) {\n        let contra = WalletContract_1.WalletContract.create(__classPrivateFieldGet(this, _Wallet_client, \"f\"), source);\n        if (!contra.address.equals(this.address)) {\n            throw Error('Contract have different address');\n        }\n        __classPrivateFieldSet(this, _Wallet_contract, contra, \"f\");\n    }\n    /**\n     * Transfers value to specified address\n     */\n    async transfer(args) {\n        const contract = __classPrivateFieldGet(this, _Wallet_contract, \"f\");\n        if (!contract) {\n            throw Error('Please, prepare wallet first');\n        }\n        // Resolve payload\n        let payload = null;\n        if (args.payload) {\n            if (typeof args.payload === 'string') {\n                payload = new __1.CommentMessage(args.payload);\n            }\n            else if (Buffer.isBuffer(args.payload)) {\n                payload = new __1.BinaryMessage(args.payload);\n            }\n            else if (args.payload instanceof __1.Cell) {\n                payload = new __1.CellMessage(args.payload);\n            }\n        }\n        // Check transfer\n        const transfer = await contract.createTransfer({\n            secretKey: args.secretKey,\n            seqno: args.seqno,\n            sendMode: args.sendMode || (SendMode_1.SendMode.IGNORE_ERRORS + SendMode_1.SendMode.PAY_GAS_SEPARATLY),\n            timeout: args.timeout,\n            order: new InternalMessage_1.InternalMessage({\n                to: args.to,\n                value: args.value,\n                bounce: args.bounce,\n                body: new CommonMessageInfo_1.CommonMessageInfo({ body: payload })\n            })\n        });\n        // Send\n        await __classPrivateFieldGet(this, _Wallet_client, \"f\").sendExternalMessage(contract, transfer);\n    }\n    /**\n     * Signing transfer request. Could be done offline.\n     * @param args sign\n     * @returns\n     */\n    transferSign(args) {\n        const contract = __classPrivateFieldGet(this, _Wallet_contract, \"f\");\n        if (!contract) {\n            throw Error('Please, prepare wallet first');\n        }\n        // Resolve payload\n        let payload = null;\n        if (args.payload) {\n            if (typeof args.payload === 'string') {\n                payload = new __1.CommentMessage(args.payload);\n            }\n            else if (Buffer.isBuffer(args.payload)) {\n                payload = new __1.BinaryMessage(args.payload);\n            }\n            else if (args.payload instanceof __1.Cell) {\n                payload = new __1.CellMessage(args.payload);\n            }\n        }\n        // Transfer\n        const transfer = contract.createTransfer({\n            secretKey: args.secretKey,\n            seqno: args.seqno,\n            sendMode: args.sendMode || (SendMode_1.SendMode.IGNORE_ERRORS + SendMode_1.SendMode.PAY_GAS_SEPARATLY),\n            timeout: args.timeout,\n            order: new InternalMessage_1.InternalMessage({\n                to: args.to,\n                value: args.value,\n                bounce: args.bounce,\n                body: new CommonMessageInfo_1.CommonMessageInfo({ body: payload })\n            })\n        });\n        // External message\n        const message = new __1.ExternalMessage({\n            to: contract.address,\n            body: new CommonMessageInfo_1.CommonMessageInfo({\n                stateInit: new __1.StateInit({ code: contract.source.initialCode, data: contract.source.initialData }),\n                body: new __1.CellMessage(transfer)\n            })\n        });\n        const res = new __1.Cell();\n        message.writeTo(res);\n        return res;\n    }\n    /**\n     * Commit prepared transfer\n     * @param transfer signed transfer for commit\n     */\n    async transferCommit(transfer) {\n        await __classPrivateFieldGet(this, _Wallet_client, \"f\").sendFile(transfer.toBoc({ idx: false }));\n    }\n}\nexports.Wallet = Wallet;\n_Wallet_client = new WeakMap(), _Wallet_contract = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}