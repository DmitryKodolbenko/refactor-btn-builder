{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dropDuplicates = void 0;\n/**\n * Drops duplicate values in a stream.\n *\n * Marble diagram:\n *\n * ```text\n * -1-1-1-2-4-3-3-4--\n *   dropDuplicates\n * -1-----2-4-3------\n * ```\n *\n * Each value must be uniquely identified by a string given by\n * valueToKey(value).\n *\n * Internally this maintains a set of keys that have been processed already,\n * i.e. memory consumption and Set lookup times should be considered when\n * using this function.\n */\nfunction dropDuplicates(valueToKey) {\n  var operand = function operand(instream) {\n    var emittedKeys = new Set();\n    var deduplicatedStream = instream.filter(function (value) {\n      return !emittedKeys.has(valueToKey(value));\n    }).debug(function (value) {\n      return emittedKeys.add(valueToKey(value));\n    });\n    return deduplicatedStream;\n  };\n  return operand;\n}\nexports.dropDuplicates = dropDuplicates;","map":{"version":3,"sources":["../src/dropduplicates.ts"],"names":[],"mappings":";;;;;;AAQA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAgB,cAAc,CAAI,UAA4B,EAAA;EAC5D,IAAM,OAAO,GAA8B,SAArC,OAAO,CAA+B,QAAmB,EAAe;IAC5E,IAAM,WAAW,GAAG,IAAI,GAAG,EAAU;IAErC,IAAM,kBAAkB,GAAG,QAAQ,CAChC,MAAM,CAAC,UAAC,KAAK;MAAA,OAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAAA,EAAC,CACtD,KAAK,CAAC,UAAC,KAAK;MAAA,OAAK,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAAA,EAAC;IAEvD,OAAO,kBAAkB;EAC3B,CAAC;EACD,OAAO,OAAO;AAChB;AAXA,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dropDuplicates = void 0;\n/**\n * Drops duplicate values in a stream.\n *\n * Marble diagram:\n *\n * ```text\n * -1-1-1-2-4-3-3-4--\n *   dropDuplicates\n * -1-----2-4-3------\n * ```\n *\n * Each value must be uniquely identified by a string given by\n * valueToKey(value).\n *\n * Internally this maintains a set of keys that have been processed already,\n * i.e. memory consumption and Set lookup times should be considered when\n * using this function.\n */\nfunction dropDuplicates(valueToKey) {\n    const operand = (instream) => {\n        const emittedKeys = new Set();\n        const deduplicatedStream = instream\n            .filter((value) => !emittedKeys.has(valueToKey(value)))\n            .debug((value) => emittedKeys.add(valueToKey(value)));\n        return deduplicatedStream;\n    };\n    return operand;\n}\nexports.dropDuplicates = dropDuplicates;\n//# sourceMappingURL=dropduplicates.js.map"]},"metadata":{},"sourceType":"script"}