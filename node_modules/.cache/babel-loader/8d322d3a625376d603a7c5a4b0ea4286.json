{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha256 = void 0;\nfunction sha256(_x) {\n  return _sha.apply(this, arguments);\n}\nfunction _sha() {\n  _sha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof source === 'string')) {\n              _context.next = 6;\n              break;\n            }\n            _context.t0 = Buffer;\n            _context.next = 4;\n            return crypto.subtle.digest(\"SHA-256\", Buffer.from(source, 'utf-8'));\n          case 4:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", _context.t0.from.call(_context.t0, _context.t1));\n          case 6:\n            _context.t2 = Buffer;\n            _context.next = 9;\n            return crypto.subtle.digest(\"SHA-256\", source);\n          case 9:\n            _context.t3 = _context.sent;\n            return _context.abrupt(\"return\", _context.t2.from.call(_context.t2, _context.t3));\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sha.apply(this, arguments);\n}\nexports.sha256 = sha256;","map":{"version":3,"names":["Object","defineProperty","exports","value","sha256","source","Buffer","crypto","subtle","digest","from"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton-crypto-primitives/dist/browser/sha256.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nasync function sha256(source) {\n    if (typeof source === 'string') {\n        return Buffer.from(await crypto.subtle.digest(\"SHA-256\", Buffer.from(source, 'utf-8')));\n    }\n    return Buffer.from(await crypto.subtle.digest(\"SHA-256\", source));\n}\nexports.sha256 = sha256;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AAAC,SACTA,MAAM;EAAA;AAAA;AAAA;EAAA,kEAArB,iBAAsBC,MAAM;IAAA;MAAA;QAAA;UAAA;YAAA,MACpB,OAAOA,MAAM,KAAK,QAAQ;cAAA;cAAA;YAAA;YAAA,cACnBC,MAAM;YAAA;YAAA,OAAYC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEH,MAAM,CAACI,IAAI,CAACL,MAAM,EAAE,OAAO,CAAC,CAAC;UAAA;YAAA;YAAA,6CAAxEK,IAAI;UAAA;YAAA,cAEfJ,MAAM;YAAA;YAAA,OAAYC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEJ,MAAM,CAAC;UAAA;YAAA;YAAA,6CAAlDK,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACrB;EAAA;AAAA;AACDR,OAAO,CAACE,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script"}