{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TupleSlice = void 0;\nvar bn_js_1 = require(\"bn.js\");\nvar bnToAddress_1 = require(\"../utils/bnToAddress\");\nvar Cell_1 = require(\"./Cell\");\nvar TupleSlice = /*#__PURE__*/function () {\n  function TupleSlice(items) {\n    _classCallCheck(this, TupleSlice);\n    this.items = _toConsumableArray(items);\n  }\n  _createClass(TupleSlice, [{\n    key: \"remaining\",\n    get: function get() {\n      return this.items.length;\n    }\n  }, {\n    key: \"readNumber\",\n    value: function readNumber() {\n      if (this.items[0][0] !== 'num') {\n        throw Error('Not a number');\n      }\n      var res = parseInt(this.items[0][1]);\n      this.items.splice(0, 1);\n      return res;\n    }\n  }, {\n    key: \"readBoolean\",\n    value: function readBoolean() {\n      if (this.items[0][0] !== 'num') {\n        throw Error('Not a number');\n      }\n      var res = parseInt(this.items[0][1]);\n      this.items.splice(0, 1);\n      return res === 0 ? false : true;\n    }\n  }, {\n    key: \"readBigNumber\",\n    value: function readBigNumber() {\n      if (this.items[0][0] !== 'num') {\n        throw Error('Not a number');\n      }\n      var res = new bn_js_1.BN(this.items[0][1].slice(2), 'hex');\n      this.items.splice(0, 1);\n      return res;\n    }\n  }, {\n    key: \"readCell\",\n    value: function readCell() {\n      if (this.items[0][0] !== 'cell') {\n        throw Error('Not a cell');\n      }\n      var res = Cell_1.Cell.fromBoc(Buffer.from(this.items[0][1].bytes, 'base64'))[0];\n      this.items.splice(0, 1);\n      return res;\n    }\n  }, {\n    key: \"readNumericAddress\",\n    value: function readNumericAddress(chain) {\n      if (this.items[0][0] !== 'num') {\n        throw Error('Not a number');\n      }\n      var bn = this.readBigNumber();\n      return (0, bnToAddress_1.bnToAddress)(chain, bn);\n    }\n  }]);\n  return TupleSlice;\n}();\nexports.TupleSlice = TupleSlice;","map":{"version":3,"names":["Object","defineProperty","exports","value","TupleSlice","bn_js_1","require","bnToAddress_1","Cell_1","items","length","Error","res","parseInt","splice","BN","slice","Cell","fromBoc","Buffer","from","bytes","chain","bn","readBigNumber","bnToAddress"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/boc/TupleSlice.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TupleSlice = void 0;\nconst bn_js_1 = require(\"bn.js\");\nconst bnToAddress_1 = require(\"../utils/bnToAddress\");\nconst Cell_1 = require(\"./Cell\");\nclass TupleSlice {\n    constructor(items) {\n        this.items = [...items];\n    }\n    get remaining() {\n        return this.items.length;\n    }\n    readNumber() {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let res = parseInt(this.items[0][1]);\n        this.items.splice(0, 1);\n        return res;\n    }\n    readBoolean() {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let res = parseInt(this.items[0][1]);\n        this.items.splice(0, 1);\n        return res === 0 ? false : true;\n    }\n    readBigNumber() {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let res = new bn_js_1.BN(this.items[0][1].slice(2), 'hex');\n        this.items.splice(0, 1);\n        return res;\n    }\n    readCell() {\n        if (this.items[0][0] !== 'cell') {\n            throw Error('Not a cell');\n        }\n        let res = Cell_1.Cell.fromBoc(Buffer.from(this.items[0][1].bytes, 'base64'))[0];\n        this.items.splice(0, 1);\n        return res;\n    }\n    readNumericAddress(chain) {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let bn = this.readBigNumber();\n        return (0, bnToAddress_1.bnToAddress)(chain, bn);\n    }\n}\nexports.TupleSlice = TupleSlice;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}