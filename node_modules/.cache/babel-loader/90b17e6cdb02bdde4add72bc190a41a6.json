{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{Contract,keyStores,WalletConnection}from\"near-api-js\";import{message}from\"antd\";import\"dotenv/config\";import{setupWalletSelector}from\"@near-wallet-selector/core\";import{setupModal}from\"@near-wallet-selector/modal-ui\";import{setupNearWallet}from\"@near-wallet-selector/near-wallet\";import{setupSender}from\"@near-wallet-selector/sender\";import{setupHereWallet}from\"@near-wallet-selector/here-wallet\";import{setupMathWallet}from\"@near-wallet-selector/math-wallet\";import{setupNightly}from\"@near-wallet-selector/nightly\";import{setupMeteorWallet}from\"@near-wallet-selector/meteor-wallet\";import{setupWelldoneWallet}from\"@near-wallet-selector/welldone-wallet\";// import { setupWalletConnect } from \"@near-wallet-selector/wallet-connect\";\nimport{setupNightlyConnect}from\"@near-wallet-selector/nightly-connect\";import{setupDefaultWallets}from\"@near-wallet-selector/default-wallets\";import{setupNearFi}from\"@near-wallet-selector/nearfi\";import{setupCoin98Wallet}from\"@near-wallet-selector/coin98-wallet\";import{setupOptoWallet}from\"@near-wallet-selector/opto-wallet\";import{setupNeth}from\"@near-wallet-selector/neth\";// import \"./dist/packages/modal-ui/styles.css\";/\nvar connectWalletNear=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(setNearWalletKey){var connectionConfig,getAccount;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{connectionConfig={networkId:\"mainnet\",keyStore:new keyStores.BrowserLocalStorageKeyStore(),nodeUrl:\"https://rpc.mainnet.near.org\",walletUrl:\"https://wallet.mainnet.near.org\",helperUrl:\"https://helper.mainnet.near.org\",explorerUrl:\"https://explorer.mainnet.near.org\"};// (async ()=>{\n//     const nearConnection = await connect(connectionConfig as any);\n//     const receiver = process.env.REACT_APP_BACK_NEAR_WALLET ? process.env.REACT_APP_BACK_NEAR_WALLET : '';\n//     const walletConnection = new WalletConnection(nearConnection, receiver);\n//     await(await(await nearConnection.account('sepezho.near')).getAccountBalance()).available\n//   })()\ngetAccount=function getAccount(){var network=connectionConfig;var provider=new providers.JsonRpcProvider({url:network.nodeUrl});return provider.query({request_type:\"view_account\",finality:\"final\",account_id:accountId}).then(function(data){return _objectSpread(_objectSpread({},data),{},{account_id:accountId});});};// useEffect(() => {\n// \tif (!accountId) {\n// \t\treturn setAccount(null);\n// \t}\n// \tsetLoading(true);\n// \tgetAccount().then((nextAccount) => {\n// \t\tsetAccount(nextAccount);\n// \t\tsetLoading(false);\n// \t});\n// }, [accountId, getAccount]);\n// const handleSignIn = () => {\n// \tmodal.show();\n// };\n// const handleSwitchWallet = () => {\n// \tmodal.show();\n// };\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _selector,_modal,state,accounts,accountId,receiver,walletConnection,walletAccountId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setupWalletSelector;_context.t1=[];_context.t2=_toConsumableArray;_context.next=5;return setupDefaultWallets();case 5:_context.t3=_context.sent;_context.t4=(0,_context.t2)(_context.t3);_context.t5=[setupNearWallet(),setupSender(),setupMathWallet(),setupNightly(),setupMeteorWallet(),setupWelldoneWallet(),setupHereWallet(),setupCoin98Wallet(),setupNearFi(),setupNeth({gas:\"300000000000000\",bundle:false}),setupOptoWallet(),// setupWalletConnect({\n// \tprojectId: \"c4f79cc...\",\n// \tmetadata: {\n// \t\tname: \"NEAR Wallet Selector\",\n// \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n// \t\turl: \"https://github.com/near/wallet-selector\",\n// \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n// \t},\n// }),\nsetupNightlyConnect({url:\"wss://relay.nightly.app/app\",appMetadata:{additionalInfo:\"\",application:\"NEAR Wallet Selector\",description:\"Example dApp used by NEAR Wallet Selector\",icon:\"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\"}})];_context.t6=_context.t1.concat.call(_context.t1,_context.t4,_context.t5);_context.t7={network:\"mainnet\",debug:true,modules:_context.t6};_context.next=12;return(0,_context.t0)(_context.t7);case 12:_selector=_context.sent;_modal=setupModal(_selector,{contractId:\"tonana.near\"});_context.next=16;return _modal.show();case 16:state=_selector.store.getState();accounts=state.accounts;//@ts-ignore\nwindow.selector=_selector;//@ts-ignore\nwindow.modal=_modal;// setSelector(_selector);\n// setModal(_modal);\n// }, []);\n// const subscription = await _selector.store.observable\n// \t.pipe(\n// \t\tmap((state) => state.accounts),\n// \t\tdistinctUntilChanged()\n// \t)\n// \t.subscribe((nextAccounts) => {\n// \t\tconsole.log(\"Accounts Update\", nextAccounts);\n// \t\taccounts = nextAccounts;\n// \t});\n// subscription.unsubscribe();\naccountId=accounts.find(function(account){return account.active;})||null;console.log(accountId);// const nearConnection = await connect(connectionConfig as any);\nreceiver=process.env.REACT_APP_NEAR_CONTRACT?process.env.REACT_APP_NEAR_CONTRACT:\"\";walletConnection=new WalletConnection(accountId,receiver);//@ts-ignore\n_context.next=26;return new Contract(walletConnection.account(),receiver,{changeMethods:[\"payToWallet\"],viewMethods:[]});case 26:window.contract=_context.sent;if(!walletConnection.isSignedIn()){_context.next=32;break;}walletAccountId=walletConnection.getAccountId();setNearWalletKey(walletAccountId);_context.next=34;break;case 32:_context.next=34;return walletConnection.requestSignIn({contractId:process.env.REACT_APP_NEAR_CONTRACT,methodNames:[\"payToWallet\"]});case 34:case\"end\":return _context.stop();}}},_callee);}))();//     const nearConnection = await connect(connectionConfig as any);\n//     const receiver = process.env.REACT_APP_NEAR_CONTRACT ? process.env.REACT_APP_NEAR_CONTRACT : '';\n//     const walletConnection = new WalletConnection(nearConnection, receiver);\n//   //@ts-ignore\n// window.contract = await new Contract(walletConnection.account(), receiver, {\n//   changeMethods: ['payToWallet'],\n//   viewMethods: []\n// })\n//     if (walletConnection.isSignedIn()) {\n//       const walletAccountId = walletConnection.getAccountId();\n//       setNearWalletKey(walletAccountId);\n//     } else {\n//       await walletConnection.requestSignIn(\n//         {\n//           contractId:process.env.REACT_APP_NEAR_CONTRACT,\n//           methodNames:['payToWallet']\n//       }\n//       );\n//     }\n}catch(err){console.log(err);message.error(\"Use NEAR wallet. Close all windows and try again pls\",5);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function connectWalletNear(_x){return _ref.apply(this,arguments);};}();export default connectWalletNear;// NEAR CHECK FEES ALOWANCE\n//   const response = await near.connection.provider.query({\n//   request_type: \"view_access_key\",\n//   finality: \"final\",\n//   account_id: \"client.chainlink.testnet\",\n//   public_key: \"ed25519:H9k5eiU4xXS3M4z8HzKJSLaZdqGdGwBG49o7orNC4eZW\",\n// });","map":{"version":3,"names":["Contract","keyStores","WalletConnection","message","setupWalletSelector","setupModal","setupNearWallet","setupSender","setupHereWallet","setupMathWallet","setupNightly","setupMeteorWallet","setupWelldoneWallet","setupNightlyConnect","setupDefaultWallets","setupNearFi","setupCoin98Wallet","setupOptoWallet","setupNeth","connectWalletNear","setNearWalletKey","connectionConfig","networkId","keyStore","BrowserLocalStorageKeyStore","nodeUrl","walletUrl","helperUrl","explorerUrl","getAccount","network","provider","providers","JsonRpcProvider","url","query","request_type","finality","account_id","accountId","then","data","gas","bundle","appMetadata","additionalInfo","application","description","icon","debug","modules","_selector","_modal","contractId","show","state","store","getState","accounts","window","selector","modal","find","account","active","console","log","receiver","process","env","REACT_APP_NEAR_CONTRACT","walletConnection","changeMethods","viewMethods","contract","isSignedIn","walletAccountId","getAccountId","requestSignIn","methodNames","err","error"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/wallet/connectWalletNEAR.ts"],"sourcesContent":["import {\n\tconnect,\n\tContract,\n\tutils,\n\ttransactions,\n\tkeyStores,\n\tWalletConnection,\n} from \"near-api-js\";\nimport { message } from \"antd\";\nimport \"dotenv/config\";\n\nimport { setupWalletSelector } from \"@near-wallet-selector/core\";\nimport { setupModal } from \"@near-wallet-selector/modal-ui\";\nimport { setupNearWallet } from \"@near-wallet-selector/near-wallet\";\nimport { setupMyNearWallet } from \"@near-wallet-selector/my-near-wallet\";\nimport { setupSender } from \"@near-wallet-selector/sender\";\nimport { setupHereWallet } from \"@near-wallet-selector/here-wallet\";\nimport { setupMathWallet } from \"@near-wallet-selector/math-wallet\";\nimport { setupNightly } from \"@near-wallet-selector/nightly\";\nimport { setupMeteorWallet } from \"@near-wallet-selector/meteor-wallet\";\nimport { setupWelldoneWallet } from \"@near-wallet-selector/welldone-wallet\";\nimport { setupLedger } from \"@near-wallet-selector/ledger\";\n// import { setupWalletConnect } from \"@near-wallet-selector/wallet-connect\";\nimport { setupNightlyConnect } from \"@near-wallet-selector/nightly-connect\";\nimport { setupDefaultWallets } from \"@near-wallet-selector/default-wallets\";\nimport { setupNearFi } from \"@near-wallet-selector/nearfi\";\nimport { setupCoin98Wallet } from \"@near-wallet-selector/coin98-wallet\";\nimport { setupOptoWallet } from \"@near-wallet-selector/opto-wallet\";\nimport { setupNeth } from \"@near-wallet-selector/neth\";\n// import \"./dist/packages/modal-ui/styles.css\";/\n\nconst connectWalletNear = async (setNearWalletKey: any) => {\n\ttry {\n\t\tconst connectionConfig = {\n\t\t\tnetworkId: \"mainnet\",\n\t\t\tkeyStore: new keyStores.BrowserLocalStorageKeyStore(),\n\t\t\tnodeUrl: \"https://rpc.mainnet.near.org\",\n\t\t\twalletUrl: \"https://wallet.mainnet.near.org\",\n\t\t\thelperUrl: \"https://helper.mainnet.near.org\",\n\t\t\texplorerUrl: \"https://explorer.mainnet.near.org\",\n\t\t};\n\n\t\t// (async ()=>{\n\n\t\t//     const nearConnection = await connect(connectionConfig as any);\n\t\t//     const receiver = process.env.REACT_APP_BACK_NEAR_WALLET ? process.env.REACT_APP_BACK_NEAR_WALLET : '';\n\n\t\t//     const walletConnection = new WalletConnection(nearConnection, receiver);\n\t\t//     await(await(await nearConnection.account('sepezho.near')).getAccountBalance()).available\n\t\t//   })()\n\n\t\tconst getAccount = () => {\n\t\t\tconst network  = connectionConfig;\n\t\t\tconst provider = new providers.JsonRpcProvider({ url: network.nodeUrl });\n\n\t\t\treturn provider\n\t\t\t\t.query<AccountView>({\n\t\t\t\t\trequest_type: \"view_account\",\n\t\t\t\t\tfinality: \"final\",\n\t\t\t\t\taccount_id: accountId,\n\t\t\t\t})\n\t\t\t\t.then((data) => ({\n\t\t\t\t\t...data,\n\t\t\t\t\taccount_id: accountId,\n\t\t\t\t}));\n\t\t};\n\n\t\t// useEffect(() => {\n\t\t// \tif (!accountId) {\n\t\t// \t\treturn setAccount(null);\n\t\t// \t}\n\n\t\t// \tsetLoading(true);\n\n\t\t// \tgetAccount().then((nextAccount) => {\n\t\t// \t\tsetAccount(nextAccount);\n\t\t// \t\tsetLoading(false);\n\t\t// \t});\n\t\t// }, [accountId, getAccount]);\n\n\t\t// const handleSignIn = () => {\n\t\t// \tmodal.show();\n\t\t// };\n\n\t\t// const handleSwitchWallet = () => {\n\t\t// \tmodal.show();\n\t\t// };\n\n\t\t(async () => {\n\t\t\tconst _selector = await setupWalletSelector({\n\t\t\t\tnetwork: \"mainnet\",\n\t\t\t\tdebug: true,\n\t\t\t\tmodules: [\n\t\t\t\t\t...(await setupDefaultWallets()),\n\t\t\t\t\tsetupNearWallet(),\n\t\t\t\t\tsetupSender(),\n\t\t\t\t\tsetupMathWallet(),\n\t\t\t\t\tsetupNightly(),\n\t\t\t\t\tsetupMeteorWallet(),\n\t\t\t\t\tsetupWelldoneWallet(),\n\t\t\t\t\tsetupHereWallet(),\n\t\t\t\t\tsetupCoin98Wallet(),\n\t\t\t\t\tsetupNearFi(),\n\t\t\t\t\tsetupNeth({\n\t\t\t\t\t\tgas: \"300000000000000\",\n\t\t\t\t\t\tbundle: false,\n\t\t\t\t\t}),\n\t\t\t\t\tsetupOptoWallet(),\n\t\t\t\t\t// setupWalletConnect({\n\t\t\t\t\t// \tprojectId: \"c4f79cc...\",\n\t\t\t\t\t// \tmetadata: {\n\t\t\t\t\t// \t\tname: \"NEAR Wallet Selector\",\n\t\t\t\t\t// \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t\t\t// \t\turl: \"https://github.com/near/wallet-selector\",\n\t\t\t\t\t// \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n\t\t\t\t\t// \t},\n\t\t\t\t\t// }),\n\t\t\t\t\tsetupNightlyConnect({\n\t\t\t\t\t\turl: \"wss://relay.nightly.app/app\",\n\t\t\t\t\t\tappMetadata: {\n\t\t\t\t\t\t\tadditionalInfo: \"\",\n\t\t\t\t\t\t\tapplication: \"NEAR Wallet Selector\",\n\t\t\t\t\t\t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t\t\t\t\ticon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t});\n\t\t\tconst _modal = setupModal(_selector, { contractId: \"tonana.near\" });\n\t\t\tawait _modal.show();\n\t\t\tconst state = _selector.store.getState();\n\t\t\tlet accounts = state.accounts as any;\n\n\t\t\t//@ts-ignore\n\t\t\twindow.selector = _selector;\n\t\t\t//@ts-ignore\n\t\t\twindow.modal = _modal;\n\n\t\t\t// setSelector(_selector);\n\t\t\t// setModal(_modal);\n\t\t\t// }, []);\n\n\t\t\t// const subscription = await _selector.store.observable\n\t\t\t// \t.pipe(\n\t\t\t// \t\tmap((state) => state.accounts),\n\t\t\t// \t\tdistinctUntilChanged()\n\t\t\t// \t)\n\t\t\t// \t.subscribe((nextAccounts) => {\n\t\t\t// \t\tconsole.log(\"Accounts Update\", nextAccounts);\n\n\t\t\t// \t\taccounts = nextAccounts;\n\t\t\t// \t});\n\n\t\t\t// subscription.unsubscribe();\n\n\t\t\tconst accountId = accounts.find((account: any) => account.active) || null;\n\n\t\t\tconsole.log(accountId);\n\n\t\t\t// const nearConnection = await connect(connectionConfig as any);\n\t\t\tconst receiver = process.env.REACT_APP_NEAR_CONTRACT\n\t\t\t\t? process.env.REACT_APP_NEAR_CONTRACT\n\t\t\t\t: \"\";\n\n\t\t\tconst walletConnection = new WalletConnection(accountId, receiver);\n\t\t\t//@ts-ignore\n\t\t\twindow.contract = await new Contract(\n\t\t\t\twalletConnection.account(),\n\t\t\t\treceiver,\n\t\t\t\t{\n\t\t\t\t\tchangeMethods: [\"payToWallet\"],\n\t\t\t\t\tviewMethods: [],\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (walletConnection.isSignedIn()) {\n\t\t\t\tconst walletAccountId = walletConnection.getAccountId();\n\t\t\t\tsetNearWalletKey(walletAccountId);\n\t\t\t} else {\n\t\t\t\tawait walletConnection.requestSignIn({\n\t\t\t\t\tcontractId: process.env.REACT_APP_NEAR_CONTRACT,\n\t\t\t\t\tmethodNames: [\"payToWallet\"],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// const selector = await setupWalletSelector({\n\t\t\t// \tnetwork: \"testnet\",\n\t\t\t// \tmodules: [\n\t\t\t// \t\t...(await setupDefaultWallets()),\n\t\t\t// \t\tsetupNearWallet(),\n\t\t\t// \t\tsetupMyNearWallet(),\n\t\t\t// \t\tsetupSender(),\n\t\t\t// \t\tsetupHereWallet(),\n\t\t\t// \t\tsetupMathWallet(),\n\t\t\t// \t\tsetupNightly(),\n\t\t\t// \t\tsetupMeteorWallet(),\n\t\t\t// \t\tsetupWelldoneWallet(),\n\t\t\t// \t\tsetupLedger(),\n\t\t\t// \t\tsetupNearFi(),\n\t\t\t// \t\tsetupCoin98Wallet(),\n\t\t\t// \t\tsetupOptoWallet(),\n\t\t\t// \t\tsetupNeth(),\n\t\t\t// \t\t// setupWalletConnect({\n\t\t\t// \t\t// \tprojectId: \"c4f79cc...\",\n\t\t\t// \t\t// \tmetadata: {\n\t\t\t// \t\t// \t\tname: \"NEAR Wallet Selector\",\n\t\t\t// \t\t// \t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t// \t\t// \t\turl: \"https://github.com/near/wallet-selector\",\n\t\t\t// \t\t// \t\ticons: [\"https://avatars.githubusercontent.com/u/37784886\"],\n\t\t\t// \t\t// \t},\n\t\t\t// \t\t// }),\n\t\t\t// \t\tsetupNightlyConnect({\n\t\t\t// \t\t\turl: \"wss://relay.nightly.app/app\",\n\t\t\t// \t\t\tappMetadata: {\n\t\t\t// \t\t\t\tadditionalInfo: \"\",\n\t\t\t// \t\t\t\tapplication: \"NEAR Wallet Selector\",\n\t\t\t// \t\t\t\tdescription: \"Example dApp used by NEAR Wallet Selector\",\n\t\t\t// \t\t\t\ticon: \"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png\",\n\t\t\t// \t\t\t},\n\t\t\t// \t\t}),\n\t\t\t// \t],\n\t\t\t// });\n\n\t\t\t// const afd = setupModal(selector, {\n\t\t\t// \tcontractId: \"guest-book.testnet\",\n\t\t\t// });\n\t\t\t// afd.show();\n\t\t})();\n\n\t\t//     const nearConnection = await connect(connectionConfig as any);\n\t\t//     const receiver = process.env.REACT_APP_NEAR_CONTRACT ? process.env.REACT_APP_NEAR_CONTRACT : '';\n\n\t\t//     const walletConnection = new WalletConnection(nearConnection, receiver);\n\t\t//   //@ts-ignore\n\t\t// window.contract = await new Contract(walletConnection.account(), receiver, {\n\t\t//   changeMethods: ['payToWallet'],\n\t\t//   viewMethods: []\n\t\t// })\n\t\t//     if (walletConnection.isSignedIn()) {\n\t\t//       const walletAccountId = walletConnection.getAccountId();\n\t\t//       setNearWalletKey(walletAccountId);\n\t\t//     } else {\n\t\t//       await walletConnection.requestSignIn(\n\t\t//         {\n\t\t//           contractId:process.env.REACT_APP_NEAR_CONTRACT,\n\t\t//           methodNames:['payToWallet']\n\t\t//       }\n\n\t\t//       );\n\t\t//     }\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tmessage.error(\"Use NEAR wallet. Close all windows and try again pls\", 5);\n\t}\n};\n\nexport default connectWalletNear;\n\n// NEAR CHECK FEES ALOWANCE\n//   const response = await near.connection.provider.query({\n//   request_type: \"view_access_key\",\n//   finality: \"final\",\n//   account_id: \"client.chainlink.testnet\",\n//   public_key: \"ed25519:H9k5eiU4xXS3M4z8HzKJSLaZdqGdGwBG49o7orNC4eZW\",\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}