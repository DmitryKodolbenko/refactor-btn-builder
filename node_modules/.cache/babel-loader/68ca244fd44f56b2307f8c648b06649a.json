{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryDenomMetadataResponse = exports.QueryDenomMetadataRequest = exports.QueryDenomsMetadataResponse = exports.QueryDenomsMetadataRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QuerySupplyOfResponse = exports.QuerySupplyOfRequest = exports.QueryTotalSupplyResponse = exports.QueryTotalSupplyRequest = exports.QueryAllBalancesResponse = exports.QueryAllBalancesRequest = exports.QueryBalanceResponse = exports.QueryBalanceRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nconst pagination_1 = require(\"../../../cosmos/base/query/v1beta1/pagination\");\nconst bank_1 = require(\"../../../cosmos/bank/v1beta1/bank\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseQueryBalanceRequest = {\n  address: \"\",\n  denom: \"\"\n};\nexports.QueryBalanceRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.denom !== \"\") {\n      writer.uint32(18).string(message.denom);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryBalanceRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.denom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryBalanceRequest);\n    message.address = object.address !== undefined && object.address !== null ? String(object.address) : \"\";\n    message.denom = object.denom !== undefined && object.denom !== null ? String(object.denom) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.denom !== undefined && (obj.denom = message.denom);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseQueryBalanceRequest);\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.denom = (_b = object.denom) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nconst baseQueryBalanceResponse = {};\nexports.QueryBalanceResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.balance !== undefined) {\n      coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryBalanceResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.balance = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryBalanceResponse);\n    message.balance = object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromJSON(object.balance) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.balance !== undefined && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryBalanceResponse);\n    message.balance = object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : undefined;\n    return message;\n  }\n};\nconst baseQueryAllBalancesRequest = {\n  address: \"\"\n};\nexports.QueryAllBalancesRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryAllBalancesRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n        case 2:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryAllBalancesRequest);\n    message.address = object.address !== undefined && object.address !== null ? String(object.address) : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryAllBalancesRequest);\n    message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQueryAllBalancesResponse = {};\nexports.QueryAllBalancesResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.balances) {\n      coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryAllBalancesResponse);\n    message.balances = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryAllBalancesResponse);\n    message.balances = ((_a = object.balances) !== null && _a !== void 0 ? _a : []).map(e => coin_1.Coin.fromJSON(e));\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.balances) {\n      obj.balances = message.balances.map(e => e ? coin_1.Coin.toJSON(e) : undefined);\n    } else {\n      obj.balances = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryAllBalancesResponse);\n    message.balances = ((_a = object.balances) === null || _a === void 0 ? void 0 : _a.map(e => coin_1.Coin.fromPartial(e))) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQueryTotalSupplyRequest = {};\nexports.QueryTotalSupplyRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryTotalSupplyRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryTotalSupplyRequest);\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryTotalSupplyRequest);\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQueryTotalSupplyResponse = {};\nexports.QueryTotalSupplyResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.supply) {\n      coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryTotalSupplyResponse);\n    message.supply = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryTotalSupplyResponse);\n    message.supply = ((_a = object.supply) !== null && _a !== void 0 ? _a : []).map(e => coin_1.Coin.fromJSON(e));\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.supply) {\n      obj.supply = message.supply.map(e => e ? coin_1.Coin.toJSON(e) : undefined);\n    } else {\n      obj.supply = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryTotalSupplyResponse);\n    message.supply = ((_a = object.supply) === null || _a === void 0 ? void 0 : _a.map(e => coin_1.Coin.fromPartial(e))) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQuerySupplyOfRequest = {\n  denom: \"\"\n};\nexports.QuerySupplyOfRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQuerySupplyOfRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQuerySupplyOfRequest);\n    message.denom = object.denom !== undefined && object.denom !== null ? String(object.denom) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQuerySupplyOfRequest);\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nconst baseQuerySupplyOfResponse = {};\nexports.QuerySupplyOfResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.amount !== undefined) {\n      coin_1.Coin.encode(message.amount, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQuerySupplyOfResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.amount = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQuerySupplyOfResponse);\n    message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromJSON(object.amount) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQuerySupplyOfResponse);\n    message.amount = object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;\n    return message;\n  }\n};\nconst baseQueryParamsRequest = {};\nexports.QueryParamsRequest = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryParamsRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseQueryParamsRequest);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseQueryParamsRequest);\n    return message;\n  }\n};\nconst baseQueryParamsResponse = {};\nexports.QueryParamsResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.params !== undefined) {\n      bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryParamsResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.params = bank_1.Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryParamsResponse);\n    message.params = object.params !== undefined && object.params !== null ? bank_1.Params.fromJSON(object.params) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryParamsResponse);\n    message.params = object.params !== undefined && object.params !== null ? bank_1.Params.fromPartial(object.params) : undefined;\n    return message;\n  }\n};\nconst baseQueryDenomsMetadataRequest = {};\nexports.QueryDenomsMetadataRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryDenomsMetadataRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryDenomsMetadataRequest);\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryDenomsMetadataRequest);\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQueryDenomsMetadataResponse = {};\nexports.QueryDenomsMetadataResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.metadatas) {\n      bank_1.Metadata.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryDenomsMetadataResponse);\n    message.metadatas = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metadatas.push(bank_1.Metadata.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryDenomsMetadataResponse);\n    message.metadatas = ((_a = object.metadatas) !== null && _a !== void 0 ? _a : []).map(e => bank_1.Metadata.fromJSON(e));\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.metadatas) {\n      obj.metadatas = message.metadatas.map(e => e ? bank_1.Metadata.toJSON(e) : undefined);\n    } else {\n      obj.metadatas = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryDenomsMetadataResponse);\n    message.metadatas = ((_a = object.metadatas) === null || _a === void 0 ? void 0 : _a.map(e => bank_1.Metadata.fromPartial(e))) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQueryDenomMetadataRequest = {\n  denom: \"\"\n};\nexports.QueryDenomMetadataRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryDenomMetadataRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryDenomMetadataRequest);\n    message.denom = object.denom !== undefined && object.denom !== null ? String(object.denom) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryDenomMetadataRequest);\n    message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nconst baseQueryDenomMetadataResponse = {};\nexports.QueryDenomMetadataResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.metadata !== undefined) {\n      bank_1.Metadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryDenomMetadataResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metadata = bank_1.Metadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryDenomMetadataResponse);\n    message.metadata = object.metadata !== undefined && object.metadata !== null ? bank_1.Metadata.fromJSON(object.metadata) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.metadata !== undefined && (obj.metadata = message.metadata ? bank_1.Metadata.toJSON(message.metadata) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryDenomMetadataResponse);\n    message.metadata = object.metadata !== undefined && object.metadata !== null ? bank_1.Metadata.fromPartial(object.metadata) : undefined;\n    return message;\n  }\n};\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Balance = this.Balance.bind(this);\n    this.AllBalances = this.AllBalances.bind(this);\n    this.TotalSupply = this.TotalSupply.bind(this);\n    this.SupplyOf = this.SupplyOf.bind(this);\n    this.Params = this.Params.bind(this);\n    this.DenomMetadata = this.DenomMetadata.bind(this);\n    this.DenomsMetadata = this.DenomsMetadata.bind(this);\n  }\n  Balance(request) {\n    const data = exports.QueryBalanceRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Balance\", data);\n    return promise.then(data => exports.QueryBalanceResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  AllBalances(request) {\n    const data = exports.QueryAllBalancesRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"AllBalances\", data);\n    return promise.then(data => exports.QueryAllBalancesResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  TotalSupply(request) {\n    const data = exports.QueryTotalSupplyRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"TotalSupply\", data);\n    return promise.then(data => exports.QueryTotalSupplyResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  SupplyOf(request) {\n    const data = exports.QuerySupplyOfRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SupplyOf\", data);\n    return promise.then(data => exports.QuerySupplyOfResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  Params(request) {\n    const data = exports.QueryParamsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Params\", data);\n    return promise.then(data => exports.QueryParamsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  DenomMetadata(request) {\n    const data = exports.QueryDenomMetadataRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomMetadata\", data);\n    return promise.then(data => exports.QueryDenomMetadataResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  DenomsMetadata(request) {\n    const data = exports.QueryDenomsMetadataRequest.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomsMetadata\", data);\n    return promise.then(data => exports.QueryDenomsMetadataResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.QueryClientImpl = QueryClientImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/cosmos/bank/v1beta1/query.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryDenomMetadataResponse = exports.QueryDenomMetadataRequest = exports.QueryDenomsMetadataResponse = exports.QueryDenomsMetadataRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.QuerySupplyOfResponse = exports.QuerySupplyOfRequest = exports.QueryTotalSupplyResponse = exports.QueryTotalSupplyRequest = exports.QueryAllBalancesResponse = exports.QueryAllBalancesRequest = exports.QueryBalanceResponse = exports.QueryBalanceRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nconst pagination_1 = require(\"../../../cosmos/base/query/v1beta1/pagination\");\nconst bank_1 = require(\"../../../cosmos/bank/v1beta1/bank\");\nexports.protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseQueryBalanceRequest = { address: \"\", denom: \"\" };\nexports.QueryBalanceRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.denom !== \"\") {\n            writer.uint32(18).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryBalanceRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryBalanceRequest);\n        message.address = object.address !== undefined && object.address !== null ? String(object.address) : \"\";\n        message.denom = object.denom !== undefined && object.denom !== null ? String(object.denom) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseQueryBalanceRequest);\n        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n        message.denom = (_b = object.denom) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nconst baseQueryBalanceResponse = {};\nexports.QueryBalanceResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.balance !== undefined) {\n            coin_1.Coin.encode(message.balance, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryBalanceResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryBalanceResponse);\n        message.balance =\n            object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromJSON(object.balance) : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryBalanceResponse);\n        message.balance =\n            object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : undefined;\n        return message;\n    },\n};\nconst baseQueryAllBalancesRequest = { address: \"\" };\nexports.QueryAllBalancesRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryAllBalancesRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryAllBalancesRequest);\n        message.address = object.address !== undefined && object.address !== null ? String(object.address) : \"\";\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageRequest.fromJSON(object.pagination)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryAllBalancesRequest);\n        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nconst baseQueryAllBalancesResponse = {};\nexports.QueryAllBalancesResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.balances) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryAllBalancesResponse);\n        message.balances = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balances.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryAllBalancesResponse);\n        message.balances = ((_a = object.balances) !== null && _a !== void 0 ? _a : []).map((e) => coin_1.Coin.fromJSON(e));\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageResponse.fromJSON(object.pagination)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryAllBalancesResponse);\n        message.balances = ((_a = object.balances) === null || _a === void 0 ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageResponse.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nconst baseQueryTotalSupplyRequest = {};\nexports.QueryTotalSupplyRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryTotalSupplyRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryTotalSupplyRequest);\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageRequest.fromJSON(object.pagination)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryTotalSupplyRequest);\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nconst baseQueryTotalSupplyResponse = {};\nexports.QueryTotalSupplyResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.supply) {\n            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryTotalSupplyResponse);\n        message.supply = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryTotalSupplyResponse);\n        message.supply = ((_a = object.supply) !== null && _a !== void 0 ? _a : []).map((e) => coin_1.Coin.fromJSON(e));\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageResponse.fromJSON(object.pagination)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? coin_1.Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryTotalSupplyResponse);\n        message.supply = ((_a = object.supply) === null || _a === void 0 ? void 0 : _a.map((e) => coin_1.Coin.fromPartial(e))) || [];\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageResponse.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nconst baseQuerySupplyOfRequest = { denom: \"\" };\nexports.QuerySupplyOfRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQuerySupplyOfRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQuerySupplyOfRequest);\n        message.denom = object.denom !== undefined && object.denom !== null ? String(object.denom) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseQuerySupplyOfRequest);\n        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nconst baseQuerySupplyOfResponse = {};\nexports.QuerySupplyOfResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.amount !== undefined) {\n            coin_1.Coin.encode(message.amount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQuerySupplyOfResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQuerySupplyOfResponse);\n        message.amount =\n            object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromJSON(object.amount) : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amount !== undefined && (obj.amount = message.amount ? coin_1.Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQuerySupplyOfResponse);\n        message.amount =\n            object.amount !== undefined && object.amount !== null ? coin_1.Coin.fromPartial(object.amount) : undefined;\n        return message;\n    },\n};\nconst baseQueryParamsRequest = {};\nexports.QueryParamsRequest = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryParamsRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseQueryParamsRequest);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseQueryParamsRequest);\n        return message;\n    },\n};\nconst baseQueryParamsResponse = {};\nexports.QueryParamsResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.params !== undefined) {\n            bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryParamsResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = bank_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryParamsResponse);\n        message.params =\n            object.params !== undefined && object.params !== null ? bank_1.Params.fromJSON(object.params) : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryParamsResponse);\n        message.params =\n            object.params !== undefined && object.params !== null ? bank_1.Params.fromPartial(object.params) : undefined;\n        return message;\n    },\n};\nconst baseQueryDenomsMetadataRequest = {};\nexports.QueryDenomsMetadataRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryDenomsMetadataRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryDenomsMetadataRequest);\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageRequest.fromJSON(object.pagination)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryDenomsMetadataRequest);\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageRequest.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nconst baseQueryDenomsMetadataResponse = {};\nexports.QueryDenomsMetadataResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.metadatas) {\n            bank_1.Metadata.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryDenomsMetadataResponse);\n        message.metadatas = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metadatas.push(bank_1.Metadata.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryDenomsMetadataResponse);\n        message.metadatas = ((_a = object.metadatas) !== null && _a !== void 0 ? _a : []).map((e) => bank_1.Metadata.fromJSON(e));\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageResponse.fromJSON(object.pagination)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.metadatas) {\n            obj.metadatas = message.metadatas.map((e) => (e ? bank_1.Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.metadatas = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryDenomsMetadataResponse);\n        message.metadatas = ((_a = object.metadatas) === null || _a === void 0 ? void 0 : _a.map((e) => bank_1.Metadata.fromPartial(e))) || [];\n        message.pagination =\n            object.pagination !== undefined && object.pagination !== null\n                ? pagination_1.PageResponse.fromPartial(object.pagination)\n                : undefined;\n        return message;\n    },\n};\nconst baseQueryDenomMetadataRequest = { denom: \"\" };\nexports.QueryDenomMetadataRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryDenomMetadataRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryDenomMetadataRequest);\n        message.denom = object.denom !== undefined && object.denom !== null ? String(object.denom) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseQueryDenomMetadataRequest);\n        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nconst baseQueryDenomMetadataResponse = {};\nexports.QueryDenomMetadataResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.metadata !== undefined) {\n            bank_1.Metadata.encode(message.metadata, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryDenomMetadataResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metadata = bank_1.Metadata.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryDenomMetadataResponse);\n        message.metadata =\n            object.metadata !== undefined && object.metadata !== null\n                ? bank_1.Metadata.fromJSON(object.metadata)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.metadata !== undefined &&\n            (obj.metadata = message.metadata ? bank_1.Metadata.toJSON(message.metadata) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryDenomMetadataResponse);\n        message.metadata =\n            object.metadata !== undefined && object.metadata !== null\n                ? bank_1.Metadata.fromPartial(object.metadata)\n                : undefined;\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Balance = this.Balance.bind(this);\n        this.AllBalances = this.AllBalances.bind(this);\n        this.TotalSupply = this.TotalSupply.bind(this);\n        this.SupplyOf = this.SupplyOf.bind(this);\n        this.Params = this.Params.bind(this);\n        this.DenomMetadata = this.DenomMetadata.bind(this);\n        this.DenomsMetadata = this.DenomsMetadata.bind(this);\n    }\n    Balance(request) {\n        const data = exports.QueryBalanceRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Balance\", data);\n        return promise.then((data) => exports.QueryBalanceResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    AllBalances(request) {\n        const data = exports.QueryAllBalancesRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"AllBalances\", data);\n        return promise.then((data) => exports.QueryAllBalancesResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    TotalSupply(request) {\n        const data = exports.QueryTotalSupplyRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"TotalSupply\", data);\n        return promise.then((data) => exports.QueryTotalSupplyResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    SupplyOf(request) {\n        const data = exports.QuerySupplyOfRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"SupplyOf\", data);\n        return promise.then((data) => exports.QuerySupplyOfResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    Params(request) {\n        const data = exports.QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"Params\", data);\n        return promise.then((data) => exports.QueryParamsResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    DenomMetadata(request) {\n        const data = exports.QueryDenomMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomMetadata\", data);\n        return promise.then((data) => exports.QueryDenomMetadataResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    DenomsMetadata(request) {\n        const data = exports.QueryDenomsMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Query\", \"DenomsMetadata\", data);\n        return promise.then((data) => exports.QueryDenomsMetadataResponse.decode(new minimal_1.default.Reader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=query.js.map"]},"metadata":{},"sourceType":"script"}