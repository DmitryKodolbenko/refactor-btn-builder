{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Cell,beginCell,Address}from\"ton\";import{message}from\"antd\";import BN from\"bn.js\";import TonWeb from\"tonweb\";var tonweb=new TonWeb(new TonWeb.HttpProvider(\"https://toncenter.com/api/v2/jsonRPC\",{apiKey:\"0e864b650c2d3fed65729622d72fc8b40686f38242e0c187bf2aafe7a028ac59\"}));var prepareParams=function prepareParams(){var params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return params.map(function(p){if(p instanceof Cell){return[\"tvm.Slice\",p.toBoc({idx:false}).toString(\"base64\")];}throw new Error(\"unknown type!\");});};var parseGetMethodCall=function parseGetMethodCall(stack){return stack.map(function(_ref){var _ref2=_slicedToArray(_ref,2),type=_ref2[0],val=_ref2[1];switch(type){case\"num\":return new BN(val.replace(\"0x\",\"\"),\"hex\");case\"cell\":return Cell.fromBoc(Buffer.from(val.bytes,\"base64\"))[0];case\"list\":if(val.elements.length===0){return null;}else{throw new Error(\"list parsing not supported\");}default:throw new Error(\"unknown type: \".concat(type,\", val: \").concat(JSON.stringify(val)));}});};var OPS;(function(OPS){OPS[OPS[\"ChangeAdmin\"]=3]=\"ChangeAdmin\";OPS[OPS[\"ReplaceMetadata\"]=4]=\"ReplaceMetadata\";OPS[OPS[\"Mint\"]=21]=\"Mint\";OPS[OPS[\"InternalTransfer\"]=395134233]=\"InternalTransfer\";OPS[OPS[\"Transfer\"]=260734629]=\"Transfer\";OPS[OPS[\"Burn\"]=1499400124]=\"Burn\";})(OPS||(OPS={}));export function burn(JettonAmount,responseAddress,str){return beginCell().storeUint(OPS.Burn,32)// action\n.storeUint(1,64)// query-id\n.storeCoins(TonWeb.utils.toNano(JettonAmount)).storeAddress(responseAddress).storeRef(beginCell().storeBuffer(Buffer.from(\"<DATA>\".concat(str,\"#\").concat(JettonAmount,\"<DATA>\"),\"ascii\")).endCell()).storeDict(null).endCell();}// const jettonMainContractAdd =\nvar MakeTONJettonsBurnTrx=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(sourceChain,jettonMainContractAdd,activeBtn,setIsload,JettonAmount,TONwallet,netTo,walletTo){var jWalletAddress,data,userJWalletAdd;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!activeBtn){_context.next=22;break;}_context.prev=1;setIsload(true);_context.next=5;return tonweb.call(jettonMainContractAdd,\"get_wallet_address\",prepareParams([beginCell().storeAddress(Address.parse(TONwallet)).endCell()]));case 5:jWalletAddress=_context.sent;_context.next=8;return burn(JettonAmount,Address.parse(TONwallet),\"\".concat(netTo,\"#\").concat(walletTo)).toBoc().toString(\"base64\");case 8:data=_context.sent;userJWalletAdd=parseGetMethodCall(jWalletAddress.stack)[0].beginParse().readAddress().toString(false,false,false);console.log(userJWalletAdd);//@ts-ignore\n_context.next=13;return window.ton.send(\"ton_sendTransaction\",[{to:userJWalletAdd,dataType:\"boc\",value:TonWeb.utils.toNano(0.05).toString(),data:data}]);case 13:listener(sourceChain,walletTo,netTo,userJWalletAdd,JettonAmount,setIsload);// setIsload(false)\n_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](1);console.log(\"Some Error\");console.log(_context.t0);case 20:_context.next=23;break;case 22:message.error(\"Fill all forms and connect wallets!\",10);case 23:case\"end\":return _context.stop();}}},_callee,null,[[1,16]]);}));return function MakeTONJettonsBurnTrx(_x,_x2,_x3,_x4,_x5,_x6,_x7,_x8){return _ref3.apply(this,arguments);};}();var listener=function listener(sourceChain,walletTo,netTo,userJWalletAdd,JettonAmount,setIsload){var trxs=[];var int=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var trxsa,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:message.success(\"Wait BE trx pending...\",2);_context2.next=3;return tonweb.getTransactions(userJWalletAdd,10);case 3:trxsa=_context2.sent;data=trxsa.filter(function(e){return atob(e.in_msg.msg_data.body).split(\"<DATA>\")[1]===\"\".concat(netTo,\"#\").concat(walletTo,\"#\").concat(JettonAmount);});if(!data[0]&&trxs.length===0){trxs.push({transaction_id:{hash:\"test\"}});}else if(trxs.length===0&&data[0]){trxs=data;}if(data[0].transaction_id.hash!==trxs[0].transaction_id.hash&&trxs.length!==0){clearInterval(int);message.success(\"Done BE trx!\",10);fetch(process.env.REACT_APP_STATE===\"dev\"?\"http://localhost:8092\":process.env.REACT_APP_STATE===\"dev-remote\"?\"https://dev.api.tonana.org\":\"https://api.tonana.org/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({hash:data[0].transaction_id.hash,sourceChain:sourceChain})});// console.log(e);\nsetIsload(false);message.success(\"Done trx!\",10);}case 7:case\"end\":return _context2.stop();}}},_callee2);})),8000);};export default MakeTONJettonsBurnTrx;","map":{"version":3,"names":["Cell","beginCell","Address","message","BN","TonWeb","tonweb","HttpProvider","apiKey","prepareParams","params","map","p","toBoc","idx","toString","Error","parseGetMethodCall","stack","type","val","replace","fromBoc","Buffer","from","bytes","elements","length","JSON","stringify","OPS","burn","JettonAmount","responseAddress","str","storeUint","Burn","storeCoins","utils","toNano","storeAddress","storeRef","storeBuffer","endCell","storeDict","MakeTONJettonsBurnTrx","sourceChain","jettonMainContractAdd","activeBtn","setIsload","TONwallet","netTo","walletTo","call","parse","jWalletAddress","data","userJWalletAdd","beginParse","readAddress","console","log","window","ton","send","to","dataType","value","listener","error","trxs","int","setInterval","success","getTransactions","trxsa","filter","e","atob","in_msg","msg_data","body","split","push","transaction_id","hash","clearInterval","fetch","process","env","REACT_APP_STATE","method","headers"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeTONJettonsBurnTrx.ts"],"sourcesContent":["import { Cell, beginCell, Address, BitString } from \"ton\";\nimport { message } from \"antd\";\nimport BN from \"bn.js\";\nimport TonWeb from \"tonweb\";\n\nconst tonweb = new TonWeb(\n\tnew TonWeb.HttpProvider(\"https://toncenter.com/api/v2/jsonRPC\", {\n\t\tapiKey: \"0e864b650c2d3fed65729622d72fc8b40686f38242e0c187bf2aafe7a028ac59\",\n\t})\n);\n\nconst prepareParams = (params: Cell[] = []) => {\n\treturn params.map((p) => {\n\t\tif (p instanceof Cell) {\n\t\t\treturn [\"tvm.Slice\", p.toBoc({ idx: false }).toString(\"base64\")];\n\t\t}\n\t\tthrow new Error(\"unknown type!\");\n\t});\n};\n\nconst parseGetMethodCall = (stack: [[\"num\" | \"cell\" | \"list\", any]]): any[] => {\n\treturn stack.map(([type, val]) => {\n\t\tswitch (type) {\n\t\t\tcase \"num\":\n\t\t\t\treturn new BN(val.replace(\"0x\", \"\"), \"hex\");\n\t\t\tcase \"cell\":\n\t\t\t\treturn Cell.fromBoc(Buffer.from(val.bytes, \"base64\"))[0];\n\t\t\tcase \"list\":\n\t\t\t\tif (val.elements.length === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"list parsing not supported\");\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unknown type: ${type}, val: ${JSON.stringify(val)}`);\n\t\t}\n\t});\n};\n\nenum OPS {\n\tChangeAdmin = 3,\n\tReplaceMetadata = 4,\n\tMint = 21,\n\tInternalTransfer = 0x178d4519,\n\tTransfer = 0xf8a7ea5,\n\tBurn = 0x595f07bc,\n}\n\nexport function burn(\n\tJettonAmount: number,\n\tresponseAddress: Address,\n\tstr: String\n) {\n\treturn beginCell()\n\t\t.storeUint(OPS.Burn, 32) // action\n\t\t.storeUint(1, 64) // query-id\n\t\t.storeCoins(TonWeb.utils.toNano(JettonAmount))\n\t\t.storeAddress(responseAddress)\n\t\t.storeRef(\n\t\t\tbeginCell()\n\t\t\t\t.storeBuffer(Buffer.from(`<DATA>${str}#${JettonAmount}<DATA>`, \"ascii\"))\n\t\t\t\t.endCell()\n\t\t)\n\t\t.storeDict(null)\n\t\t.endCell();\n}\n\n// const jettonMainContractAdd =\n\nconst MakeTONJettonsBurnTrx = async (\n\tsourceChain: string,\n\tjettonMainContractAdd: string,\n\tactiveBtn: any,\n\tsetIsload: any,\n\tJettonAmount: any,\n\tTONwallet: any,\n\tnetTo: string,\n\twalletTo: any\n) => {\n\tif (activeBtn) {\n\t\ttry {\n\t\t\tsetIsload(true);\n\t\t\tconst jWalletAddress = await tonweb.call(\n\t\t\t\tjettonMainContractAdd,\n\t\t\t\t\"get_wallet_address\",\n\t\t\t\tprepareParams([\n\t\t\t\t\tbeginCell().storeAddress(Address.parse(TONwallet)).endCell(),\n\t\t\t\t]) as any\n\t\t\t);\n\t\t\tconst data = await burn(\n\t\t\t\tJettonAmount,\n\t\t\t\tAddress.parse(TONwallet),\n\t\t\t\t`${netTo}#${walletTo}`\n\t\t\t)\n\t\t\t\t.toBoc()\n\t\t\t\t.toString(\"base64\");\n\n\t\t\tconst userJWalletAdd = parseGetMethodCall(\n\t\t\t\tjWalletAddress.stack as [[\"num\" | \"cell\", any]]\n\t\t\t)[0]\n\t\t\t\t.beginParse()\n\t\t\t\t.readAddress()\n\t\t\t\t.toString(false, false, false);\n\t\t\tconsole.log(userJWalletAdd);\n\t\t\t//@ts-ignore\n\t\t\tawait window.ton.send(\"ton_sendTransaction\", [\n\t\t\t\t{\n\t\t\t\t\tto: userJWalletAdd,\n\t\t\t\t\tdataType: \"boc\",\n\t\t\t\t\tvalue: TonWeb.utils.toNano(0.05).toString(),\n\t\t\t\t\tdata: data,\n\t\t\t\t},\n\t\t\t]);\n\t\t\tlistener(\n\t\t\t\tsourceChain,\n\t\t\t\twalletTo,\n\t\t\t\tnetTo,\n\t\t\t\tuserJWalletAdd,\n\t\t\t\tJettonAmount,\n\t\t\t\tsetIsload\n\t\t\t);\n\n\t\t\t// setIsload(false)\n\t\t} catch (e: any) {\n\t\t\tconsole.log(\"Some Error\");\n\t\t\tconsole.log(e);\n\t\t}\n\t} else {\n\t\tmessage.error(\"Fill all forms and connect wallets!\", 10);\n\t}\n};\n\nconst listener = (\n\tsourceChain: string,\n\twalletTo: any,\n\tnetTo: string,\n\tuserJWalletAdd: any,\n\tJettonAmount: number,\n\tsetIsload: any\n) => {\n\tlet trxs: any = [];\n\tconst int = setInterval(async () => {\n\t\tmessage.success(\"Wait BE trx pending...\", 2);\n\n\t\tconst trxsa = await tonweb.getTransactions(userJWalletAdd, 10);\n\t\tconst data = trxsa.filter(\n\t\t\t(e: any) =>\n\t\t\t\tatob(e.in_msg.msg_data.body).split(\"<DATA>\")[1] ===\n\t\t\t\t`${netTo}#${walletTo}#${JettonAmount}`\n\t\t);\n\n\t\tif (!data[0] && trxs.length === 0) {\n\t\t\ttrxs.push({ transaction_id: { hash: \"test\" } });\n\t\t} else if (trxs.length === 0 && data[0]) {\n\t\t\ttrxs = data;\n\t\t}\n\n\t\tif (\n\t\t\tdata[0].transaction_id.hash !== trxs[0].transaction_id.hash &&\n\t\t\ttrxs.length !== 0\n\t\t) {\n\t\t\tclearInterval(int);\n\n\t\t\tmessage.success(\"Done BE trx!\", 10);\n\n\t\t\tfetch(\n\t\t\t\tprocess.env.REACT_APP_STATE === \"dev\"\n\t\t\t\t\t? \"http://localhost:8092\"\n\t\t\t\t\t: process.env.REACT_APP_STATE === \"dev-remote\"\n\t\t\t\t\t? \"https://dev.api.tonana.org\"\n\t\t\t\t\t: \"https://api.tonana.org/\",\n\t\t\t\t{\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\thash: data[0].transaction_id.hash,\n\t\t\t\t\t\tsourceChain: sourceChain,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t\t// console.log(e);\n\t\t\tsetIsload(false);\n\n\t\t\tmessage.success(\"Done trx!\", 10);\n\t\t}\n\t}, 8000);\n};\n\nexport default MakeTONJettonsBurnTrx;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}