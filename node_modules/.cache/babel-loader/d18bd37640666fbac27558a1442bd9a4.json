{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;\nconst utils_1 = require(\"@cosmjs/utils\");\nconst gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\nconst long_1 = __importDefault(require(\"long\"));\nfunction isAminoMsgSubmitProposal(msg) {\n  return msg.type === \"cosmos-sdk/MsgSubmitProposal\";\n}\nexports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;\nfunction isAminoMsgVote(msg) {\n  return msg.type === \"cosmos-sdk/MsgVote\";\n}\nexports.isAminoMsgVote = isAminoMsgVote;\nfunction isAminoMsgDeposit(msg) {\n  return msg.type === \"cosmos-sdk/MsgDeposit\";\n}\nexports.isAminoMsgDeposit = isAminoMsgDeposit;\nfunction createGovAminoConverters() {\n  return {\n    \"/cosmos.gov.v1beta1.MsgDeposit\": {\n      aminoType: \"cosmos-sdk/MsgDeposit\",\n      toAmino: _ref => {\n        let {\n          amount,\n          depositor,\n          proposalId\n        } = _ref;\n        return {\n          amount,\n          depositor,\n          proposal_id: proposalId.toString()\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          amount,\n          depositor,\n          proposal_id\n        } = _ref2;\n        return {\n          amount: Array.from(amount),\n          depositor,\n          proposalId: long_1.default.fromString(proposal_id)\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVote\": {\n      aminoType: \"cosmos-sdk/MsgVote\",\n      toAmino: _ref3 => {\n        let {\n          option,\n          proposalId,\n          voter\n        } = _ref3;\n        return {\n          option: option,\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          option,\n          proposal_id,\n          voter\n        } = _ref4;\n        return {\n          option: (0, gov_1.voteOptionFromJSON)(option),\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n      aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n      toAmino: _ref5 => {\n        let {\n          initialDeposit,\n          proposer,\n          content\n        } = _ref5;\n        (0, utils_1.assertDefinedAndNotNull)(content);\n        let proposal;\n        switch (content.typeUrl) {\n          case \"/cosmos.gov.v1beta1.TextProposal\":\n            {\n              const textProposal = gov_1.TextProposal.decode(content.value);\n              proposal = {\n                type: \"cosmos-sdk/TextProposal\",\n                value: {\n                  description: textProposal.description,\n                  title: textProposal.title\n                }\n              };\n              break;\n            }\n          default:\n            throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n        }\n        return {\n          initial_deposit: initialDeposit,\n          proposer: proposer,\n          content: proposal\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          initial_deposit,\n          proposer,\n          content\n        } = _ref6;\n        let any_content;\n        switch (content.type) {\n          case \"cosmos-sdk/TextProposal\":\n            {\n              const {\n                value\n              } = content;\n              (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));\n              const {\n                title,\n                description\n              } = value;\n              (0, utils_1.assert)(typeof title === \"string\");\n              (0, utils_1.assert)(typeof description === \"string\");\n              any_content = any_1.Any.fromPartial({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                  title: title,\n                  description: description\n                })).finish()\n              });\n              break;\n            }\n          default:\n            throw new Error(`Unsupported proposal type: '${content.type}'`);\n        }\n        return {\n          initialDeposit: Array.from(initial_deposit),\n          proposer: proposer,\n          content: any_content\n        };\n      }\n    }\n  };\n}\nexports.createGovAminoConverters = createGovAminoConverters;","map":{"version":3,"sources":["../../../src/modules/gov/aminomessages.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;\nconst utils_1 = require(\"@cosmjs/utils\");\nconst gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\nconst long_1 = __importDefault(require(\"long\"));\nfunction isAminoMsgSubmitProposal(msg) {\n    return msg.type === \"cosmos-sdk/MsgSubmitProposal\";\n}\nexports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;\nfunction isAminoMsgVote(msg) {\n    return msg.type === \"cosmos-sdk/MsgVote\";\n}\nexports.isAminoMsgVote = isAminoMsgVote;\nfunction isAminoMsgDeposit(msg) {\n    return msg.type === \"cosmos-sdk/MsgDeposit\";\n}\nexports.isAminoMsgDeposit = isAminoMsgDeposit;\nfunction createGovAminoConverters() {\n    return {\n        \"/cosmos.gov.v1beta1.MsgDeposit\": {\n            aminoType: \"cosmos-sdk/MsgDeposit\",\n            toAmino: ({ amount, depositor, proposalId }) => {\n                return {\n                    amount,\n                    depositor,\n                    proposal_id: proposalId.toString(),\n                };\n            },\n            fromAmino: ({ amount, depositor, proposal_id }) => {\n                return {\n                    amount: Array.from(amount),\n                    depositor,\n                    proposalId: long_1.default.fromString(proposal_id),\n                };\n            },\n        },\n        \"/cosmos.gov.v1beta1.MsgVote\": {\n            aminoType: \"cosmos-sdk/MsgVote\",\n            toAmino: ({ option, proposalId, voter }) => {\n                return {\n                    option: option,\n                    proposal_id: proposalId.toString(),\n                    voter: voter,\n                };\n            },\n            fromAmino: ({ option, proposal_id, voter }) => {\n                return {\n                    option: (0, gov_1.voteOptionFromJSON)(option),\n                    proposalId: long_1.default.fromString(proposal_id),\n                    voter: voter,\n                };\n            },\n        },\n        \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n            aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n            toAmino: ({ initialDeposit, proposer, content, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(content);\n                let proposal;\n                switch (content.typeUrl) {\n                    case \"/cosmos.gov.v1beta1.TextProposal\": {\n                        const textProposal = gov_1.TextProposal.decode(content.value);\n                        proposal = {\n                            type: \"cosmos-sdk/TextProposal\",\n                            value: {\n                                description: textProposal.description,\n                                title: textProposal.title,\n                            },\n                        };\n                        break;\n                    }\n                    default:\n                        throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n                }\n                return {\n                    initial_deposit: initialDeposit,\n                    proposer: proposer,\n                    content: proposal,\n                };\n            },\n            fromAmino: ({ initial_deposit, proposer, content, }) => {\n                let any_content;\n                switch (content.type) {\n                    case \"cosmos-sdk/TextProposal\": {\n                        const { value } = content;\n                        (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));\n                        const { title, description } = value;\n                        (0, utils_1.assert)(typeof title === \"string\");\n                        (0, utils_1.assert)(typeof description === \"string\");\n                        any_content = any_1.Any.fromPartial({\n                            typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                            value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                                title: title,\n                                description: description,\n                            })).finish(),\n                        });\n                        break;\n                    }\n                    default:\n                        throw new Error(`Unsupported proposal type: '${content.type}'`);\n                }\n                return {\n                    initialDeposit: Array.from(initial_deposit),\n                    proposer: proposer,\n                    content: any_content,\n                };\n            },\n        },\n    };\n}\nexports.createGovAminoConverters = createGovAminoConverters;\n//# sourceMappingURL=aminomessages.js.map"]},"metadata":{},"sourceType":"script"}