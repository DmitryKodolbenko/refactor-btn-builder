{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.openBox = exports.sealBox = exports.signVerify = exports.sign = exports.keyPairFromSeed = exports.keyPairFromSecretKey = void 0;\nvar tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nfunction keyPairFromSecretKey(secretKey) {\n  var res = tweetnacl_1.default.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));\n  return {\n    publicKey: Buffer.from(res.publicKey),\n    secretKey: Buffer.from(res.secretKey)\n  };\n}\nexports.keyPairFromSecretKey = keyPairFromSecretKey;\nfunction keyPairFromSeed(secretKey) {\n  var res = tweetnacl_1.default.sign.keyPair.fromSeed(new Uint8Array(secretKey));\n  return {\n    publicKey: Buffer.from(res.publicKey),\n    secretKey: Buffer.from(res.secretKey)\n  };\n}\nexports.keyPairFromSeed = keyPairFromSeed;\nfunction sign(data, secretKey) {\n  return Buffer.from(tweetnacl_1.default.sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));\n}\nexports.sign = sign;\nfunction signVerify(data, signature, publicKey) {\n  return tweetnacl_1.default.sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));\n}\nexports.signVerify = signVerify;\nfunction sealBox(data, nonce, key) {\n  return Buffer.from(tweetnacl_1.default.secretbox(data, nonce, key));\n}\nexports.sealBox = sealBox;\nfunction openBox(data, nonce, key) {\n  var res = tweetnacl_1.default.secretbox.open(data, nonce, key);\n  if (!res) {\n    return null;\n  }\n  return Buffer.from(res);\n}\nexports.openBox = openBox;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","openBox","sealBox","signVerify","sign","keyPairFromSeed","keyPairFromSecretKey","tweetnacl_1","require","secretKey","res","default","keyPair","fromSecretKey","Uint8Array","publicKey","Buffer","from","fromSeed","data","detached","signature","verify","nonce","key","secretbox","open"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/node_modules/ton-crypto/dist/primitives/nacl.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openBox = exports.sealBox = exports.signVerify = exports.sign = exports.keyPairFromSeed = exports.keyPairFromSecretKey = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nfunction keyPairFromSecretKey(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSecretKey = keyPairFromSecretKey;\nfunction keyPairFromSeed(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSeed(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSeed = keyPairFromSeed;\nfunction sign(data, secretKey) {\n    return Buffer.from(tweetnacl_1.default.sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));\n}\nexports.sign = sign;\nfunction signVerify(data, signature, publicKey) {\n    return tweetnacl_1.default.sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));\n}\nexports.signVerify = signVerify;\nfunction sealBox(data, nonce, key) {\n    return Buffer.from(tweetnacl_1.default.secretbox(data, nonce, key));\n}\nexports.sealBox = sealBox;\nfunction openBox(data, nonce, key) {\n    let res = tweetnacl_1.default.secretbox.open(data, nonce, key);\n    if (!res) {\n        return null;\n    }\n    return Buffer.from(res);\n}\nexports.openBox = openBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}