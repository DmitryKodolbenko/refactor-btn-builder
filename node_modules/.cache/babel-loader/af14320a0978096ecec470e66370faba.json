{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpApi = void 0;\nvar t = __importStar(require(\"io-ts\"));\nvar Either_1 = require(\"fp-ts/lib/Either\");\nvar io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nvar dataloader_1 = __importDefault(require(\"dataloader\"));\nvar axios_1 = __importDefault(require(\"axios\"));\nvar version = require('../../../package.json').version;\nvar blockIdExt = t.type({\n  '@type': t.literal('ton.blockIdExt'),\n  workchain: t.number,\n  shard: t.string,\n  seqno: t.number,\n  root_hash: t.string,\n  file_hash: t.string\n});\nvar addressInformation = t.type({\n  balance: t.union([t.number, t.string]),\n  state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n  data: t.string,\n  code: t.string,\n  last_transaction_id: t.type({\n    '@type': t.literal('internal.transactionId'),\n    lt: t.string,\n    hash: t.string\n  }),\n  block_id: blockIdExt,\n  sync_utime: t.number\n});\nvar bocResponse = t.type({\n  '@type': t.literal('ok')\n});\nvar feeResponse = t.type({\n  '@type': t.literal('query.fees'),\n  source_fees: t.type({\n    '@type': t.literal('fees'),\n    in_fwd_fee: t.number,\n    storage_fee: t.number,\n    gas_fee: t.number,\n    fwd_fee: t.number\n  })\n});\nvar _callGetMethod = t.type({\n  gas_used: t.number,\n  exit_code: t.number,\n  stack: t.array(t.unknown)\n});\nvar messageData = t.union([t.type({\n  '@type': t.literal('msg.dataRaw'),\n  'body': t.string\n}), t.type({\n  '@type': t.literal('msg.dataText'),\n  'text': t.string\n}), t.type({\n  '@type': t.literal('msg.dataDecryptedText'),\n  'text': t.string\n}), t.type({\n  '@type': t.literal('msg.dataEncryptedText'),\n  'text': t.string\n})]);\nvar message = t.type({\n  source: t.string,\n  destination: t.string,\n  value: t.string,\n  fwd_fee: t.string,\n  ihr_fee: t.string,\n  created_lt: t.string,\n  body_hash: t.string,\n  msg_data: messageData\n});\nvar transaction = t.type({\n  data: t.string,\n  utime: t.number,\n  transaction_id: t.type({\n    lt: t.string,\n    hash: t.string\n  }),\n  fee: t.string,\n  storage_fee: t.string,\n  other_fee: t.string,\n  in_msg: t.union([t.undefined, message]),\n  out_msgs: t.array(message)\n});\nvar _getTransactions = t.array(transaction);\nvar getMasterchain = t.type({\n  state_root_hash: t.string,\n  last: blockIdExt,\n  init: blockIdExt\n});\nvar getShards = t.type({\n  shards: t.array(blockIdExt)\n});\nvar blockShortTxt = t.type({\n  '@type': t.literal('blocks.shortTxId'),\n  mode: t.number,\n  account: t.string,\n  lt: t.string,\n  hash: t.string\n});\nvar getBlockTransactions = t.type({\n  id: blockIdExt,\n  req_count: t.number,\n  incomplete: t.boolean,\n  transactions: t.array(blockShortTxt)\n});\nvar TypedCache = /*#__PURE__*/function () {\n  function TypedCache(namespace, cache, codec, keyEncoder) {\n    _classCallCheck(this, TypedCache);\n    this.namespace = namespace;\n    this.cache = cache;\n    this.codec = codec;\n    this.keyEncoder = keyEncoder;\n  }\n  _createClass(TypedCache, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n        var ex, decoded;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.cache.get(this.namespace, this.keyEncoder(key));\n              case 2:\n                ex = _context.sent;\n                if (!ex) {\n                  _context.next = 7;\n                  break;\n                }\n                decoded = this.codec.decode(JSON.parse(ex));\n                if (!(0, Either_1.isRight)(decoded)) {\n                  _context.next = 7;\n                  break;\n                }\n                return _context.abrupt(\"return\", decoded.right);\n              case 7:\n                return _context.abrupt(\"return\", null);\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, value) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(value !== null)) {\n                  _context2.next = 5;\n                  break;\n                }\n                _context2.next = 3;\n                return this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n              case 3:\n                _context2.next = 7;\n                break;\n              case 5:\n                _context2.next = 7;\n                return this.cache.set(this.namespace, this.keyEncoder(key), null);\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function set(_x2, _x3) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n  }]);\n  return TypedCache;\n}();\nvar HttpApi = /*#__PURE__*/function () {\n  function HttpApi(endpoint, cache, parameters) {\n    var _this = this;\n    _classCallCheck(this, HttpApi);\n    this.endpoint = endpoint;\n    this.cache = cache;\n    this.parameters = {\n      timeout: (parameters === null || parameters === void 0 ? void 0 : parameters.timeout) || 30000,\n      apiKey: parameters === null || parameters === void 0 ? void 0 : parameters.apiKey\n    };\n    // Shard\n    this.shardCache = new TypedCache('ton-shard', cache, t.array(blockIdExt), function (src) {\n      return src + '';\n    });\n    this.shardLoader = new dataloader_1.default( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(src) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Promise.all(src.map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(v) {\n                    var cached, loaded;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return _this.shardCache.get(v);\n                          case 2:\n                            cached = _context3.sent;\n                            if (!cached) {\n                              _context3.next = 5;\n                              break;\n                            }\n                            return _context3.abrupt(\"return\", cached);\n                          case 5:\n                            _context3.next = 7;\n                            return _this.doCall('shards', {\n                              seqno: v\n                            }, getShards);\n                          case 7:\n                            loaded = _context3.sent.shards;\n                            _context3.next = 10;\n                            return _this.shardCache.set(v, loaded);\n                          case 10:\n                            return _context3.abrupt(\"return\", loaded);\n                          case 11:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                  return function (_x5) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return function (_x4) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    // Shard Transactions\n    this.shardTransactionsCache = new TypedCache('ton-shard-tx', cache, getBlockTransactions, function (src) {\n      return src.workchain + ':' + src.shard + ':' + src.seqno;\n    });\n    this.shardTransactionsLoader = new dataloader_1.default( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(src) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Promise.all(src.map( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(v) {\n                    var cached, loaded;\n                    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return _this.shardTransactionsCache.get(v);\n                          case 2:\n                            cached = _context5.sent;\n                            if (!cached) {\n                              _context5.next = 5;\n                              break;\n                            }\n                            return _context5.abrupt(\"return\", cached);\n                          case 5:\n                            _context5.next = 7;\n                            return _this.doCall('getBlockTransactions', {\n                              workchain: v.workchain,\n                              seqno: v.seqno,\n                              shard: v.shard\n                            }, getBlockTransactions);\n                          case 7:\n                            loaded = _context5.sent;\n                            _context5.next = 10;\n                            return _this.shardTransactionsCache.set(v, loaded);\n                          case 10:\n                            return _context5.abrupt(\"return\", loaded);\n                          case 11:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n                  return function (_x7) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }()));\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n      return function (_x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }(), {\n      cacheKeyFn: function cacheKeyFn(src) {\n        return src.workchain + ':' + src.shard + ':' + src.seqno;\n      }\n    });\n  }\n  _createClass(HttpApi, [{\n    key: \"getAddressInformation\",\n    value: function getAddressInformation(address) {\n      return this.doCall('getAddressInformation', {\n        address: address.toString()\n      }, addressInformation);\n    }\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(address, opts) {\n        var inclusive, hash, limit, res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                inclusive = opts.inclusive;\n                delete opts.inclusive;\n                // Convert hash\n                hash = undefined;\n                if (opts.hash) {\n                  hash = Buffer.from(opts.hash, 'base64').toString('hex');\n                }\n                // Adjust limit\n                limit = opts.limit;\n                if (opts.hash && opts.lt && inclusive !== true) {\n                  limit++;\n                }\n                // Do request\n                _context7.next = 8;\n                return this.doCall('getTransactions', _objectSpread(_objectSpread({\n                  address: address.toString()\n                }, opts), {}, {\n                  limit: limit,\n                  hash: hash\n                }), _getTransactions);\n              case 8:\n                res = _context7.sent;\n                if (res.length > limit) {\n                  res = res.slice(0, limit);\n                }\n                // Adjust result\n                if (!(opts.hash && opts.lt && inclusive !== true)) {\n                  _context7.next = 15;\n                  break;\n                }\n                res.shift();\n                return _context7.abrupt(\"return\", res);\n              case 15:\n                return _context7.abrupt(\"return\", res);\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function getTransactions(_x8, _x9) {\n        return _getTransactions2.apply(this, arguments);\n      }\n      return getTransactions;\n    }()\n  }, {\n    key: \"getMasterchainInfo\",\n    value: function () {\n      var _getMasterchainInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.doCall('getMasterchainInfo', {}, getMasterchain);\n              case 2:\n                return _context8.abrupt(\"return\", _context8.sent);\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function getMasterchainInfo() {\n        return _getMasterchainInfo.apply(this, arguments);\n      }\n      return getMasterchainInfo;\n    }()\n  }, {\n    key: \"getShards\",\n    value: function () {\n      var _getShards = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(seqno) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.shardLoader.load(seqno);\n              case 2:\n                return _context9.abrupt(\"return\", _context9.sent);\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function getShards(_x10) {\n        return _getShards.apply(this, arguments);\n      }\n      return getShards;\n    }()\n  }, {\n    key: \"getBlockTransactions\",\n    value: function () {\n      var _getBlockTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(workchain, seqno, shard) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.shardTransactionsLoader.load({\n                  workchain: workchain,\n                  seqno: seqno,\n                  shard: shard\n                });\n              case 2:\n                return _context10.abrupt(\"return\", _context10.sent);\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function getBlockTransactions(_x11, _x12, _x13) {\n        return _getBlockTransactions.apply(this, arguments);\n      }\n      return getBlockTransactions;\n    }()\n  }, {\n    key: \"getTransaction\",\n    value: function () {\n      var _getTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(address, lt, hash) {\n        var convHash, res, ex;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                convHash = Buffer.from(hash, 'base64').toString('hex');\n                _context11.next = 3;\n                return this.doCall('getTransactions', {\n                  address: address.toString(),\n                  lt: lt,\n                  hash: convHash,\n                  limit: 1\n                }, _getTransactions);\n              case 3:\n                res = _context11.sent;\n                ex = res.find(function (v) {\n                  return v.transaction_id.lt === lt && v.transaction_id.hash === hash;\n                });\n                if (!ex) {\n                  _context11.next = 9;\n                  break;\n                }\n                return _context11.abrupt(\"return\", ex);\n              case 9:\n                return _context11.abrupt(\"return\", null);\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n      function getTransaction(_x14, _x15, _x16) {\n        return _getTransaction.apply(this, arguments);\n      }\n      return getTransaction;\n    }()\n  }, {\n    key: \"callGetMethod\",\n    value: function () {\n      var _callGetMethod2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(address, method, params) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.doCall('runGetMethod', {\n                  address: address.toString(),\n                  method: method,\n                  stack: params\n                }, _callGetMethod);\n              case 2:\n                return _context12.abrupt(\"return\", _context12.sent);\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n      function callGetMethod(_x17, _x18, _x19) {\n        return _callGetMethod2.apply(this, arguments);\n      }\n      return callGetMethod;\n    }()\n  }, {\n    key: \"sendBoc\",\n    value: function () {\n      var _sendBoc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(body) {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.doCall('sendBoc', {\n                  boc: body.toString('base64')\n                }, bocResponse);\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n      function sendBoc(_x20) {\n        return _sendBoc.apply(this, arguments);\n      }\n      return sendBoc;\n    }()\n  }, {\n    key: \"estimateFee\",\n    value: function () {\n      var _estimateFee = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(address, args) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.t0 = this;\n                _context14.t1 = address.toFriendly();\n                _context14.next = 4;\n                return args.body.toBoc({\n                  idx: false\n                });\n              case 4:\n                _context14.t2 = _context14.sent.toString('base64');\n                if (!args.initData) {\n                  _context14.next = 11;\n                  break;\n                }\n                _context14.next = 8;\n                return args.initData.toBoc({\n                  idx: false\n                });\n              case 8:\n                _context14.t3 = _context14.sent.toString('base64');\n                _context14.next = 12;\n                break;\n              case 11:\n                _context14.t3 = '';\n              case 12:\n                _context14.t4 = _context14.t3;\n                if (!args.initCode) {\n                  _context14.next = 19;\n                  break;\n                }\n                _context14.next = 16;\n                return args.initCode.toBoc({\n                  idx: false\n                });\n              case 16:\n                _context14.t5 = _context14.sent.toString('base64');\n                _context14.next = 20;\n                break;\n              case 19:\n                _context14.t5 = '';\n              case 20:\n                _context14.t6 = _context14.t5;\n                _context14.t7 = args.ignoreSignature;\n                _context14.t8 = {\n                  address: _context14.t1,\n                  body: _context14.t2,\n                  'init_data': _context14.t4,\n                  'init_code': _context14.t6,\n                  ignore_chksig: _context14.t7\n                };\n                _context14.t9 = feeResponse;\n                _context14.next = 26;\n                return _context14.t0.doCall.call(_context14.t0, 'estimateFee', _context14.t8, _context14.t9);\n              case 26:\n                return _context14.abrupt(\"return\", _context14.sent);\n              case 27:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n      function estimateFee(_x21, _x22) {\n        return _estimateFee.apply(this, arguments);\n      }\n      return estimateFee;\n    }()\n  }, {\n    key: \"doCall\",\n    value: function () {\n      var _doCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(method, body, codec) {\n        var headers, res, decoded;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                headers = {\n                  'Content-Type': 'application/json',\n                  'X-Ton-Client-Version': version\n                };\n                if (this.parameters.apiKey) {\n                  headers['X-API-Key'] = this.parameters.apiKey;\n                }\n                _context15.next = 4;\n                return axios_1.default.post(this.endpoint, JSON.stringify({\n                  id: '1',\n                  jsonrpc: '2.0',\n                  method: method,\n                  params: body\n                }), {\n                  headers: headers,\n                  timeout: this.parameters.timeout\n                });\n              case 4:\n                res = _context15.sent;\n                if (!(res.status !== 200 || !res.data.ok)) {\n                  _context15.next = 7;\n                  break;\n                }\n                throw Error('Received error: ' + JSON.stringify(res.data));\n              case 7:\n                decoded = codec.decode(res.data.result);\n                if (!(0, Either_1.isRight)(decoded)) {\n                  _context15.next = 12;\n                  break;\n                }\n                return _context15.abrupt(\"return\", decoded.right);\n              case 12:\n                throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n              case 13:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n      function doCall(_x23, _x24, _x25) {\n        return _doCall.apply(this, arguments);\n      }\n      return doCall;\n    }()\n  }]);\n  return HttpApi;\n}();\nexports.HttpApi = HttpApi;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","HttpApi","t","require","Either_1","io_ts_reporters_1","dataloader_1","axios_1","version","blockIdExt","type","literal","workchain","number","shard","string","seqno","root_hash","file_hash","addressInformation","balance","union","state","data","code","last_transaction_id","lt","hash","block_id","sync_utime","bocResponse","feeResponse","source_fees","in_fwd_fee","storage_fee","gas_fee","fwd_fee","callGetMethod","gas_used","exit_code","stack","array","unknown","messageData","message","source","destination","ihr_fee","created_lt","body_hash","msg_data","transaction","utime","transaction_id","fee","other_fee","in_msg","out_msgs","getTransactions","getMasterchain","state_root_hash","last","init","getShards","shards","blockShortTxt","mode","account","getBlockTransactions","id","req_count","incomplete","boolean","transactions","TypedCache","namespace","cache","codec","keyEncoder","key","ex","decoded","decode","JSON","parse","isRight","right","set","stringify","endpoint","parameters","timeout","apiKey","shardCache","src","shardLoader","default","Promise","all","map","cached","doCall","loaded","shardTransactionsCache","shardTransactionsLoader","cacheKeyFn","address","toString","opts","inclusive","Buffer","from","limit","res","length","slice","shift","load","convHash","find","method","params","body","boc","args","toFriendly","toBoc","idx","initData","initCode","ignoreSignature","ignore_chksig","headers","post","jsonrpc","status","ok","Error","report","join"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/client/api/HttpApi.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpApi = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst version = require('../../../package.json').version;\nconst blockIdExt = t.type({\n    '@type': t.literal('ton.blockIdExt'),\n    workchain: t.number,\n    shard: t.string,\n    seqno: t.number,\n    root_hash: t.string,\n    file_hash: t.string\n});\nconst addressInformation = t.type({\n    balance: t.union([t.number, t.string]),\n    state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n    data: t.string,\n    code: t.string,\n    last_transaction_id: t.type({\n        '@type': t.literal('internal.transactionId'),\n        lt: t.string,\n        hash: t.string\n    }),\n    block_id: blockIdExt,\n    sync_utime: t.number\n});\nconst bocResponse = t.type({\n    '@type': t.literal('ok')\n});\nconst feeResponse = t.type({\n    '@type': t.literal('query.fees'),\n    source_fees: t.type({\n        '@type': t.literal('fees'),\n        in_fwd_fee: t.number,\n        storage_fee: t.number,\n        gas_fee: t.number,\n        fwd_fee: t.number\n    })\n});\nconst callGetMethod = t.type({\n    gas_used: t.number,\n    exit_code: t.number,\n    stack: t.array(t.unknown)\n});\nconst messageData = t.union([\n    t.type({\n        '@type': t.literal('msg.dataRaw'),\n        'body': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataDecryptedText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataEncryptedText'),\n        'text': t.string\n    })\n]);\nconst message = t.type({\n    source: t.string,\n    destination: t.string,\n    value: t.string,\n    fwd_fee: t.string,\n    ihr_fee: t.string,\n    created_lt: t.string,\n    body_hash: t.string,\n    msg_data: messageData\n});\nconst transaction = t.type({\n    data: t.string,\n    utime: t.number,\n    transaction_id: t.type({\n        lt: t.string,\n        hash: t.string\n    }),\n    fee: t.string,\n    storage_fee: t.string,\n    other_fee: t.string,\n    in_msg: t.union([t.undefined, message]),\n    out_msgs: t.array(message)\n});\nconst getTransactions = t.array(transaction);\nconst getMasterchain = t.type({\n    state_root_hash: t.string,\n    last: blockIdExt,\n    init: blockIdExt\n});\nconst getShards = t.type({\n    shards: t.array(blockIdExt)\n});\nconst blockShortTxt = t.type({\n    '@type': t.literal('blocks.shortTxId'),\n    mode: t.number,\n    account: t.string,\n    lt: t.string,\n    hash: t.string\n});\nconst getBlockTransactions = t.type({\n    id: blockIdExt,\n    req_count: t.number,\n    incomplete: t.boolean,\n    transactions: t.array(blockShortTxt)\n});\nclass TypedCache {\n    constructor(namespace, cache, codec, keyEncoder) {\n        this.namespace = namespace;\n        this.cache = cache;\n        this.codec = codec;\n        this.keyEncoder = keyEncoder;\n    }\n    async get(key) {\n        let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n        if (ex) {\n            let decoded = this.codec.decode(JSON.parse(ex));\n            if ((0, Either_1.isRight)(decoded)) {\n                return decoded.right;\n            }\n        }\n        return null;\n    }\n    async set(key, value) {\n        if (value !== null) {\n            await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n        }\n        else {\n            await this.cache.set(this.namespace, this.keyEncoder(key), null);\n        }\n    }\n}\nclass HttpApi {\n    constructor(endpoint, cache, parameters) {\n        this.endpoint = endpoint;\n        this.cache = cache;\n        this.parameters = {\n            timeout: (parameters === null || parameters === void 0 ? void 0 : parameters.timeout) || 30000,\n            apiKey: parameters === null || parameters === void 0 ? void 0 : parameters.apiKey\n        };\n        // Shard\n        this.shardCache = new TypedCache('ton-shard', cache, t.array(blockIdExt), (src) => src + '');\n        this.shardLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = (await this.doCall('shards', { seqno: v }, getShards)).shards;\n                await this.shardCache.set(v, loaded);\n                return loaded;\n            }));\n        });\n        // Shard Transactions\n        this.shardTransactionsCache = new TypedCache('ton-shard-tx', cache, getBlockTransactions, (src) => src.workchain + ':' + src.shard + ':' + src.seqno);\n        this.shardTransactionsLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardTransactionsCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = await this.doCall('getBlockTransactions', { workchain: v.workchain, seqno: v.seqno, shard: v.shard }, getBlockTransactions);\n                await this.shardTransactionsCache.set(v, loaded);\n                return loaded;\n            }));\n        }, { cacheKeyFn: (src) => src.workchain + ':' + src.shard + ':' + src.seqno });\n    }\n    getAddressInformation(address) {\n        return this.doCall('getAddressInformation', { address: address.toString() }, addressInformation);\n    }\n    async getTransactions(address, opts) {\n        const inclusive = opts.inclusive;\n        delete opts.inclusive;\n        // Convert hash\n        let hash = undefined;\n        if (opts.hash) {\n            hash = Buffer.from(opts.hash, 'base64').toString('hex');\n        }\n        // Adjust limit\n        let limit = opts.limit;\n        if (opts.hash && opts.lt && inclusive !== true) {\n            limit++;\n        }\n        // Do request\n        let res = await this.doCall('getTransactions', { address: address.toString(), ...opts, limit, hash }, getTransactions);\n        if (res.length > limit) {\n            res = res.slice(0, limit);\n        }\n        // Adjust result\n        if (opts.hash && opts.lt && inclusive !== true) {\n            res.shift();\n            return res;\n        }\n        else {\n            return res;\n        }\n    }\n    async getMasterchainInfo() {\n        return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n    }\n    async getShards(seqno) {\n        return await this.shardLoader.load(seqno);\n    }\n    async getBlockTransactions(workchain, seqno, shard) {\n        return await this.shardTransactionsLoader.load({ workchain, seqno, shard });\n    }\n    async getTransaction(address, lt, hash) {\n        let convHash = Buffer.from(hash, 'base64').toString('hex');\n        let res = await this.doCall('getTransactions', { address: address.toString(), lt, hash: convHash, limit: 1 }, getTransactions);\n        let ex = res.find((v) => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n        if (ex) {\n            return ex;\n        }\n        else {\n            return null;\n        }\n    }\n    async callGetMethod(address, method, params) {\n        return await this.doCall('runGetMethod', { address: address.toString(), method, stack: params }, callGetMethod);\n    }\n    async sendBoc(body) {\n        await this.doCall('sendBoc', { boc: body.toString('base64') }, bocResponse);\n    }\n    async estimateFee(address, args) {\n        return await this.doCall('estimateFee', {\n            address: address.toFriendly(),\n            body: (await args.body.toBoc({ idx: false })).toString('base64'),\n            'init_data': args.initData ? (await args.initData.toBoc({ idx: false })).toString('base64') : '',\n            'init_code': args.initCode ? (await args.initCode.toBoc({ idx: false })).toString('base64') : '',\n            ignore_chksig: args.ignoreSignature\n        }, feeResponse);\n    }\n    async doCall(method, body, codec) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'X-Ton-Client-Version': version,\n        };\n        if (this.parameters.apiKey) {\n            headers['X-API-Key'] = this.parameters.apiKey;\n        }\n        let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n            id: '1',\n            jsonrpc: '2.0',\n            method: method,\n            params: body\n        }), {\n            headers,\n            timeout: this.parameters.timeout,\n        });\n        if (res.status !== 200 || !res.data.ok) {\n            throw Error('Received error: ' + JSON.stringify(res.data));\n        }\n        let decoded = codec.decode(res.data.result);\n        if ((0, Either_1.isRight)(decoded)) {\n            return decoded.right;\n        }\n        else {\n            throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n        }\n    }\n}\nexports.HttpApi = HttpApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}