{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommentMessage = void 0;\nconst Cell_1 = require(\"../boc/Cell\");\nclass CommentMessage {\n  constructor(comment) {\n    this.comment = comment;\n  }\n  writeTo(cell) {\n    if (this.comment.length > 0) {\n      cell.bits.writeUint(0, 32);\n      let bytes = Buffer.from(this.comment);\n      let dest = cell;\n      while (bytes.length > 0) {\n        let avaliable = Math.floor(dest.bits.available / 8);\n        if (bytes.length <= avaliable) {\n          dest.bits.writeBuffer(bytes);\n          break;\n        }\n        dest.bits.writeBuffer(bytes.slice(0, avaliable));\n        bytes = bytes.slice(avaliable, bytes.length);\n        let nc = new Cell_1.Cell();\n        dest.refs.push(nc);\n        dest = nc;\n      }\n    }\n  }\n}\nexports.CommentMessage = CommentMessage;","map":{"version":3,"names":["Object","defineProperty","exports","value","CommentMessage","Cell_1","require","constructor","comment","writeTo","cell","length","bits","writeUint","bytes","Buffer","from","dest","avaliable","Math","floor","available","writeBuffer","slice","nc","Cell","refs","push"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/messages/CommentMessage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommentMessage = void 0;\nconst Cell_1 = require(\"../boc/Cell\");\nclass CommentMessage {\n    constructor(comment) {\n        this.comment = comment;\n    }\n    writeTo(cell) {\n        if (this.comment.length > 0) {\n            cell.bits.writeUint(0, 32);\n            let bytes = Buffer.from(this.comment);\n            let dest = cell;\n            while (bytes.length > 0) {\n                let avaliable = Math.floor(dest.bits.available / 8);\n                if (bytes.length <= avaliable) {\n                    dest.bits.writeBuffer(bytes);\n                    break;\n                }\n                dest.bits.writeBuffer(bytes.slice(0, avaliable));\n                bytes = bytes.slice(avaliable, bytes.length);\n                let nc = new Cell_1.Cell();\n                dest.refs.push(nc);\n                dest = nc;\n            }\n        }\n    }\n}\nexports.CommentMessage = CommentMessage;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,MAAMC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,MAAMF,cAAc,CAAC;EACjBG,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACAC,OAAO,CAACC,IAAI,EAAE;IACV,IAAI,IAAI,CAACF,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MACzBD,IAAI,CAACE,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1B,IAAIC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACR,OAAO,CAAC;MACrC,IAAIS,IAAI,GAAGP,IAAI;MACf,OAAOI,KAAK,CAACH,MAAM,GAAG,CAAC,EAAE;QACrB,IAAIO,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACL,IAAI,CAACS,SAAS,GAAG,CAAC,CAAC;QACnD,IAAIP,KAAK,CAACH,MAAM,IAAIO,SAAS,EAAE;UAC3BD,IAAI,CAACL,IAAI,CAACU,WAAW,CAACR,KAAK,CAAC;UAC5B;QACJ;QACAG,IAAI,CAACL,IAAI,CAACU,WAAW,CAACR,KAAK,CAACS,KAAK,CAAC,CAAC,EAAEL,SAAS,CAAC,CAAC;QAChDJ,KAAK,GAAGA,KAAK,CAACS,KAAK,CAACL,SAAS,EAAEJ,KAAK,CAACH,MAAM,CAAC;QAC5C,IAAIa,EAAE,GAAG,IAAInB,MAAM,CAACoB,IAAI,EAAE;QAC1BR,IAAI,CAACS,IAAI,CAACC,IAAI,CAACH,EAAE,CAAC;QAClBP,IAAI,GAAGO,EAAE;MACb;IACJ;EACJ;AACJ;AACAtB,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script"}