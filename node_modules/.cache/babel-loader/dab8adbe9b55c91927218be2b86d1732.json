{"ast":null,"code":"// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) {\n  return typeof u === 'number';\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n  equals: function (first, second) {\n    return first === second;\n  }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n  equals: Eq.equals,\n  compare: function (first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n  }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n  equals: Eq.equals,\n  compare: Ord.compare,\n  top: Infinity,\n  bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n  show: function (n) {\n    return JSON.stringify(n);\n  }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n  concat: function (first, second) {\n    return first - second;\n  }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n  concat: function (first, second) {\n    return first + second;\n  }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n  concat: function (first, second) {\n    return first * second;\n  }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n  concat: SemigroupSum.concat,\n  empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n  concat: SemigroupProduct.concat,\n  empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n  add: SemigroupSum.concat,\n  zero: 0,\n  mul: SemigroupProduct.concat,\n  one: 1,\n  sub: MagmaSub.concat,\n  degree: function (_) {\n    return 1;\n  },\n  div: function (first, second) {\n    return first / second;\n  },\n  mod: function (first, second) {\n    return first % second;\n  }\n};","map":{"version":3,"names":["isNumber","u","Eq","equals","first","second","Ord","compare","Bounded","top","Infinity","bottom","Show","show","n","JSON","stringify","MagmaSub","concat","SemigroupSum","SemigroupProduct","MonoidSum","empty","MonoidProduct","Field","add","zero","mul","one","sub","degree","_","div","mod"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/fp-ts/es6/number.js"],"sourcesContent":["// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) { return typeof u === 'number'; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n    equals: Eq.equals,\n    compare: Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n    concat: SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n    concat: SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n    add: SemigroupSum.concat,\n    zero: 0,\n    mul: SemigroupProduct.concat,\n    one: 1,\n    sub: MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,QAAQ,GAAG,UAAUC,CAAC,EAAE;EAAE,OAAO,OAAOA,CAAC,KAAK,QAAQ;AAAE,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,EAAE,GAAG;EACZC,MAAM,EAAE,UAAUC,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAOD,KAAK,KAAKC,MAAM;EAAE;AAChE,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIC,GAAG,GAAG;EACbH,MAAM,EAAED,EAAE,CAACC,MAAM;EACjBI,OAAO,EAAE,UAAUH,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAQD,KAAK,GAAGC,MAAM,GAAG,CAAC,CAAC,GAAGD,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAG,CAAC;EAAG;AAC/F,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIG,OAAO,GAAG;EACjBL,MAAM,EAAED,EAAE,CAACC,MAAM;EACjBI,OAAO,EAAED,GAAG,CAACC,OAAO;EACpBE,GAAG,EAAEC,QAAQ;EACbC,MAAM,EAAE,CAACD;AACb,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIE,IAAI,GAAG;EACdC,IAAI,EAAE,UAAUC,CAAC,EAAE;IAAE,OAAOC,IAAI,CAACC,SAAS,CAACF,CAAC,CAAC;EAAE;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIG,QAAQ,GAAG;EAClBC,MAAM,EAAE,UAAUd,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAOD,KAAK,GAAGC,MAAM;EAAE;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIc,YAAY,GAAG;EACtBD,MAAM,EAAE,UAAUd,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAOD,KAAK,GAAGC,MAAM;EAAE;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIe,gBAAgB,GAAG;EAC1BF,MAAM,EAAE,UAAUd,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAOD,KAAK,GAAGC,MAAM;EAAE;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIgB,SAAS,GAAG;EACnBH,MAAM,EAAEC,YAAY,CAACD,MAAM;EAC3BI,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,aAAa,GAAG;EACvBL,MAAM,EAAEE,gBAAgB,CAACF,MAAM;EAC/BI,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIE,KAAK,GAAG;EACfC,GAAG,EAAEN,YAAY,CAACD,MAAM;EACxBQ,IAAI,EAAE,CAAC;EACPC,GAAG,EAAEP,gBAAgB,CAACF,MAAM;EAC5BU,GAAG,EAAE,CAAC;EACNC,GAAG,EAAEZ,QAAQ,CAACC,MAAM;EACpBY,MAAM,EAAE,UAAUC,CAAC,EAAE;IAAE,OAAO,CAAC;EAAE,CAAC;EAClCC,GAAG,EAAE,UAAU5B,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAOD,KAAK,GAAGC,MAAM;EAAE,CAAC;EACxD4B,GAAG,EAAE,UAAU7B,KAAK,EAAEC,MAAM,EAAE;IAAE,OAAOD,KAAK,GAAGC,MAAM;EAAE;AAC3D,CAAC"},"metadata":{},"sourceType":"module"}