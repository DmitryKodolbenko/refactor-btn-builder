{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeMessageForwardFees = exports.computeExternalMessageFees = exports.computeGasPrices = exports.computeFwdFees = exports.computeStorageFees = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst parse_1 = require(\"./parse\");\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L425\n//\nfunction computeStorageFees(data) {\n  const {\n    lastPaid,\n    now,\n    storagePrices,\n    storageStat,\n    special,\n    masterchain\n  } = data;\n  if (now <= lastPaid || storagePrices.length === 0 || now < storagePrices[0].utime_since.toNumber() || special) {\n    return new bn_js_1.default(0);\n  }\n  let upto = Math.max(lastPaid, storagePrices[0].utime_since.toNumber());\n  let total = new bn_js_1.default(0);\n  for (let i = 0; i < storagePrices.length && upto < now; i++) {\n    let valid_until = i < storagePrices.length - 1 ? Math.min(now, storagePrices[i + 1].utime_since.toNumber()) : now;\n    let payment = new bn_js_1.default(0);\n    if (upto < valid_until) {\n      let delta = valid_until - upto;\n      payment = payment.add(new bn_js_1.default(storageStat.cells).mul(masterchain ? storagePrices[i].mc_cell_price_ps : storagePrices[i].cell_price_ps));\n      payment = payment.add(new bn_js_1.default(storageStat.bits).mul(masterchain ? storagePrices[i].mc_bit_price_ps : storagePrices[i].bit_price_ps));\n      payment = payment.mul(new bn_js_1.default(delta));\n    }\n    upto = valid_until;\n    total = total.add(payment);\n  }\n  return shr16ceil(total);\n}\nexports.computeStorageFees = computeStorageFees;\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L1218\n//\nfunction computeFwdFees(msgPrices, cells, bits) {\n  return msgPrices.lumpPrice.add(shr16ceil(msgPrices.bitPrice.mul(bits).add(msgPrices.cellPrice.mul(cells))));\n}\nexports.computeFwdFees = computeFwdFees;\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L761\n//\nfunction computeGasPrices(gasUsed, prices) {\n  if (gasUsed.lte(prices.flatLimit)) {\n    return prices.flatPrice;\n  } else {\n    //  td::rshift(gas_price256 * (gas_used - cfg.flat_gas_limit), 16, 1) + cfg.flat_gas_price\n    return prices.flatPrice.add(prices.price.mul(gasUsed.sub(prices.flatLimit)).shrn(16));\n  }\n}\nexports.computeGasPrices = computeGasPrices;\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L530\n//\nfunction computeExternalMessageFees(msgPrices, cell) {\n  // Collect stats\n  let storageStats = collectCellStats(cell);\n  storageStats.bits -= cell.bits.cursor;\n  storageStats.cells -= 1;\n  return computeFwdFees(msgPrices, new bn_js_1.default(storageStats.cells), new bn_js_1.default(storageStats.bits));\n}\nexports.computeExternalMessageFees = computeExternalMessageFees;\nfunction computeMessageForwardFees(msgPrices, cell) {\n  let msg = (0, parse_1.parseMessage)(cell.beginParse());\n  let storageStats = {\n    bits: 0,\n    cells: 0\n  };\n  // Init\n  if (msg.init) {\n    let c = collectCellStats(msg.body);\n    c.bits -= msg.body.bits.cursor;\n    c.cells -= 1;\n    storageStats.bits += c.bits;\n    storageStats.cells += c.cells;\n  }\n  // Body\n  let bc = collectCellStats(msg.body);\n  bc.bits -= msg.body.bits.cursor;\n  bc.cells -= 1;\n  storageStats.bits += bc.bits;\n  storageStats.cells += bc.cells;\n  // NOTE: Extra currencies are ignored for now\n  let fees = computeFwdFees(msgPrices, new bn_js_1.default(storageStats.cells), new bn_js_1.default(storageStats.bits));\n  let res = fees.mul(msgPrices.firstFrac).shrn(16);\n  let remaining = fees.sub(res);\n  return {\n    fees: res,\n    remaining\n  };\n}\nexports.computeMessageForwardFees = computeMessageForwardFees;\nfunction collectCellStats(cell) {\n  let bits = cell.bits.cursor;\n  let cells = 1;\n  for (let ref of cell.refs) {\n    let r = collectCellStats(ref);\n    cells += r.cells;\n    bits += r.bits;\n  }\n  return {\n    bits,\n    cells\n  };\n}\nfunction shr16ceil(src) {\n  let rem = src.mod(new bn_js_1.default(65536));\n  let res = src.shrn(16);\n  if (!rem.eqn(0)) {\n    res = res.addn(1);\n  }\n  return res;\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","computeMessageForwardFees","computeExternalMessageFees","computeGasPrices","computeFwdFees","computeStorageFees","bn_js_1","require","parse_1","data","lastPaid","now","storagePrices","storageStat","special","masterchain","length","utime_since","toNumber","default","upto","Math","max","total","i","valid_until","min","payment","delta","add","cells","mul","mc_cell_price_ps","cell_price_ps","bits","mc_bit_price_ps","bit_price_ps","shr16ceil","msgPrices","lumpPrice","bitPrice","cellPrice","gasUsed","prices","lte","flatLimit","flatPrice","price","sub","shrn","cell","storageStats","collectCellStats","cursor","msg","parseMessage","beginParse","init","c","body","bc","fees","res","firstFrac","remaining","ref","refs","r","src","rem","eqn","addn"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/block/fees.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeMessageForwardFees = exports.computeExternalMessageFees = exports.computeGasPrices = exports.computeFwdFees = exports.computeStorageFees = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst parse_1 = require(\"./parse\");\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L425\n//\nfunction computeStorageFees(data) {\n    const { lastPaid, now, storagePrices, storageStat, special, masterchain } = data;\n    if (now <= lastPaid || storagePrices.length === 0 || now < storagePrices[0].utime_since.toNumber() || special) {\n        return new bn_js_1.default(0);\n    }\n    let upto = Math.max(lastPaid, storagePrices[0].utime_since.toNumber());\n    let total = new bn_js_1.default(0);\n    for (let i = 0; i < storagePrices.length && upto < now; i++) {\n        let valid_until = (i < storagePrices.length - 1 ? Math.min(now, storagePrices[i + 1].utime_since.toNumber()) : now);\n        let payment = new bn_js_1.default(0);\n        if (upto < valid_until) {\n            let delta = valid_until - upto;\n            payment = payment.add(new bn_js_1.default(storageStat.cells).mul(masterchain ? storagePrices[i].mc_cell_price_ps : storagePrices[i].cell_price_ps));\n            payment = payment.add(new bn_js_1.default(storageStat.bits).mul(masterchain ? storagePrices[i].mc_bit_price_ps : storagePrices[i].bit_price_ps));\n            payment = payment.mul(new bn_js_1.default(delta));\n        }\n        upto = valid_until;\n        total = total.add(payment);\n    }\n    return shr16ceil(total);\n}\nexports.computeStorageFees = computeStorageFees;\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L1218\n//\nfunction computeFwdFees(msgPrices, cells, bits) {\n    return msgPrices.lumpPrice.add(shr16ceil(msgPrices.bitPrice.mul(bits)\n        .add(msgPrices.cellPrice.mul(cells))));\n}\nexports.computeFwdFees = computeFwdFees;\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L761\n//\nfunction computeGasPrices(gasUsed, prices) {\n    if (gasUsed.lte(prices.flatLimit)) {\n        return prices.flatPrice;\n    }\n    else {\n        //  td::rshift(gas_price256 * (gas_used - cfg.flat_gas_limit), 16, 1) + cfg.flat_gas_price\n        return prices.flatPrice.add(prices.price.mul(gasUsed.sub(prices.flatLimit)).shrn(16));\n    }\n}\nexports.computeGasPrices = computeGasPrices;\n//\n// Source: https://github.com/ton-foundation/ton/blob/ae5c0720143e231c32c3d2034cfe4e533a16d969/crypto/block/transaction.cpp#L530\n//\nfunction computeExternalMessageFees(msgPrices, cell) {\n    // Collect stats\n    let storageStats = collectCellStats(cell);\n    storageStats.bits -= cell.bits.cursor;\n    storageStats.cells -= 1;\n    return computeFwdFees(msgPrices, new bn_js_1.default(storageStats.cells), new bn_js_1.default(storageStats.bits));\n}\nexports.computeExternalMessageFees = computeExternalMessageFees;\nfunction computeMessageForwardFees(msgPrices, cell) {\n    let msg = (0, parse_1.parseMessage)(cell.beginParse());\n    let storageStats = { bits: 0, cells: 0 };\n    // Init\n    if (msg.init) {\n        let c = collectCellStats(msg.body);\n        c.bits -= msg.body.bits.cursor;\n        c.cells -= 1;\n        storageStats.bits += c.bits;\n        storageStats.cells += c.cells;\n    }\n    // Body\n    let bc = collectCellStats(msg.body);\n    bc.bits -= msg.body.bits.cursor;\n    bc.cells -= 1;\n    storageStats.bits += bc.bits;\n    storageStats.cells += bc.cells;\n    // NOTE: Extra currencies are ignored for now\n    let fees = computeFwdFees(msgPrices, new bn_js_1.default(storageStats.cells), new bn_js_1.default(storageStats.bits));\n    let res = fees.mul(msgPrices.firstFrac).shrn(16);\n    let remaining = fees.sub(res);\n    return { fees: res, remaining };\n}\nexports.computeMessageForwardFees = computeMessageForwardFees;\nfunction collectCellStats(cell) {\n    let bits = cell.bits.cursor;\n    let cells = 1;\n    for (let ref of cell.refs) {\n        let r = collectCellStats(ref);\n        cells += r.cells;\n        bits += r.bits;\n    }\n    return { bits, cells };\n}\nfunction shr16ceil(src) {\n    let rem = src.mod(new bn_js_1.default(65536));\n    let res = src.shrn(16);\n    if (!rem.eqn(0)) {\n        res = res.addn(1);\n    }\n    return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}