{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{connect,Contract,keyStores,WalletConnection}from\"near-api-js\";export var initializeWalletNEAR=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(setNEARMaxAmount,setNEARwalletKey,setUSNMaxAmount){var connectionConfig,receiver,nearConnection,walletConnection,account,walletAccountId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connectionConfig={networkId:\"mainnet\",keyStore:new keyStores.BrowserLocalStorageKeyStore(),nodeUrl:\"https://rpc.mainnet.near.org\",walletUrl:\"https://wallet.mainnet.near.org\",helperUrl:\"https://helper.mainnet.near.org\",explorerUrl:\"https://explorer.mainnet.near.org\"};receiver=process.env.REACT_APP_NEAR_CONTRACT?process.env.REACT_APP_NEAR_CONTRACT:\"\";_context.next=4;return connect(connectionConfig);case 4:nearConnection=_context.sent;walletConnection=new WalletConnection(nearConnection,receiver);_context.next=8;return nearConnection.account(process.env.REACT_APP_BACK_NEAR_WALLET?process.env.REACT_APP_BACK_NEAR_WALLET:\"\");case 8:account=_context.sent;_context.t0=setNEARMaxAmount;_context.t1=Number;_context.next=13;return account.state();case 13:_context.t2=_context.sent.amount;_context.t3=(0,_context.t1)(_context.t2);_context.t4=_context.t3/1000000000000000000000000;(0,_context.t0)(_context.t4);_context.t5=setUSNMaxAmount;_context.next=20;return new Contract(walletConnection.account(),'usn',{changeMethods:[\"\"],viewMethods:['ft_balance_of']}//@ts-ignore\n).ft_balance_of({account_id:'tonanawallet.near'});case 20:_context.t6=_context.sent;_context.t7=_context.t6/1000000000000000000;(0,_context.t5)(_context.t7);if(!walletConnection.isSignedIn()){_context.next=29;break;}walletAccountId=walletConnection.getAccountId();setNEARwalletKey(walletAccountId);//@ts-ignore\n_context.next=28;return new Contract(walletConnection.account(),receiver,{changeMethods:[\"payToWallet\"],viewMethods:[]});case 28:window.contract=_context.sent;case 29:case\"end\":return _context.stop();}}},_callee);}));return function initializeWalletNEAR(_x,_x2,_x3){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["connect","Contract","keyStores","WalletConnection","initializeWalletNEAR","setNEARMaxAmount","setNEARwalletKey","setUSNMaxAmount","connectionConfig","networkId","keyStore","BrowserLocalStorageKeyStore","nodeUrl","walletUrl","helperUrl","explorerUrl","receiver","process","env","REACT_APP_NEAR_CONTRACT","nearConnection","walletConnection","account","REACT_APP_BACK_NEAR_WALLET","Number","state","amount","changeMethods","viewMethods","ft_balance_of","account_id","isSignedIn","walletAccountId","getAccountId","window","contract"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/wallet/initializeWalletNEAR.ts"],"sourcesContent":["import { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\n\nexport const initializeWalletNEAR = async (setNEARMaxAmount: any, setNEARwalletKey: any, setUSNMaxAmount: any) => {\n  const connectionConfig = {\n    networkId: \"mainnet\",\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n    nodeUrl: \"https://rpc.mainnet.near.org\",\n    walletUrl: \"https://wallet.mainnet.near.org\",\n    helperUrl: \"https://helper.mainnet.near.org\",\n    explorerUrl: \"https://explorer.mainnet.near.org\",\n  };\n\n  const receiver = process.env.REACT_APP_NEAR_CONTRACT\n    ? process.env.REACT_APP_NEAR_CONTRACT\n    : \"\";\n\n  const nearConnection = await connect(connectionConfig as any);\n  const walletConnection = new WalletConnection(nearConnection, receiver);\n\n  const account = await nearConnection.account(\n    process.env.REACT_APP_BACK_NEAR_WALLET\n      ? process.env.REACT_APP_BACK_NEAR_WALLET\n      : \"\"\n  );\n  setNEARMaxAmount(\n    Number((await account.state()).amount) / 1000000000000000000000000\n  );\n  \n  \n  setUSNMaxAmount(await new Contract(\n  walletConnection.account(),\n  'usn',\n  {\n    changeMethods: [\"\"],\n    viewMethods: ['ft_balance_of'],\n  }\n  //@ts-ignore\n).ft_balance_of({account_id:'tonanawallet.near'}) / 1000000000000000000\n)\n\n  if (walletConnection.isSignedIn()) {\n    const walletAccountId = walletConnection.getAccountId();\n    setNEARwalletKey(walletAccountId);\n\n    //@ts-ignore\n    window.contract = await new Contract(\n      walletConnection.account(),\n      receiver,\n      {\n        changeMethods: [\"payToWallet\"],\n        viewMethods: [],\n      }\n    );\n  }\n};"],"mappings":"sPAAA,OAASA,OAAO,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,gBAAgB,KAAQ,aAAa,CAE5E,MAAO,IAAMC,qBAAoB,4FAAG,iBAAOC,gBAAqB,CAAEC,gBAAqB,CAAEC,eAAoB,0MACrGC,gBAAgB,CAAG,CACvBC,SAAS,CAAE,SAAS,CACpBC,QAAQ,CAAE,GAAIR,UAAS,CAACS,2BAA2B,EAAE,CACrDC,OAAO,CAAE,8BAA8B,CACvCC,SAAS,CAAE,iCAAiC,CAC5CC,SAAS,CAAE,iCAAiC,CAC5CC,WAAW,CAAE,mCACf,CAAC,CAEKC,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAChDF,OAAO,CAACC,GAAG,CAACC,uBAAuB,CACnC,EAAE,uBAEuBnB,QAAO,CAACQ,gBAAgB,CAAQ,QAAvDY,cAAc,eACdC,gBAAgB,CAAG,GAAIlB,iBAAgB,CAACiB,cAAc,CAAEJ,QAAQ,CAAC,uBAEjDI,eAAc,CAACE,OAAO,CAC1CL,OAAO,CAACC,GAAG,CAACK,0BAA0B,CAClCN,OAAO,CAACC,GAAG,CAACK,0BAA0B,CACtC,EAAE,CACP,QAJKD,OAAO,2BAKbjB,gBAAgB,aACdmB,MAAM,wBAAQF,QAAO,CAACG,KAAK,EAAE,mCAAEC,MAAM,kEAAI,yBAAyB,0CAIpEnB,eAAe,wBAAO,IAAIN,SAAQ,CAClCoB,gBAAgB,CAACC,OAAO,EAAE,CAC1B,KAAK,CACL,CACEK,aAAa,CAAE,CAAC,EAAE,CAAC,CACnBC,WAAW,CAAE,CAAC,eAAe,CAC/B,CACA;AAAA,CACD,CAACC,aAAa,CAAC,CAACC,UAAU,CAAC,mBAAmB,CAAC,CAAC,2DAAG,mBAAmB,kCAGjET,gBAAgB,CAACU,UAAU,EAAE,0BACzBC,eAAe,CAAGX,gBAAgB,CAACY,YAAY,EAAE,CACvD3B,gBAAgB,CAAC0B,eAAe,CAAC,CAEjC;AAAA,uBACwB,IAAI/B,SAAQ,CAClCoB,gBAAgB,CAACC,OAAO,EAAE,CAC1BN,QAAQ,CACR,CACEW,aAAa,CAAE,CAAC,aAAa,CAAC,CAC9BC,WAAW,CAAE,EACf,CAAC,CACF,SAPDM,MAAM,CAACC,QAAQ,sEASlB,kBApDY/B,qBAAoB,oDAoDhC"},"metadata":{},"sourceType":"module"}