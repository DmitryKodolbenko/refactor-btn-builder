{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromAscii = exports.toAscii = void 0;\nfunction toAscii(input) {\n  var toNums = function toNums(str) {\n    return str.split(\"\").map(function (x) {\n      var charCode = x.charCodeAt(0);\n      // 0x00–0x1F control characters\n      // 0x20–0x7E printable characters\n      // 0x7F delete character\n      // 0x80–0xFF out of 7 bit ascii range\n      if (charCode < 0x20 || charCode > 0x7e) {\n        throw new Error(\"Cannot encode character that is out of printable ASCII range: \" + charCode);\n      }\n      return charCode;\n    });\n  };\n  return Uint8Array.from(toNums(input));\n}\nexports.toAscii = toAscii;\nfunction fromAscii(data) {\n  var fromNums = function fromNums(listOfNumbers) {\n    return listOfNumbers.map(function (x) {\n      // 0x00–0x1F control characters\n      // 0x20–0x7E printable characters\n      // 0x7F delete character\n      // 0x80–0xFF out of 7 bit ascii range\n      if (x < 0x20 || x > 0x7e) {\n        throw new Error(\"Cannot decode character that is out of printable ASCII range: \" + x);\n      }\n      return String.fromCharCode(x);\n    });\n  };\n  return fromNums(Array.from(data)).join(\"\");\n}\nexports.fromAscii = fromAscii;","map":{"version":3,"sources":["../src/ascii.ts"],"names":[],"mappings":";;;;;;AAAA,SAAgB,OAAO,CAAC,KAAa,EAAA;EACnC,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,GAAW;IAAA,OACzB,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,CAAS,EAAI;MAC9B,IAAM,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;MAChC;MACA;MACA;MACA;MACA,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,gEAAgE,GAAG,QAAQ,CAAC;MAC7F;MACD,OAAO,QAAQ;IACjB,CAAC,CAAC;EAAA;EACJ,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvC;AAdA,OAAA,CAAA,OAAA,GAAA,OAAA;AAgBA,SAAgB,SAAS,CAAC,IAAgB,EAAA;EACxC,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,aAAgC;IAAA,OAChD,aAAa,CAAC,GAAG,CAAC,UAAC,CAAS,EAAY;MACtC;MACA;MACA;MACA;MACA,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE;QACxB,MAAM,IAAI,KAAK,CAAC,gEAAgE,GAAG,CAAC,CAAC;MACtF;MACD,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EAAA;EAEJ,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AAC5C;AAdA,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromAscii = exports.toAscii = void 0;\nfunction toAscii(input) {\n    const toNums = (str) => str.split(\"\").map((x) => {\n        const charCode = x.charCodeAt(0);\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (charCode < 0x20 || charCode > 0x7e) {\n            throw new Error(\"Cannot encode character that is out of printable ASCII range: \" + charCode);\n        }\n        return charCode;\n    });\n    return Uint8Array.from(toNums(input));\n}\nexports.toAscii = toAscii;\nfunction fromAscii(data) {\n    const fromNums = (listOfNumbers) => listOfNumbers.map((x) => {\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (x < 0x20 || x > 0x7e) {\n            throw new Error(\"Cannot decode character that is out of printable ASCII range: \" + x);\n        }\n        return String.fromCharCode(x);\n    });\n    return fromNums(Array.from(data)).join(\"\");\n}\nexports.fromAscii = fromAscii;\n//# sourceMappingURL=ascii.js.map"]},"metadata":{},"sourceType":"script"}