{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFullConfig = exports.parseVotingSetup = exports.parseProposalSetup = exports.configParse29 = exports.configParse28 = exports.configParseMsgPrices = exports.configParseGasLimitsPrices = exports.configParseBridge = exports.configParseValidatorSet = exports.configParse12 = exports.configParse40 = exports.configParse8 = exports.configParse18 = exports.configParse17 = exports.configParse16 = exports.configParse15 = exports.configParseMasterAddressRequired = exports.parseBridge = exports.parseValidatorSet = exports.parseValidatorDescr = exports.configParseWorkchainDescriptor = exports.configParseMasterAddress = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar __1 = require(\"../..\");\nvar parseDict_1 = require(\"../../boc/dict/parseDict\");\nfunction configParseMasterAddress(slice) {\n  if (slice) {\n    return new __1.Address(-1, slice.readBuffer(32));\n  } else {\n    return null;\n  }\n}\nexports.configParseMasterAddress = configParseMasterAddress;\nfunction configParseWorkchainDescriptor(slice) {\n  if (slice.readUint(8).toNumber() !== 0xA6) {\n    throw Error('Invalid config');\n  }\n  var enabledSince = slice.readUint(32).toNumber();\n  var actialMinSplit = slice.readUint(8).toNumber();\n  var min_split = slice.readUint(8).toNumber();\n  var max_split = slice.readUint(8).toNumber();\n  var basic = slice.readBit();\n  var active = slice.readBit();\n  var accept_msgs = slice.readBit();\n  var flags = slice.readUint(13).toNumber();\n  var zerostateRootHash = slice.readBuffer(32);\n  var zerostateFileHash = slice.readBuffer(32);\n  var version = slice.readUint(32).toNumber();\n  // Only basic format supported\n  if (slice.readBit()) {\n    throw Error('Invalid config');\n  }\n  var vmVersion = slice.readUint(32).toNumber();\n  var vmMode = slice.readUint(64);\n  return {\n    enabledSince: enabledSince,\n    actialMinSplit: actialMinSplit,\n    min_split: min_split,\n    max_split: max_split,\n    basic: basic,\n    active: active,\n    accept_msgs: accept_msgs,\n    flags: flags,\n    zerostateRootHash: zerostateRootHash,\n    zerostateFileHash: zerostateFileHash,\n    version: version,\n    format: {\n      vmVersion: vmVersion,\n      vmMode: vmMode\n    }\n  };\n}\nexports.configParseWorkchainDescriptor = configParseWorkchainDescriptor;\nfunction readPublicKey(slice) {\n  // 8e81278a\n  if (slice.readUint(32).toNumber() !== 0x8e81278a) {\n    throw Error('Invalid config');\n  }\n  return slice.readBuffer(32);\n}\nfunction parseValidatorDescr(slice) {\n  var header = slice.readUint(8).toNumber();\n  if (header === 0x53) {\n    return {\n      publicKey: readPublicKey(slice),\n      weight: slice.readUint(64),\n      adnlAddress: null\n    };\n  } else if (header === 0x73) {\n    return {\n      publicKey: readPublicKey(slice),\n      weight: slice.readUint(64),\n      adnlAddress: slice.readBuffer(32)\n    };\n  } else {\n    throw Error('Invalid config');\n  }\n}\nexports.parseValidatorDescr = parseValidatorDescr;\nfunction parseValidatorSet(slice) {\n  var header = slice.readUint(8).toNumber();\n  if (header === 0x11) {\n    var timeSince = slice.readUint(32).toNumber();\n    var timeUntil = slice.readUint(32).toNumber();\n    var total = slice.readUint(16).toNumber();\n    var main = slice.readUint(16).toNumber();\n    var list = (0, parseDict_1.parseDict)(slice.readRef(), 16, parseValidatorDescr);\n    return {\n      timeSince: timeSince,\n      timeUntil: timeUntil,\n      total: total,\n      main: main,\n      totalWeight: null,\n      list: list\n    };\n  } else if (header === 0x12) {\n    var _timeSince = slice.readUint(32).toNumber();\n    var _timeUntil = slice.readUint(32).toNumber();\n    var _total = slice.readUint(16).toNumber();\n    var _main = slice.readUint(16).toNumber();\n    var totalWeight = slice.readUint(64);\n    var exists = slice.readBit();\n    var _list = exists ? (0, parseDict_1.parseDict)(slice.readRef(), 16, parseValidatorDescr) : null;\n    return {\n      timeSince: _timeSince,\n      timeUntil: _timeUntil,\n      total: _total,\n      main: _main,\n      totalWeight: totalWeight,\n      list: _list\n    };\n  }\n}\nexports.parseValidatorSet = parseValidatorSet;\nfunction parseBridge(slice) {\n  var bridgeAddress = slice.readBuffer(32);\n  var oracleMultisigAddress = slice.readBuffer(32);\n  var oracles = slice.readBit() ? (0, parseDict_1.parseDict)(slice.readRef(), 256, function (slice) {\n    return slice.readBuffer(32);\n  }) : null;\n  var externalChainAddress = slice.readBuffer(32);\n  return {\n    bridgeAddress: bridgeAddress,\n    oracleMultisigAddress: oracleMultisigAddress,\n    oracles: oracles,\n    externalChainAddress: externalChainAddress\n  };\n}\nexports.parseBridge = parseBridge;\nfunction configParseMasterAddressRequired(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  return configParseMasterAddress(slice);\n}\nexports.configParseMasterAddressRequired = configParseMasterAddressRequired;\nfunction configParse15(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  var validatorsElectedFor = slice.readUintNumber(32);\n  var electorsStartBefore = slice.readUintNumber(32);\n  var electorsEndBefore = slice.readUintNumber(32);\n  var stakeHeldFor = slice.readUintNumber(32);\n  return {\n    validatorsElectedFor: validatorsElectedFor,\n    electorsStartBefore: electorsStartBefore,\n    electorsEndBefore: electorsEndBefore,\n    stakeHeldFor: stakeHeldFor\n  };\n}\nexports.configParse15 = configParse15;\nfunction configParse16(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  var maxValidators = slice.readUintNumber(16);\n  var maxMainValidators = slice.readUintNumber(16);\n  var minValidators = slice.readUintNumber(16);\n  return {\n    maxValidators: maxValidators,\n    maxMainValidators: maxMainValidators,\n    minValidators: minValidators\n  };\n}\nexports.configParse16 = configParse16;\nfunction configParse17(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  var minStake = slice.readCoins();\n  var maxStake = slice.readCoins();\n  var minTotalStake = slice.readCoins();\n  var maxStakeFactor = slice.readUintNumber(32);\n  return {\n    minStake: minStake,\n    maxStake: maxStake,\n    minTotalStake: minTotalStake,\n    maxStakeFactor: maxStakeFactor\n  };\n}\nexports.configParse17 = configParse17;\nfunction configParse18(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  var result = [];\n  (0, parseDict_1.parseDict)(slice, 32, function (slice) {\n    var header = slice.readUintNumber(8);\n    if (header !== 0xcc) {\n      throw Error('Invalid config');\n    }\n    var utime_since = slice.readUint(32);\n    var bit_price_ps = slice.readUint(64);\n    var cell_price_ps = slice.readUint(64);\n    var mc_bit_price_ps = slice.readUint(64);\n    var mc_cell_price_ps = slice.readUint(64);\n    return {\n      utime_since: utime_since,\n      bit_price_ps: bit_price_ps,\n      cell_price_ps: cell_price_ps,\n      mc_bit_price_ps: mc_bit_price_ps,\n      mc_cell_price_ps: mc_cell_price_ps\n    };\n  }).forEach(function (a) {\n    result.push(a);\n  });\n  return result;\n}\nexports.configParse18 = configParse18;\nfunction configParse8(slice) {\n  if (!slice) {\n    return {\n      version: 0,\n      capabilities: new bn_js_1.default(0)\n    };\n  }\n  var version = slice.readUintNumber(32);\n  var capabilities = slice.readUint(64);\n  return {\n    version: version,\n    capabilities: capabilities\n  };\n}\nexports.configParse8 = configParse8;\nfunction configParse40(slice) {\n  if (!slice) {\n    return null;\n  }\n  var header = slice.readUintNumber(8);\n  if (header !== 1) {\n    throw Error('Invalid config');\n  }\n  var defaultFlatFine = slice.readCoins();\n  var defaultProportionaFine = slice.readCoins();\n  var severityFlatMult = slice.readUintNumber(16);\n  var severityProportionalMult = slice.readUintNumber(16);\n  var unfunishableInterval = slice.readUintNumber(16);\n  var longInterval = slice.readUintNumber(16);\n  var longFlatMult = slice.readUintNumber(16);\n  var longProportionalMult = slice.readUintNumber(16);\n  var mediumInterval = slice.readUintNumber(16);\n  var mediumFlatMult = slice.readUintNumber(16);\n  var mediumProportionalMult = slice.readUintNumber(16);\n  return {\n    defaultFlatFine: defaultFlatFine,\n    defaultProportionaFine: defaultProportionaFine,\n    severityFlatMult: severityFlatMult,\n    severityProportionalMult: severityProportionalMult,\n    unfunishableInterval: unfunishableInterval,\n    longInterval: longInterval,\n    longFlatMult: longFlatMult,\n    longProportionalMult: longProportionalMult,\n    mediumInterval: mediumInterval,\n    mediumFlatMult: mediumFlatMult,\n    mediumProportionalMult: mediumProportionalMult\n  };\n}\nexports.configParse40 = configParse40;\nfunction configParse12(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  if (slice.readUint(1).toNumber()) {\n    return (0, parseDict_1.parseDict)(slice.readRef(), 32, configParseWorkchainDescriptor);\n  } else {\n    throw Error('No workchains exist');\n  }\n}\nexports.configParse12 = configParse12;\nfunction configParseValidatorSet(slice) {\n  if (!slice) {\n    return null;\n  }\n  return parseValidatorSet(slice);\n}\nexports.configParseValidatorSet = configParseValidatorSet;\nfunction configParseBridge(slice) {\n  if (!slice) {\n    return null;\n  }\n  return parseBridge(slice);\n}\nexports.configParseBridge = configParseBridge;\nfunction parseGasLimitsInternal(slice) {\n  var tag = slice.readUintNumber(8);\n  if (tag === 0xde) {\n    var gasPrice = slice.readUint(64);\n    var gasLimit = slice.readUint(64);\n    var specialGasLimit = slice.readUint(64);\n    var gasCredit = slice.readUint(64);\n    var blockGasLimit = slice.readUint(64);\n    var freezeDueLimit = slice.readUint(64);\n    var deleteDueLimit = slice.readUint(64);\n    return {\n      gasPrice: gasPrice,\n      gasLimit: gasLimit,\n      specialGasLimit: specialGasLimit,\n      gasCredit: gasCredit,\n      blockGasLimit: blockGasLimit,\n      freezeDueLimit: freezeDueLimit,\n      deleteDueLimit: deleteDueLimit\n    };\n  } else if (tag === 0xdd) {\n    var _gasPrice = slice.readUint(64);\n    var _gasLimit = slice.readUint(64);\n    var _gasCredit = slice.readUint(64);\n    var _blockGasLimit = slice.readUint(64);\n    var _freezeDueLimit = slice.readUint(64);\n    var _deleteDueLimit = slice.readUint(64);\n    return {\n      gasPrice: _gasPrice,\n      gasLimit: _gasLimit,\n      gasCredit: _gasCredit,\n      blockGasLimit: _blockGasLimit,\n      freezeDueLimit: _freezeDueLimit,\n      deleteDueLimit: _deleteDueLimit\n    };\n  } else {\n    throw Error('Invalid config');\n  }\n}\nfunction configParseGasLimitsPrices(slice) {\n  if (!slice) {\n    throw Error('Invalid config');\n  }\n  var tag = slice.readUintNumber(8);\n  if (tag === 0xd1) {\n    var flatLimit = slice.readUint(64);\n    var flatGasPrice = slice.readUint(64);\n    var other = parseGasLimitsInternal(slice);\n    return {\n      flatLimit: flatLimit,\n      flatGasPrice: flatGasPrice,\n      other: other\n    };\n  } else {\n    throw Error('Invalid config');\n  }\n}\nexports.configParseGasLimitsPrices = configParseGasLimitsPrices;\nfunction configParseMsgPrices(slice) {\n  if (!slice) {\n    throw new Error('Invalid config');\n  }\n  var magic = slice.readUintNumber(8);\n  if (magic !== 0xea) {\n    throw new Error('Invalid msg prices param');\n  }\n  return {\n    lumpPrice: slice.readUint(64),\n    bitPrice: slice.readUint(64),\n    cellPrice: slice.readUint(64),\n    ihrPriceFactor: slice.readUint(32),\n    firstFrac: slice.readUint(16),\n    nextFrac: slice.readUint(16)\n  };\n}\nexports.configParseMsgPrices = configParseMsgPrices;\n// catchain_config#c1 mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32 \n//   shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;\n// catchain_config_new#c2 flags:(## 7) { flags = 0 } shuffle_mc_validators:Bool\n//   mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32\n//   shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;\nfunction configParse28(slice) {\n  if (!slice) {\n    throw new Error('Invalid config');\n  }\n  var magic = slice.readUintNumber(8);\n  if (magic === 0xc1) {\n    var masterCatchainLifetime = slice.readUintNumber(32);\n    var shardCatchainLifetime = slice.readUintNumber(32);\n    var shardValidatorsLifetime = slice.readUintNumber(32);\n    var shardValidatorsCount = slice.readUintNumber(32);\n    return {\n      masterCatchainLifetime: masterCatchainLifetime,\n      shardCatchainLifetime: shardCatchainLifetime,\n      shardValidatorsLifetime: shardValidatorsLifetime,\n      shardValidatorsCount: shardValidatorsCount\n    };\n  }\n  if (magic === 0xc2) {\n    var flags = slice.readUintNumber(7);\n    var suffleMasterValidators = slice.readBit();\n    var _masterCatchainLifetime = slice.readUintNumber(32);\n    var _shardCatchainLifetime = slice.readUintNumber(32);\n    var _shardValidatorsLifetime = slice.readUintNumber(32);\n    var _shardValidatorsCount = slice.readUintNumber(32);\n    return {\n      flags: flags,\n      suffleMasterValidators: suffleMasterValidators,\n      masterCatchainLifetime: _masterCatchainLifetime,\n      shardCatchainLifetime: _shardCatchainLifetime,\n      shardValidatorsLifetime: _shardValidatorsLifetime,\n      shardValidatorsCount: _shardValidatorsCount\n    };\n  }\n  throw new Error('Invalid config');\n}\nexports.configParse28 = configParse28;\n// consensus_config#d6 round_candidates:# { round_candidates >= 1 }\n//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32\n//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32\n//   max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;\n// consensus_config_new#d7 flags:(## 7) { flags = 0 } new_catchain_ids:Bool\n//   round_candidates:(## 8) { round_candidates >= 1 }\n//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32\n//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32\n//   max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;\n// consensus_config_v3#d8 flags:(## 7) { flags = 0 } new_catchain_ids:Bool\n//   round_candidates:(## 8) { round_candidates >= 1 }\n//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32\n//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32\n//   max_block_bytes:uint32 max_collated_bytes:uint32 \n//   proto_version:uint16 = ConsensusConfig;\nfunction configParse29(slice) {\n  if (!slice) {\n    throw new Error('Invalid config');\n  }\n  var magic = slice.readUintNumber(8);\n  if (magic === 0xd6) {\n    var roundCandidates = slice.readUintNumber(32);\n    var nextCandidateDelay = slice.readUintNumber(32);\n    var consensusTimeout = slice.readUintNumber(32);\n    var fastAttempts = slice.readUintNumber(32);\n    var attemptDuration = slice.readUintNumber(32);\n    var catchainMaxDeps = slice.readUintNumber(32);\n    var maxBlockBytes = slice.readUintNumber(32);\n    var maxColaltedBytes = slice.readUintNumber(32);\n    return {\n      roundCandidates: roundCandidates,\n      nextCandidateDelay: nextCandidateDelay,\n      consensusTimeout: consensusTimeout,\n      fastAttempts: fastAttempts,\n      attemptDuration: attemptDuration,\n      catchainMaxDeps: catchainMaxDeps,\n      maxBlockBytes: maxBlockBytes,\n      maxColaltedBytes: maxColaltedBytes\n    };\n  } else if (magic === 0xd7) {\n    var flags = slice.readUintNumber(7);\n    var newCatchainIds = slice.readBit();\n    var _roundCandidates = slice.readUintNumber(8);\n    var _nextCandidateDelay = slice.readUintNumber(32);\n    var _consensusTimeout = slice.readUintNumber(32);\n    var _fastAttempts = slice.readUintNumber(32);\n    var _attemptDuration = slice.readUintNumber(32);\n    var _catchainMaxDeps = slice.readUintNumber(32);\n    var _maxBlockBytes = slice.readUintNumber(32);\n    var _maxColaltedBytes = slice.readUintNumber(32);\n    return {\n      flags: flags,\n      newCatchainIds: newCatchainIds,\n      roundCandidates: _roundCandidates,\n      nextCandidateDelay: _nextCandidateDelay,\n      consensusTimeout: _consensusTimeout,\n      fastAttempts: _fastAttempts,\n      attemptDuration: _attemptDuration,\n      catchainMaxDeps: _catchainMaxDeps,\n      maxBlockBytes: _maxBlockBytes,\n      maxColaltedBytes: _maxColaltedBytes\n    };\n  } else if (magic === 0xd8) {\n    var _flags = slice.readUintNumber(7);\n    var _newCatchainIds = slice.readBit();\n    var _roundCandidates2 = slice.readUintNumber(8);\n    var _nextCandidateDelay2 = slice.readUintNumber(32);\n    var _consensusTimeout2 = slice.readUintNumber(32);\n    var _fastAttempts2 = slice.readUintNumber(32);\n    var _attemptDuration2 = slice.readUintNumber(32);\n    var _catchainMaxDeps2 = slice.readUintNumber(32);\n    var _maxBlockBytes2 = slice.readUintNumber(32);\n    var _maxColaltedBytes2 = slice.readUintNumber(32);\n    var protoVersion = slice.readUintNumber(16);\n    return {\n      flags: _flags,\n      newCatchainIds: _newCatchainIds,\n      roundCandidates: _roundCandidates2,\n      nextCandidateDelay: _nextCandidateDelay2,\n      consensusTimeout: _consensusTimeout2,\n      fastAttempts: _fastAttempts2,\n      attemptDuration: _attemptDuration2,\n      catchainMaxDeps: _catchainMaxDeps2,\n      maxBlockBytes: _maxBlockBytes2,\n      maxColaltedBytes: _maxColaltedBytes2,\n      protoVersion: protoVersion\n    };\n  }\n  throw new Error('Invalid config');\n}\nexports.configParse29 = configParse29;\n// cfg_vote_cfg#36 min_tot_rounds:uint8 max_tot_rounds:uint8 min_wins:uint8 max_losses:uint8 min_store_sec:uint32 max_store_sec:uint32 bit_price:uint32 cell_price:uint32 = ConfigProposalSetup;\nfunction parseProposalSetup(slice) {\n  var magic = slice.readUintNumber(8);\n  if (magic !== 0x36) {\n    throw new Error('Invalid config');\n  }\n  var minTotalRounds = slice.readUintNumber(8);\n  var maxTotalRounds = slice.readUintNumber(8);\n  var minWins = slice.readUintNumber(8);\n  var maxLoses = slice.readUintNumber(8);\n  var minStoreSec = slice.readUintNumber(32);\n  var maxStoreSec = slice.readUintNumber(32);\n  var bitPrice = slice.readUintNumber(32);\n  var cellPrice = slice.readUintNumber(32);\n  return {\n    minTotalRounds: minTotalRounds,\n    maxTotalRounds: maxTotalRounds,\n    minWins: minWins,\n    maxLoses: maxLoses,\n    minStoreSec: minStoreSec,\n    maxStoreSec: maxStoreSec,\n    bitPrice: bitPrice,\n    cellPrice: cellPrice\n  };\n}\nexports.parseProposalSetup = parseProposalSetup;\n// cfg_vote_setup#91 normal_params:^ConfigProposalSetup critical_params:^ConfigProposalSetup = ConfigVotingSetup;\nfunction parseVotingSetup(slice) {\n  if (!slice) {\n    throw new Error('Invalid config');\n  }\n  var magic = slice.readUintNumber(8);\n  if (magic !== 0x91) {\n    throw new Error('Invalid config');\n  }\n  var normalParams = parseProposalSetup(slice.readRef());\n  var criticalParams = parseProposalSetup(slice.readRef());\n  return {\n    normalParams: normalParams,\n    criticalParams: criticalParams\n  };\n}\nexports.parseVotingSetup = parseVotingSetup;\nfunction parseFullConfig(configs) {\n  return {\n    configAddress: configParseMasterAddressRequired(configs.get('0')),\n    electorAddress: configParseMasterAddressRequired(configs.get('1')),\n    minterAddress: configParseMasterAddress(configs.get('2')),\n    feeCollectorAddress: configParseMasterAddress(configs.get('3')),\n    dnsRootAddress: configParseMasterAddress(configs.get('4')),\n    globalVersion: configParse8(configs.get('8')),\n    workchains: configParse12(configs.get('12')),\n    voting: parseVotingSetup(configs.get('11')),\n    validators: _objectSpread(_objectSpread(_objectSpread({}, configParse15(configs.get('15'))), configParse16(configs.get('16'))), configParse17(configs.get('17'))),\n    storagePrices: configParse18(configs.get('18')),\n    gasPrices: {\n      masterchain: configParseGasLimitsPrices(configs.get('20')),\n      workchain: configParseGasLimitsPrices(configs.get('21'))\n    },\n    msgPrices: {\n      masterchain: configParseMsgPrices(configs.get('24')),\n      workchain: configParseMsgPrices(configs.get('25'))\n    },\n    validatorSets: {\n      prevValidators: configParseValidatorSet(configs.get('32')),\n      prevTempValidators: configParseValidatorSet(configs.get('33')),\n      currentValidators: configParseValidatorSet(configs.get('34')),\n      currentTempValidators: configParseValidatorSet(configs.get('35')),\n      nextValidators: configParseValidatorSet(configs.get('36')),\n      nextTempValidators: configParseValidatorSet(configs.get('37'))\n    },\n    validatorsPunish: configParse40(configs.get('40')),\n    bridges: {\n      ethereum: configParseBridge(configs.get('71')),\n      binance: configParseBridge(configs.get('72')),\n      polygon: configParseBridge(configs.get('73'))\n    },\n    catchain: configParse28(configs.get('28')),\n    consensus: configParse29(configs.get('29'))\n    // TODO: mint_new_price:Grams mint_add_price:Grams = ConfigParam 6;\n    // TODO: to_mint:ExtraCurrencyCollection = ConfigParam 7\n    // TODO: mandatory_params:(Hashmap 32 True) = ConfigParam 9\n    // TODO: critical_params:(Hashmap 32 True) = ConfigParam 10\n    // TODO: ConfigVotingSetup = ConfigParam 11\n    // TODO: ComplaintPricing = ConfigParam 13\n    // TODO: BlockCreateFees = ConfigParam 14\n  };\n}\n\nexports.parseFullConfig = parseFullConfig;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","parseFullConfig","parseVotingSetup","parseProposalSetup","configParse29","configParse28","configParseMsgPrices","configParseGasLimitsPrices","configParseBridge","configParseValidatorSet","configParse12","configParse40","configParse8","configParse18","configParse17","configParse16","configParse15","configParseMasterAddressRequired","parseBridge","parseValidatorSet","parseValidatorDescr","configParseWorkchainDescriptor","configParseMasterAddress","bn_js_1","require","__1","parseDict_1","slice","Address","readBuffer","readUint","toNumber","Error","enabledSince","actialMinSplit","min_split","max_split","basic","readBit","active","accept_msgs","flags","zerostateRootHash","zerostateFileHash","version","vmVersion","vmMode","format","readPublicKey","header","publicKey","weight","adnlAddress","timeSince","timeUntil","total","main","list","parseDict","readRef","totalWeight","exists","bridgeAddress","oracleMultisigAddress","oracles","externalChainAddress","validatorsElectedFor","readUintNumber","electorsStartBefore","electorsEndBefore","stakeHeldFor","maxValidators","maxMainValidators","minValidators","minStake","readCoins","maxStake","minTotalStake","maxStakeFactor","result","utime_since","bit_price_ps","cell_price_ps","mc_bit_price_ps","mc_cell_price_ps","forEach","a","push","capabilities","default","defaultFlatFine","defaultProportionaFine","severityFlatMult","severityProportionalMult","unfunishableInterval","longInterval","longFlatMult","longProportionalMult","mediumInterval","mediumFlatMult","mediumProportionalMult","parseGasLimitsInternal","tag","gasPrice","gasLimit","specialGasLimit","gasCredit","blockGasLimit","freezeDueLimit","deleteDueLimit","flatLimit","flatGasPrice","other","magic","lumpPrice","bitPrice","cellPrice","ihrPriceFactor","firstFrac","nextFrac","masterCatchainLifetime","shardCatchainLifetime","shardValidatorsLifetime","shardValidatorsCount","suffleMasterValidators","roundCandidates","nextCandidateDelay","consensusTimeout","fastAttempts","attemptDuration","catchainMaxDeps","maxBlockBytes","maxColaltedBytes","newCatchainIds","protoVersion","minTotalRounds","maxTotalRounds","minWins","maxLoses","minStoreSec","maxStoreSec","normalParams","criticalParams","configs","configAddress","get","electorAddress","minterAddress","feeCollectorAddress","dnsRootAddress","globalVersion","workchains","voting","validators","storagePrices","gasPrices","masterchain","workchain","msgPrices","validatorSets","prevValidators","prevTempValidators","currentValidators","currentTempValidators","nextValidators","nextTempValidators","validatorsPunish","bridges","ethereum","binance","polygon","catchain","consensus"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/contracts/configs/configParsing.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFullConfig = exports.parseVotingSetup = exports.parseProposalSetup = exports.configParse29 = exports.configParse28 = exports.configParseMsgPrices = exports.configParseGasLimitsPrices = exports.configParseBridge = exports.configParseValidatorSet = exports.configParse12 = exports.configParse40 = exports.configParse8 = exports.configParse18 = exports.configParse17 = exports.configParse16 = exports.configParse15 = exports.configParseMasterAddressRequired = exports.parseBridge = exports.parseValidatorSet = exports.parseValidatorDescr = exports.configParseWorkchainDescriptor = exports.configParseMasterAddress = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst __1 = require(\"../..\");\nconst parseDict_1 = require(\"../../boc/dict/parseDict\");\nfunction configParseMasterAddress(slice) {\n    if (slice) {\n        return new __1.Address(-1, slice.readBuffer(32));\n    }\n    else {\n        return null;\n    }\n}\nexports.configParseMasterAddress = configParseMasterAddress;\nfunction configParseWorkchainDescriptor(slice) {\n    if (slice.readUint(8).toNumber() !== 0xA6) {\n        throw Error('Invalid config');\n    }\n    let enabledSince = slice.readUint(32).toNumber();\n    let actialMinSplit = slice.readUint(8).toNumber();\n    let min_split = slice.readUint(8).toNumber();\n    let max_split = slice.readUint(8).toNumber();\n    let basic = slice.readBit();\n    let active = slice.readBit();\n    let accept_msgs = slice.readBit();\n    let flags = slice.readUint(13).toNumber();\n    let zerostateRootHash = slice.readBuffer(32);\n    let zerostateFileHash = slice.readBuffer(32);\n    let version = slice.readUint(32).toNumber();\n    // Only basic format supported\n    if (slice.readBit()) {\n        throw Error('Invalid config');\n    }\n    let vmVersion = slice.readUint(32).toNumber();\n    let vmMode = slice.readUint(64);\n    return {\n        enabledSince,\n        actialMinSplit,\n        min_split,\n        max_split,\n        basic,\n        active,\n        accept_msgs,\n        flags,\n        zerostateRootHash,\n        zerostateFileHash,\n        version,\n        format: {\n            vmVersion,\n            vmMode\n        }\n    };\n}\nexports.configParseWorkchainDescriptor = configParseWorkchainDescriptor;\nfunction readPublicKey(slice) {\n    // 8e81278a\n    if (slice.readUint(32).toNumber() !== 0x8e81278a) {\n        throw Error('Invalid config');\n    }\n    return slice.readBuffer(32);\n}\nfunction parseValidatorDescr(slice) {\n    let header = slice.readUint(8).toNumber();\n    if (header === 0x53) {\n        return {\n            publicKey: readPublicKey(slice),\n            weight: slice.readUint(64),\n            adnlAddress: null\n        };\n    }\n    else if (header === 0x73) {\n        return {\n            publicKey: readPublicKey(slice),\n            weight: slice.readUint(64),\n            adnlAddress: slice.readBuffer(32)\n        };\n    }\n    else {\n        throw Error('Invalid config');\n    }\n}\nexports.parseValidatorDescr = parseValidatorDescr;\nfunction parseValidatorSet(slice) {\n    let header = slice.readUint(8).toNumber();\n    if (header === 0x11) {\n        let timeSince = slice.readUint(32).toNumber();\n        let timeUntil = slice.readUint(32).toNumber();\n        let total = slice.readUint(16).toNumber();\n        let main = slice.readUint(16).toNumber();\n        let list = (0, parseDict_1.parseDict)(slice.readRef(), 16, parseValidatorDescr);\n        return {\n            timeSince,\n            timeUntil,\n            total,\n            main,\n            totalWeight: null,\n            list\n        };\n    }\n    else if (header === 0x12) {\n        let timeSince = slice.readUint(32).toNumber();\n        let timeUntil = slice.readUint(32).toNumber();\n        let total = slice.readUint(16).toNumber();\n        let main = slice.readUint(16).toNumber();\n        let totalWeight = slice.readUint(64);\n        let exists = slice.readBit();\n        let list = exists ? (0, parseDict_1.parseDict)(slice.readRef(), 16, parseValidatorDescr) : null;\n        return {\n            timeSince,\n            timeUntil,\n            total,\n            main,\n            totalWeight,\n            list\n        };\n    }\n}\nexports.parseValidatorSet = parseValidatorSet;\nfunction parseBridge(slice) {\n    let bridgeAddress = slice.readBuffer(32);\n    let oracleMultisigAddress = slice.readBuffer(32);\n    let oracles = slice.readBit() ? (0, parseDict_1.parseDict)(slice.readRef(), 256, (slice) => slice.readBuffer(32)) : null;\n    let externalChainAddress = slice.readBuffer(32);\n    return {\n        bridgeAddress,\n        oracleMultisigAddress,\n        oracles,\n        externalChainAddress\n    };\n}\nexports.parseBridge = parseBridge;\nfunction configParseMasterAddressRequired(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    return configParseMasterAddress(slice);\n}\nexports.configParseMasterAddressRequired = configParseMasterAddressRequired;\nfunction configParse15(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let validatorsElectedFor = slice.readUintNumber(32);\n    let electorsStartBefore = slice.readUintNumber(32);\n    let electorsEndBefore = slice.readUintNumber(32);\n    let stakeHeldFor = slice.readUintNumber(32);\n    return {\n        validatorsElectedFor,\n        electorsStartBefore,\n        electorsEndBefore,\n        stakeHeldFor\n    };\n}\nexports.configParse15 = configParse15;\nfunction configParse16(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let maxValidators = slice.readUintNumber(16);\n    let maxMainValidators = slice.readUintNumber(16);\n    let minValidators = slice.readUintNumber(16);\n    return {\n        maxValidators,\n        maxMainValidators,\n        minValidators\n    };\n}\nexports.configParse16 = configParse16;\nfunction configParse17(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let minStake = slice.readCoins();\n    let maxStake = slice.readCoins();\n    let minTotalStake = slice.readCoins();\n    let maxStakeFactor = slice.readUintNumber(32);\n    return {\n        minStake,\n        maxStake,\n        minTotalStake,\n        maxStakeFactor\n    };\n}\nexports.configParse17 = configParse17;\nfunction configParse18(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let result = [];\n    (0, parseDict_1.parseDict)(slice, 32, (slice) => {\n        let header = slice.readUintNumber(8);\n        if (header !== 0xcc) {\n            throw Error('Invalid config');\n        }\n        let utime_since = slice.readUint(32);\n        let bit_price_ps = slice.readUint(64);\n        let cell_price_ps = slice.readUint(64);\n        let mc_bit_price_ps = slice.readUint(64);\n        let mc_cell_price_ps = slice.readUint(64);\n        return {\n            utime_since,\n            bit_price_ps,\n            cell_price_ps,\n            mc_bit_price_ps,\n            mc_cell_price_ps\n        };\n    }).forEach(a => {\n        result.push(a);\n    });\n    return result;\n}\nexports.configParse18 = configParse18;\nfunction configParse8(slice) {\n    if (!slice) {\n        return {\n            version: 0,\n            capabilities: new bn_js_1.default(0)\n        };\n    }\n    let version = slice.readUintNumber(32);\n    let capabilities = slice.readUint(64);\n    return {\n        version,\n        capabilities\n    };\n}\nexports.configParse8 = configParse8;\nfunction configParse40(slice) {\n    if (!slice) {\n        return null;\n    }\n    let header = slice.readUintNumber(8);\n    if (header !== 1) {\n        throw Error('Invalid config');\n    }\n    let defaultFlatFine = slice.readCoins();\n    let defaultProportionaFine = slice.readCoins();\n    let severityFlatMult = slice.readUintNumber(16);\n    let severityProportionalMult = slice.readUintNumber(16);\n    let unfunishableInterval = slice.readUintNumber(16);\n    let longInterval = slice.readUintNumber(16);\n    let longFlatMult = slice.readUintNumber(16);\n    let longProportionalMult = slice.readUintNumber(16);\n    let mediumInterval = slice.readUintNumber(16);\n    let mediumFlatMult = slice.readUintNumber(16);\n    let mediumProportionalMult = slice.readUintNumber(16);\n    return {\n        defaultFlatFine,\n        defaultProportionaFine,\n        severityFlatMult,\n        severityProportionalMult,\n        unfunishableInterval,\n        longInterval,\n        longFlatMult,\n        longProportionalMult,\n        mediumInterval,\n        mediumFlatMult,\n        mediumProportionalMult\n    };\n}\nexports.configParse40 = configParse40;\nfunction configParse12(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    if (slice.readUint(1).toNumber()) {\n        return (0, parseDict_1.parseDict)(slice.readRef(), 32, configParseWorkchainDescriptor);\n    }\n    else {\n        throw Error('No workchains exist');\n    }\n}\nexports.configParse12 = configParse12;\nfunction configParseValidatorSet(slice) {\n    if (!slice) {\n        return null;\n    }\n    return parseValidatorSet(slice);\n}\nexports.configParseValidatorSet = configParseValidatorSet;\nfunction configParseBridge(slice) {\n    if (!slice) {\n        return null;\n    }\n    return parseBridge(slice);\n}\nexports.configParseBridge = configParseBridge;\nfunction parseGasLimitsInternal(slice) {\n    const tag = slice.readUintNumber(8);\n    if (tag === 0xde) {\n        const gasPrice = slice.readUint(64);\n        const gasLimit = slice.readUint(64);\n        const specialGasLimit = slice.readUint(64);\n        const gasCredit = slice.readUint(64);\n        const blockGasLimit = slice.readUint(64);\n        const freezeDueLimit = slice.readUint(64);\n        const deleteDueLimit = slice.readUint(64);\n        return {\n            gasPrice,\n            gasLimit,\n            specialGasLimit,\n            gasCredit,\n            blockGasLimit,\n            freezeDueLimit,\n            deleteDueLimit\n        };\n    }\n    else if (tag === 0xdd) {\n        const gasPrice = slice.readUint(64);\n        const gasLimit = slice.readUint(64);\n        const gasCredit = slice.readUint(64);\n        const blockGasLimit = slice.readUint(64);\n        const freezeDueLimit = slice.readUint(64);\n        const deleteDueLimit = slice.readUint(64);\n        return {\n            gasPrice,\n            gasLimit,\n            gasCredit,\n            blockGasLimit,\n            freezeDueLimit,\n            deleteDueLimit\n        };\n    }\n    else {\n        throw Error('Invalid config');\n    }\n}\nfunction configParseGasLimitsPrices(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    const tag = slice.readUintNumber(8);\n    if (tag === 0xd1) {\n        const flatLimit = slice.readUint(64);\n        const flatGasPrice = slice.readUint(64);\n        const other = parseGasLimitsInternal(slice);\n        return {\n            flatLimit,\n            flatGasPrice,\n            other\n        };\n    }\n    else {\n        throw Error('Invalid config');\n    }\n}\nexports.configParseGasLimitsPrices = configParseGasLimitsPrices;\nfunction configParseMsgPrices(slice) {\n    if (!slice) {\n        throw new Error('Invalid config');\n    }\n    let magic = slice.readUintNumber(8);\n    if (magic !== 0xea) {\n        throw new Error('Invalid msg prices param');\n    }\n    return {\n        lumpPrice: slice.readUint(64),\n        bitPrice: slice.readUint(64),\n        cellPrice: slice.readUint(64),\n        ihrPriceFactor: slice.readUint(32),\n        firstFrac: slice.readUint(16),\n        nextFrac: slice.readUint(16)\n    };\n}\nexports.configParseMsgPrices = configParseMsgPrices;\n// catchain_config#c1 mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32 \n//   shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;\n// catchain_config_new#c2 flags:(## 7) { flags = 0 } shuffle_mc_validators:Bool\n//   mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32\n//   shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;\nfunction configParse28(slice) {\n    if (!slice) {\n        throw new Error('Invalid config');\n    }\n    let magic = slice.readUintNumber(8);\n    if (magic === 0xc1) {\n        let masterCatchainLifetime = slice.readUintNumber(32);\n        let shardCatchainLifetime = slice.readUintNumber(32);\n        let shardValidatorsLifetime = slice.readUintNumber(32);\n        let shardValidatorsCount = slice.readUintNumber(32);\n        return {\n            masterCatchainLifetime,\n            shardCatchainLifetime,\n            shardValidatorsLifetime,\n            shardValidatorsCount\n        };\n    }\n    if (magic === 0xc2) {\n        let flags = slice.readUintNumber(7);\n        let suffleMasterValidators = slice.readBit();\n        let masterCatchainLifetime = slice.readUintNumber(32);\n        let shardCatchainLifetime = slice.readUintNumber(32);\n        let shardValidatorsLifetime = slice.readUintNumber(32);\n        let shardValidatorsCount = slice.readUintNumber(32);\n        return {\n            flags,\n            suffleMasterValidators,\n            masterCatchainLifetime,\n            shardCatchainLifetime,\n            shardValidatorsLifetime,\n            shardValidatorsCount\n        };\n    }\n    throw new Error('Invalid config');\n}\nexports.configParse28 = configParse28;\n// consensus_config#d6 round_candidates:# { round_candidates >= 1 }\n//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32\n//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32\n//   max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;\n// consensus_config_new#d7 flags:(## 7) { flags = 0 } new_catchain_ids:Bool\n//   round_candidates:(## 8) { round_candidates >= 1 }\n//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32\n//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32\n//   max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;\n// consensus_config_v3#d8 flags:(## 7) { flags = 0 } new_catchain_ids:Bool\n//   round_candidates:(## 8) { round_candidates >= 1 }\n//   next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32\n//   fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32\n//   max_block_bytes:uint32 max_collated_bytes:uint32 \n//   proto_version:uint16 = ConsensusConfig;\nfunction configParse29(slice) {\n    if (!slice) {\n        throw new Error('Invalid config');\n    }\n    let magic = slice.readUintNumber(8);\n    if (magic === 0xd6) {\n        let roundCandidates = slice.readUintNumber(32);\n        let nextCandidateDelay = slice.readUintNumber(32);\n        let consensusTimeout = slice.readUintNumber(32);\n        let fastAttempts = slice.readUintNumber(32);\n        let attemptDuration = slice.readUintNumber(32);\n        let catchainMaxDeps = slice.readUintNumber(32);\n        let maxBlockBytes = slice.readUintNumber(32);\n        let maxColaltedBytes = slice.readUintNumber(32);\n        return {\n            roundCandidates,\n            nextCandidateDelay,\n            consensusTimeout,\n            fastAttempts,\n            attemptDuration,\n            catchainMaxDeps,\n            maxBlockBytes,\n            maxColaltedBytes\n        };\n    }\n    else if (magic === 0xd7) {\n        let flags = slice.readUintNumber(7);\n        let newCatchainIds = slice.readBit();\n        let roundCandidates = slice.readUintNumber(8);\n        let nextCandidateDelay = slice.readUintNumber(32);\n        let consensusTimeout = slice.readUintNumber(32);\n        let fastAttempts = slice.readUintNumber(32);\n        let attemptDuration = slice.readUintNumber(32);\n        let catchainMaxDeps = slice.readUintNumber(32);\n        let maxBlockBytes = slice.readUintNumber(32);\n        let maxColaltedBytes = slice.readUintNumber(32);\n        return {\n            flags,\n            newCatchainIds,\n            roundCandidates,\n            nextCandidateDelay,\n            consensusTimeout,\n            fastAttempts,\n            attemptDuration,\n            catchainMaxDeps,\n            maxBlockBytes,\n            maxColaltedBytes\n        };\n    }\n    else if (magic === 0xd8) {\n        let flags = slice.readUintNumber(7);\n        let newCatchainIds = slice.readBit();\n        let roundCandidates = slice.readUintNumber(8);\n        let nextCandidateDelay = slice.readUintNumber(32);\n        let consensusTimeout = slice.readUintNumber(32);\n        let fastAttempts = slice.readUintNumber(32);\n        let attemptDuration = slice.readUintNumber(32);\n        let catchainMaxDeps = slice.readUintNumber(32);\n        let maxBlockBytes = slice.readUintNumber(32);\n        let maxColaltedBytes = slice.readUintNumber(32);\n        let protoVersion = slice.readUintNumber(16);\n        return {\n            flags,\n            newCatchainIds,\n            roundCandidates,\n            nextCandidateDelay,\n            consensusTimeout,\n            fastAttempts,\n            attemptDuration,\n            catchainMaxDeps,\n            maxBlockBytes,\n            maxColaltedBytes,\n            protoVersion\n        };\n    }\n    throw new Error('Invalid config');\n}\nexports.configParse29 = configParse29;\n// cfg_vote_cfg#36 min_tot_rounds:uint8 max_tot_rounds:uint8 min_wins:uint8 max_losses:uint8 min_store_sec:uint32 max_store_sec:uint32 bit_price:uint32 cell_price:uint32 = ConfigProposalSetup;\nfunction parseProposalSetup(slice) {\n    let magic = slice.readUintNumber(8);\n    if (magic !== 0x36) {\n        throw new Error('Invalid config');\n    }\n    let minTotalRounds = slice.readUintNumber(8);\n    let maxTotalRounds = slice.readUintNumber(8);\n    let minWins = slice.readUintNumber(8);\n    let maxLoses = slice.readUintNumber(8);\n    let minStoreSec = slice.readUintNumber(32);\n    let maxStoreSec = slice.readUintNumber(32);\n    let bitPrice = slice.readUintNumber(32);\n    let cellPrice = slice.readUintNumber(32);\n    return { minTotalRounds, maxTotalRounds, minWins, maxLoses, minStoreSec, maxStoreSec, bitPrice, cellPrice };\n}\nexports.parseProposalSetup = parseProposalSetup;\n// cfg_vote_setup#91 normal_params:^ConfigProposalSetup critical_params:^ConfigProposalSetup = ConfigVotingSetup;\nfunction parseVotingSetup(slice) {\n    if (!slice) {\n        throw new Error('Invalid config');\n    }\n    let magic = slice.readUintNumber(8);\n    if (magic !== 0x91) {\n        throw new Error('Invalid config');\n    }\n    let normalParams = parseProposalSetup(slice.readRef());\n    let criticalParams = parseProposalSetup(slice.readRef());\n    return { normalParams, criticalParams };\n}\nexports.parseVotingSetup = parseVotingSetup;\nfunction parseFullConfig(configs) {\n    return {\n        configAddress: configParseMasterAddressRequired(configs.get('0')),\n        electorAddress: configParseMasterAddressRequired(configs.get('1')),\n        minterAddress: configParseMasterAddress(configs.get('2')),\n        feeCollectorAddress: configParseMasterAddress(configs.get('3')),\n        dnsRootAddress: configParseMasterAddress(configs.get('4')),\n        globalVersion: configParse8(configs.get('8')),\n        workchains: configParse12(configs.get('12')),\n        voting: parseVotingSetup(configs.get('11')),\n        validators: {\n            ...configParse15(configs.get('15')),\n            ...configParse16(configs.get('16')),\n            ...configParse17(configs.get('17'))\n        },\n        storagePrices: configParse18(configs.get('18')),\n        gasPrices: {\n            masterchain: configParseGasLimitsPrices(configs.get('20')),\n            workchain: configParseGasLimitsPrices(configs.get('21')),\n        },\n        msgPrices: {\n            masterchain: configParseMsgPrices(configs.get('24')),\n            workchain: configParseMsgPrices(configs.get('25')),\n        },\n        validatorSets: {\n            prevValidators: configParseValidatorSet(configs.get('32')),\n            prevTempValidators: configParseValidatorSet(configs.get('33')),\n            currentValidators: configParseValidatorSet(configs.get('34')),\n            currentTempValidators: configParseValidatorSet(configs.get('35')),\n            nextValidators: configParseValidatorSet(configs.get('36')),\n            nextTempValidators: configParseValidatorSet(configs.get('37'))\n        },\n        validatorsPunish: configParse40(configs.get('40')),\n        bridges: {\n            ethereum: configParseBridge(configs.get('71')),\n            binance: configParseBridge(configs.get('72')),\n            polygon: configParseBridge(configs.get('73'))\n        },\n        catchain: configParse28(configs.get('28')),\n        consensus: configParse29(configs.get('29'))\n        // TODO: mint_new_price:Grams mint_add_price:Grams = ConfigParam 6;\n        // TODO: to_mint:ExtraCurrencyCollection = ConfigParam 7\n        // TODO: mandatory_params:(Hashmap 32 True) = ConfigParam 9\n        // TODO: critical_params:(Hashmap 32 True) = ConfigParam 10\n        // TODO: ConfigVotingSetup = ConfigParam 11\n        // TODO: ComplaintPricing = ConfigParam 13\n        // TODO: BlockCreateFees = ConfigParam 14\n    };\n}\nexports.parseFullConfig = parseFullConfig;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}