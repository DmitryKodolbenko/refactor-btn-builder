{"ast":null,"code":"var _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"./Utils\"),\n  crc16 = _require.crc16,\n  hexToBytes = _require.hexToBytes,\n  bytesToHex = _require.bytesToHex,\n  stringToBytes = _require.stringToBytes,\n  base64toString = _require.base64toString,\n  stringToBase64 = _require.stringToBase64;\nvar bounceable_tag = 0x11;\nvar non_bounceable_tag = 0x51;\nvar test_flag = 0x80;\n\n/**\n * @private\n * @param addressString {string}\n * @return {{isTestOnly: boolean, workchain: number, hashPart: Uint8Array, isBounceable: boolean}}\n */\nfunction parseFriendlyAddress(addressString) {\n  var data = stringToBytes(base64toString(addressString));\n  if (data.length !== 36) {\n    // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n    throw \"Unknown address type: byte length is not equal to 36\";\n  }\n  var addr = data.slice(0, 34);\n  var crc = data.slice(34, 36);\n  var calcedCrc = crc16(addr);\n  if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n    throw \"Wrong crc16 hashsum\";\n  }\n  var tag = addr[0];\n  var isTestOnly = false;\n  var isBounceable = false;\n  if (tag & test_flag) {\n    isTestOnly = true;\n    tag = tag ^ test_flag;\n  }\n  if (tag !== bounceable_tag && tag !== non_bounceable_tag) throw \"Unknown address tag\";\n  isBounceable = tag === bounceable_tag;\n  var workchain = null;\n  if (addr[1] === 0xff) {\n    // TODO we should read signed integer here\n    workchain = -1;\n  } else {\n    workchain = addr[1];\n  }\n  if (workchain !== 0 && workchain !== -1) throw new Error('Invalid address wc ' + workchain);\n  var hashPart = addr.slice(2, 34);\n  return {\n    isTestOnly: isTestOnly,\n    isBounceable: isBounceable,\n    workchain: workchain,\n    hashPart: hashPart\n  };\n}\nvar Address = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\n   * @param anyForm {string | Address}\n   */\n  function Address(anyForm) {\n    _classCallCheck(this, Address);\n    if (anyForm == null) {\n      throw \"Invalid address\";\n    }\n    if (anyForm instanceof Address) {\n      this.wc = anyForm.wc;\n      this.hashPart = anyForm.hashPart;\n      this.isTestOnly = anyForm.isTestOnly;\n      this.isUserFriendly = anyForm.isUserFriendly;\n      this.isBounceable = anyForm.isBounceable;\n      this.isUrlSafe = anyForm.isUrlSafe;\n      return;\n    }\n    if (anyForm.search(/\\-/) > 0 || anyForm.search(/_/) > 0) {\n      this.isUrlSafe = true;\n      anyForm = anyForm.replace(/\\-/g, '+').replace(/_/g, '\\/');\n    } else {\n      this.isUrlSafe = false;\n    }\n    if (anyForm.indexOf(':') > -1) {\n      var arr = anyForm.split(':');\n      if (arr.length !== 2) throw new Error('Invalid address ' + anyForm);\n      var wc = parseInt(arr[0]);\n      if (wc !== 0 && wc !== -1) throw new Error('Invalid address wc ' + anyForm);\n      var hex = arr[1];\n      if (hex.length !== 64) throw new Error('Invalid address hex ' + anyForm);\n      this.isUserFriendly = false;\n      this.wc = wc;\n      this.hashPart = hexToBytes(hex);\n      this.isTestOnly = false;\n      this.isBounceable = false;\n    } else {\n      this.isUserFriendly = true;\n      var parseResult = parseFriendlyAddress(anyForm);\n      this.wc = parseResult.workchain;\n      this.hashPart = parseResult.hashPart;\n      this.isTestOnly = parseResult.isTestOnly;\n      this.isBounceable = parseResult.isBounceable;\n    }\n  }\n\n  /**\n   * @param isUserFriendly? {boolean}\n   * @param isUrlSafe? {boolean}\n   * @param isBounceable? {boolean}\n   * @param isTestOnly? {boolean}\n   * @return {string}\n   */\n  _createClass(Address, [{\n    key: \"toString\",\n    value: function toString(isUserFriendly, isUrlSafe, isBounceable, isTestOnly) {\n      if (isUserFriendly === undefined) isUserFriendly = this.isUserFriendly;\n      if (isUrlSafe === undefined) isUrlSafe = this.isUrlSafe;\n      if (isBounceable === undefined) isBounceable = this.isBounceable;\n      if (isTestOnly === undefined) isTestOnly = this.isTestOnly;\n      if (!isUserFriendly) {\n        return this.wc + \":\" + bytesToHex(this.hashPart);\n      } else {\n        var tag = isBounceable ? bounceable_tag : non_bounceable_tag;\n        if (isTestOnly) {\n          tag |= test_flag;\n        }\n        var addr = new Int8Array(34);\n        addr[0] = tag;\n        addr[1] = this.wc;\n        addr.set(this.hashPart, 2);\n        var addressWithChecksum = new Uint8Array(36);\n        addressWithChecksum.set(addr);\n        addressWithChecksum.set(crc16(addr), 34);\n        var addressBase64 = stringToBase64(String.fromCharCode.apply(null, new Uint8Array(addressWithChecksum)));\n        if (isUrlSafe) {\n          addressBase64 = addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n        }\n        return addressBase64;\n      }\n    }\n  }], [{\n    key: \"isValid\",\n    value:\n    /**\n     * @param anyForm {string | Address}\n     */\n    function isValid(anyForm) {\n      try {\n        new Address(anyForm);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }]);\n  return Address;\n}();\nmodule.exports.default = Address;","map":{"version":3,"names":["require","crc16","hexToBytes","bytesToHex","stringToBytes","base64toString","stringToBase64","bounceable_tag","non_bounceable_tag","test_flag","parseFriendlyAddress","addressString","data","length","addr","slice","crc","calcedCrc","tag","isTestOnly","isBounceable","workchain","Error","hashPart","Address","anyForm","wc","isUserFriendly","isUrlSafe","search","replace","indexOf","arr","split","parseInt","hex","parseResult","undefined","Int8Array","set","addressWithChecksum","Uint8Array","addressBase64","String","fromCharCode","apply","e","module","exports","default"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/tonweb/src/utils/Address.js"],"sourcesContent":["const {crc16, hexToBytes, bytesToHex, stringToBytes, base64toString, stringToBase64} = require(\"./Utils\");\n\nconst bounceable_tag = 0x11;\nconst non_bounceable_tag = 0x51;\nconst test_flag = 0x80;\n\n/**\n * @private\n * @param addressString {string}\n * @return {{isTestOnly: boolean, workchain: number, hashPart: Uint8Array, isBounceable: boolean}}\n */\nfunction parseFriendlyAddress(addressString) {\n    const data = stringToBytes(base64toString(addressString));\n    if (data.length !== 36) { // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n        throw \"Unknown address type: byte length is not equal to 36\";\n    }\n    const addr = data.slice(0, 34);\n    const crc = data.slice(34, 36);\n    const calcedCrc = crc16(addr);\n    if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n        throw \"Wrong crc16 hashsum\";\n    }\n    let tag = addr[0];\n    let isTestOnly = false;\n    let isBounceable = false;\n    if (tag & test_flag) {\n        isTestOnly = true;\n        tag = tag ^ test_flag;\n    }\n    if ((tag !== bounceable_tag) && (tag !== non_bounceable_tag))\n        throw \"Unknown address tag\";\n\n    isBounceable = tag === bounceable_tag;\n\n    let workchain = null;\n    if (addr[1] === 0xff) { // TODO we should read signed integer here\n        workchain = -1;\n    } else {\n        workchain = addr[1];\n    }\n    if (workchain !== 0 && workchain !== -1) throw new Error('Invalid address wc ' + workchain);\n\n    const hashPart = addr.slice(2, 34);\n    return {isTestOnly, isBounceable, workchain, hashPart};\n}\n\nclass Address {\n    /**\n     * @param anyForm {string | Address}\n     */\n    static isValid(anyForm) {\n        try {\n            new Address(anyForm);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @param anyForm {string | Address}\n     */\n    constructor(anyForm) {\n        if (anyForm == null) {\n            throw \"Invalid address\";\n        }\n\n        if (anyForm instanceof Address) {\n            this.wc = anyForm.wc;\n            this.hashPart = anyForm.hashPart;\n            this.isTestOnly = anyForm.isTestOnly;\n            this.isUserFriendly = anyForm.isUserFriendly;\n            this.isBounceable = anyForm.isBounceable;\n            this.isUrlSafe = anyForm.isUrlSafe;\n            return;\n        }\n\n        if (anyForm.search(/\\-/) > 0 || anyForm.search(/_/) > 0) {\n            this.isUrlSafe = true;\n            anyForm = anyForm.replace(/\\-/g, '+').replace(/_/g, '\\/');\n        } else {\n            this.isUrlSafe = false;\n        }\n        if (anyForm.indexOf(':') > -1) {\n            const arr = anyForm.split(':');\n            if (arr.length !== 2) throw new Error('Invalid address ' + anyForm);\n            const wc = parseInt(arr[0]);\n            if (wc !== 0 && wc !== -1) throw new Error('Invalid address wc ' + anyForm);\n            const hex = arr[1];\n            if (hex.length !== 64) throw new Error('Invalid address hex ' + anyForm);\n            this.isUserFriendly = false;\n            this.wc = wc;\n            this.hashPart = hexToBytes(hex);\n            this.isTestOnly = false;\n            this.isBounceable = false;\n        } else {\n            this.isUserFriendly = true;\n            const parseResult = parseFriendlyAddress(anyForm);\n            this.wc = parseResult.workchain;\n            this.hashPart = parseResult.hashPart;\n            this.isTestOnly = parseResult.isTestOnly;\n            this.isBounceable = parseResult.isBounceable;\n        }\n    }\n\n    /**\n     * @param isUserFriendly? {boolean}\n     * @param isUrlSafe? {boolean}\n     * @param isBounceable? {boolean}\n     * @param isTestOnly? {boolean}\n     * @return {string}\n     */\n    toString(isUserFriendly,\n             isUrlSafe,\n             isBounceable,\n             isTestOnly) {\n\n        if (isUserFriendly === undefined) isUserFriendly = this.isUserFriendly;\n        if (isUrlSafe === undefined) isUrlSafe = this.isUrlSafe;\n        if (isBounceable === undefined) isBounceable = this.isBounceable;\n        if (isTestOnly === undefined) isTestOnly = this.isTestOnly;\n\n        if (!isUserFriendly) {\n            return this.wc + \":\" + bytesToHex(this.hashPart);\n        } else {\n            let tag = isBounceable ? bounceable_tag : non_bounceable_tag;\n            if (isTestOnly) {\n                tag |= test_flag;\n            }\n\n            const addr = new Int8Array(34);\n            addr[0] = tag;\n            addr[1] = this.wc;\n            addr.set(this.hashPart, 2);\n\n            const addressWithChecksum = new Uint8Array(36);\n            addressWithChecksum.set(addr);\n            addressWithChecksum.set(crc16(addr), 34);\n            let addressBase64 = stringToBase64(String.fromCharCode.apply(null, new Uint8Array(addressWithChecksum)));\n\n            if (isUrlSafe) {\n                addressBase64 = addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n            }\n            return addressBase64;\n        }\n    }\n}\n\nmodule.exports.default = Address;"],"mappings":"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"},"metadata":{},"sourceType":"script"}