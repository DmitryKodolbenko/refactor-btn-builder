{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst types_1 = require(\"../../../tendermint/types/types\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nvar BondStatus;\n(function (BondStatus) {\n  /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n  BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n  /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n  BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n  /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n  BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n  /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n  BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n  BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\nfunction bondStatusFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"BOND_STATUS_UNSPECIFIED\":\n      return BondStatus.BOND_STATUS_UNSPECIFIED;\n    case 1:\n    case \"BOND_STATUS_UNBONDED\":\n      return BondStatus.BOND_STATUS_UNBONDED;\n    case 2:\n    case \"BOND_STATUS_UNBONDING\":\n      return BondStatus.BOND_STATUS_UNBONDING;\n    case 3:\n    case \"BOND_STATUS_BONDED\":\n      return BondStatus.BOND_STATUS_BONDED;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return BondStatus.UNRECOGNIZED;\n  }\n}\nexports.bondStatusFromJSON = bondStatusFromJSON;\nfunction bondStatusToJSON(object) {\n  switch (object) {\n    case BondStatus.BOND_STATUS_UNSPECIFIED:\n      return \"BOND_STATUS_UNSPECIFIED\";\n    case BondStatus.BOND_STATUS_UNBONDED:\n      return \"BOND_STATUS_UNBONDED\";\n    case BondStatus.BOND_STATUS_UNBONDING:\n      return \"BOND_STATUS_UNBONDING\";\n    case BondStatus.BOND_STATUS_BONDED:\n      return \"BOND_STATUS_BONDED\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.bondStatusToJSON = bondStatusToJSON;\nconst baseHistoricalInfo = {};\nexports.HistoricalInfo = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.header !== undefined) {\n      types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.valset) {\n      exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseHistoricalInfo);\n    message.valset = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.header = types_1.Header.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.valset.push(exports.Validator.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseHistoricalInfo);\n    message.header = object.header !== undefined && object.header !== null ? types_1.Header.fromJSON(object.header) : undefined;\n    message.valset = ((_a = object.valset) !== null && _a !== void 0 ? _a : []).map(e => exports.Validator.fromJSON(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n    if (message.valset) {\n      obj.valset = message.valset.map(e => e ? exports.Validator.toJSON(e) : undefined);\n    } else {\n      obj.valset = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseHistoricalInfo);\n    message.header = object.header !== undefined && object.header !== null ? types_1.Header.fromPartial(object.header) : undefined;\n    message.valset = ((_a = object.valset) === null || _a === void 0 ? void 0 : _a.map(e => exports.Validator.fromPartial(e))) || [];\n    return message;\n  }\n};\nconst baseCommissionRates = {\n  rate: \"\",\n  maxRate: \"\",\n  maxChangeRate: \"\"\n};\nexports.CommissionRates = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.rate !== \"\") {\n      writer.uint32(10).string(message.rate);\n    }\n    if (message.maxRate !== \"\") {\n      writer.uint32(18).string(message.maxRate);\n    }\n    if (message.maxChangeRate !== \"\") {\n      writer.uint32(26).string(message.maxChangeRate);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommissionRates);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.rate = reader.string();\n          break;\n        case 2:\n          message.maxRate = reader.string();\n          break;\n        case 3:\n          message.maxChangeRate = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommissionRates);\n    message.rate = object.rate !== undefined && object.rate !== null ? String(object.rate) : \"\";\n    message.maxRate = object.maxRate !== undefined && object.maxRate !== null ? String(object.maxRate) : \"\";\n    message.maxChangeRate = object.maxChangeRate !== undefined && object.maxChangeRate !== null ? String(object.maxChangeRate) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.rate !== undefined && (obj.rate = message.rate);\n    message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n    message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = Object.assign({}, baseCommissionRates);\n    message.rate = (_a = object.rate) !== null && _a !== void 0 ? _a : \"\";\n    message.maxRate = (_b = object.maxRate) !== null && _b !== void 0 ? _b : \"\";\n    message.maxChangeRate = (_c = object.maxChangeRate) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nconst baseCommission = {};\nexports.Commission = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.commissionRates !== undefined) {\n      exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.updateTime !== undefined) {\n      timestamp_1.Timestamp.encode(message.updateTime, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommission);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.updateTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommission);\n    message.commissionRates = object.commissionRates !== undefined && object.commissionRates !== null ? exports.CommissionRates.fromJSON(object.commissionRates) : undefined;\n    message.updateTime = object.updateTime !== undefined && object.updateTime !== null ? fromJsonTimestamp(object.updateTime) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? exports.CommissionRates.toJSON(message.commissionRates) : undefined);\n    message.updateTime !== undefined && (obj.updateTime = fromTimestamp(message.updateTime).toISOString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommission);\n    message.commissionRates = object.commissionRates !== undefined && object.commissionRates !== null ? exports.CommissionRates.fromPartial(object.commissionRates) : undefined;\n    message.updateTime = object.updateTime !== undefined && object.updateTime !== null ? timestamp_1.Timestamp.fromPartial(object.updateTime) : undefined;\n    return message;\n  }\n};\nconst baseDescription = {\n  moniker: \"\",\n  identity: \"\",\n  website: \"\",\n  securityContact: \"\",\n  details: \"\"\n};\nexports.Description = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.moniker !== \"\") {\n      writer.uint32(10).string(message.moniker);\n    }\n    if (message.identity !== \"\") {\n      writer.uint32(18).string(message.identity);\n    }\n    if (message.website !== \"\") {\n      writer.uint32(26).string(message.website);\n    }\n    if (message.securityContact !== \"\") {\n      writer.uint32(34).string(message.securityContact);\n    }\n    if (message.details !== \"\") {\n      writer.uint32(42).string(message.details);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDescription);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.moniker = reader.string();\n          break;\n        case 2:\n          message.identity = reader.string();\n          break;\n        case 3:\n          message.website = reader.string();\n          break;\n        case 4:\n          message.securityContact = reader.string();\n          break;\n        case 5:\n          message.details = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDescription);\n    message.moniker = object.moniker !== undefined && object.moniker !== null ? String(object.moniker) : \"\";\n    message.identity = object.identity !== undefined && object.identity !== null ? String(object.identity) : \"\";\n    message.website = object.website !== undefined && object.website !== null ? String(object.website) : \"\";\n    message.securityContact = object.securityContact !== undefined && object.securityContact !== null ? String(object.securityContact) : \"\";\n    message.details = object.details !== undefined && object.details !== null ? String(object.details) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.moniker !== undefined && (obj.moniker = message.moniker);\n    message.identity !== undefined && (obj.identity = message.identity);\n    message.website !== undefined && (obj.website = message.website);\n    message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n    message.details !== undefined && (obj.details = message.details);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n    const message = Object.assign({}, baseDescription);\n    message.moniker = (_a = object.moniker) !== null && _a !== void 0 ? _a : \"\";\n    message.identity = (_b = object.identity) !== null && _b !== void 0 ? _b : \"\";\n    message.website = (_c = object.website) !== null && _c !== void 0 ? _c : \"\";\n    message.securityContact = (_d = object.securityContact) !== null && _d !== void 0 ? _d : \"\";\n    message.details = (_e = object.details) !== null && _e !== void 0 ? _e : \"\";\n    return message;\n  }\n};\nconst baseValidator = {\n  operatorAddress: \"\",\n  jailed: false,\n  status: 0,\n  tokens: \"\",\n  delegatorShares: \"\",\n  unbondingHeight: long_1.default.ZERO,\n  minSelfDelegation: \"\"\n};\nexports.Validator = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.operatorAddress !== \"\") {\n      writer.uint32(10).string(message.operatorAddress);\n    }\n    if (message.consensusPubkey !== undefined) {\n      any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.jailed === true) {\n      writer.uint32(24).bool(message.jailed);\n    }\n    if (message.status !== 0) {\n      writer.uint32(32).int32(message.status);\n    }\n    if (message.tokens !== \"\") {\n      writer.uint32(42).string(message.tokens);\n    }\n    if (message.delegatorShares !== \"\") {\n      writer.uint32(50).string(message.delegatorShares);\n    }\n    if (message.description !== undefined) {\n      exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n    }\n    if (!message.unbondingHeight.isZero()) {\n      writer.uint32(64).int64(message.unbondingHeight);\n    }\n    if (message.unbondingTime !== undefined) {\n      timestamp_1.Timestamp.encode(message.unbondingTime, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.commission !== undefined) {\n      exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.minSelfDelegation !== \"\") {\n      writer.uint32(90).string(message.minSelfDelegation);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValidator);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.operatorAddress = reader.string();\n          break;\n        case 2:\n          message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.jailed = reader.bool();\n          break;\n        case 4:\n          message.status = reader.int32();\n          break;\n        case 5:\n          message.tokens = reader.string();\n          break;\n        case 6:\n          message.delegatorShares = reader.string();\n          break;\n        case 7:\n          message.description = exports.Description.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.unbondingHeight = reader.int64();\n          break;\n        case 9:\n          message.unbondingTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.commission = exports.Commission.decode(reader, reader.uint32());\n          break;\n        case 11:\n          message.minSelfDelegation = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseValidator);\n    message.operatorAddress = object.operatorAddress !== undefined && object.operatorAddress !== null ? String(object.operatorAddress) : \"\";\n    message.consensusPubkey = object.consensusPubkey !== undefined && object.consensusPubkey !== null ? any_1.Any.fromJSON(object.consensusPubkey) : undefined;\n    message.jailed = object.jailed !== undefined && object.jailed !== null ? Boolean(object.jailed) : false;\n    message.status = object.status !== undefined && object.status !== null ? bondStatusFromJSON(object.status) : 0;\n    message.tokens = object.tokens !== undefined && object.tokens !== null ? String(object.tokens) : \"\";\n    message.delegatorShares = object.delegatorShares !== undefined && object.delegatorShares !== null ? String(object.delegatorShares) : \"\";\n    message.description = object.description !== undefined && object.description !== null ? exports.Description.fromJSON(object.description) : undefined;\n    message.unbondingHeight = object.unbondingHeight !== undefined && object.unbondingHeight !== null ? long_1.default.fromString(object.unbondingHeight) : long_1.default.ZERO;\n    message.unbondingTime = object.unbondingTime !== undefined && object.unbondingTime !== null ? fromJsonTimestamp(object.unbondingTime) : undefined;\n    message.commission = object.commission !== undefined && object.commission !== null ? exports.Commission.fromJSON(object.commission) : undefined;\n    message.minSelfDelegation = object.minSelfDelegation !== undefined && object.minSelfDelegation !== null ? String(object.minSelfDelegation) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n    message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : undefined);\n    message.jailed !== undefined && (obj.jailed = message.jailed);\n    message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n    message.tokens !== undefined && (obj.tokens = message.tokens);\n    message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n    message.description !== undefined && (obj.description = message.description ? exports.Description.toJSON(message.description) : undefined);\n    message.unbondingHeight !== undefined && (obj.unbondingHeight = (message.unbondingHeight || long_1.default.ZERO).toString());\n    message.unbondingTime !== undefined && (obj.unbondingTime = fromTimestamp(message.unbondingTime).toISOString());\n    message.commission !== undefined && (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : undefined);\n    message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    const message = Object.assign({}, baseValidator);\n    message.operatorAddress = (_a = object.operatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.consensusPubkey = object.consensusPubkey !== undefined && object.consensusPubkey !== null ? any_1.Any.fromPartial(object.consensusPubkey) : undefined;\n    message.jailed = (_b = object.jailed) !== null && _b !== void 0 ? _b : false;\n    message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;\n    message.tokens = (_d = object.tokens) !== null && _d !== void 0 ? _d : \"\";\n    message.delegatorShares = (_e = object.delegatorShares) !== null && _e !== void 0 ? _e : \"\";\n    message.description = object.description !== undefined && object.description !== null ? exports.Description.fromPartial(object.description) : undefined;\n    message.unbondingHeight = object.unbondingHeight !== undefined && object.unbondingHeight !== null ? long_1.default.fromValue(object.unbondingHeight) : long_1.default.ZERO;\n    message.unbondingTime = object.unbondingTime !== undefined && object.unbondingTime !== null ? timestamp_1.Timestamp.fromPartial(object.unbondingTime) : undefined;\n    message.commission = object.commission !== undefined && object.commission !== null ? exports.Commission.fromPartial(object.commission) : undefined;\n    message.minSelfDelegation = (_f = object.minSelfDelegation) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nconst baseValAddresses = {\n  addresses: \"\"\n};\nexports.ValAddresses = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.addresses) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValAddresses);\n    message.addresses = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.addresses.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseValAddresses);\n    message.addresses = ((_a = object.addresses) !== null && _a !== void 0 ? _a : []).map(e => String(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.addresses) {\n      obj.addresses = message.addresses.map(e => e);\n    } else {\n      obj.addresses = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseValAddresses);\n    message.addresses = ((_a = object.addresses) === null || _a === void 0 ? void 0 : _a.map(e => e)) || [];\n    return message;\n  }\n};\nconst baseDVPair = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.DVPair = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVPair);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDVPair);\n    message.delegatorAddress = object.delegatorAddress !== undefined && object.delegatorAddress !== null ? String(object.delegatorAddress) : \"\";\n    message.validatorAddress = object.validatorAddress !== undefined && object.validatorAddress !== null ? String(object.validatorAddress) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseDVPair);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nconst baseDVPairs = {};\nexports.DVPairs = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.pairs) {\n      exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVPairs);\n    message.pairs = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseDVPairs);\n    message.pairs = ((_a = object.pairs) !== null && _a !== void 0 ? _a : []).map(e => exports.DVPair.fromJSON(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.pairs) {\n      obj.pairs = message.pairs.map(e => e ? exports.DVPair.toJSON(e) : undefined);\n    } else {\n      obj.pairs = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseDVPairs);\n    message.pairs = ((_a = object.pairs) === null || _a === void 0 ? void 0 : _a.map(e => exports.DVPair.fromPartial(e))) || [];\n    return message;\n  }\n};\nconst baseDVVTriplet = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexports.DVVTriplet = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVVTriplet);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDVVTriplet);\n    message.delegatorAddress = object.delegatorAddress !== undefined && object.delegatorAddress !== null ? String(object.delegatorAddress) : \"\";\n    message.validatorSrcAddress = object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null ? String(object.validatorSrcAddress) : \"\";\n    message.validatorDstAddress = object.validatorDstAddress !== undefined && object.validatorDstAddress !== null ? String(object.validatorDstAddress) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = Object.assign({}, baseDVVTriplet);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorSrcAddress = (_b = object.validatorSrcAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.validatorDstAddress = (_c = object.validatorDstAddress) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nconst baseDVVTriplets = {};\nexports.DVVTriplets = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.triplets) {\n      exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDVVTriplets);\n    message.triplets = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseDVVTriplets);\n    message.triplets = ((_a = object.triplets) !== null && _a !== void 0 ? _a : []).map(e => exports.DVVTriplet.fromJSON(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.triplets) {\n      obj.triplets = message.triplets.map(e => e ? exports.DVVTriplet.toJSON(e) : undefined);\n    } else {\n      obj.triplets = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseDVVTriplets);\n    message.triplets = ((_a = object.triplets) === null || _a === void 0 ? void 0 : _a.map(e => exports.DVVTriplet.fromPartial(e))) || [];\n    return message;\n  }\n};\nconst baseDelegation = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\",\n  shares: \"\"\n};\nexports.Delegation = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n    if (message.shares !== \"\") {\n      writer.uint32(26).string(message.shares);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDelegation);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n        case 3:\n          message.shares = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDelegation);\n    message.delegatorAddress = object.delegatorAddress !== undefined && object.delegatorAddress !== null ? String(object.delegatorAddress) : \"\";\n    message.validatorAddress = object.validatorAddress !== undefined && object.validatorAddress !== null ? String(object.validatorAddress) : \"\";\n    message.shares = object.shares !== undefined && object.shares !== null ? String(object.shares) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.shares !== undefined && (obj.shares = message.shares);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = Object.assign({}, baseDelegation);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.shares = (_c = object.shares) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nconst baseUnbondingDelegation = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexports.UnbondingDelegation = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n    for (const v of message.entries) {\n      exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseUnbondingDelegation);\n    message.entries = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n        case 3:\n          message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseUnbondingDelegation);\n    message.delegatorAddress = object.delegatorAddress !== undefined && object.delegatorAddress !== null ? String(object.delegatorAddress) : \"\";\n    message.validatorAddress = object.validatorAddress !== undefined && object.validatorAddress !== null ? String(object.validatorAddress) : \"\";\n    message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map(e => exports.UnbondingDelegationEntry.fromJSON(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.UnbondingDelegationEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = Object.assign({}, baseUnbondingDelegation);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.entries = ((_c = object.entries) === null || _c === void 0 ? void 0 : _c.map(e => exports.UnbondingDelegationEntry.fromPartial(e))) || [];\n    return message;\n  }\n};\nconst baseUnbondingDelegationEntry = {\n  creationHeight: long_1.default.ZERO,\n  initialBalance: \"\",\n  balance: \"\"\n};\nexports.UnbondingDelegationEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.creationHeight.isZero()) {\n      writer.uint32(8).int64(message.creationHeight);\n    }\n    if (message.completionTime !== undefined) {\n      timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.initialBalance !== \"\") {\n      writer.uint32(26).string(message.initialBalance);\n    }\n    if (message.balance !== \"\") {\n      writer.uint32(34).string(message.balance);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseUnbondingDelegationEntry);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creationHeight = reader.int64();\n          break;\n        case 2:\n          message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.initialBalance = reader.string();\n          break;\n        case 4:\n          message.balance = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseUnbondingDelegationEntry);\n    message.creationHeight = object.creationHeight !== undefined && object.creationHeight !== null ? long_1.default.fromString(object.creationHeight) : long_1.default.ZERO;\n    message.completionTime = object.completionTime !== undefined && object.completionTime !== null ? fromJsonTimestamp(object.completionTime) : undefined;\n    message.initialBalance = object.initialBalance !== undefined && object.initialBalance !== null ? String(object.initialBalance) : \"\";\n    message.balance = object.balance !== undefined && object.balance !== null ? String(object.balance) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.creationHeight !== undefined && (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n    message.completionTime !== undefined && (obj.completionTime = fromTimestamp(message.completionTime).toISOString());\n    message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n    message.balance !== undefined && (obj.balance = message.balance);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseUnbondingDelegationEntry);\n    message.creationHeight = object.creationHeight !== undefined && object.creationHeight !== null ? long_1.default.fromValue(object.creationHeight) : long_1.default.ZERO;\n    message.completionTime = object.completionTime !== undefined && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : undefined;\n    message.initialBalance = (_a = object.initialBalance) !== null && _a !== void 0 ? _a : \"\";\n    message.balance = (_b = object.balance) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nconst baseRedelegationEntry = {\n  creationHeight: long_1.default.ZERO,\n  initialBalance: \"\",\n  sharesDst: \"\"\n};\nexports.RedelegationEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.creationHeight.isZero()) {\n      writer.uint32(8).int64(message.creationHeight);\n    }\n    if (message.completionTime !== undefined) {\n      timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.initialBalance !== \"\") {\n      writer.uint32(26).string(message.initialBalance);\n    }\n    if (message.sharesDst !== \"\") {\n      writer.uint32(34).string(message.sharesDst);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegationEntry);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creationHeight = reader.int64();\n          break;\n        case 2:\n          message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.initialBalance = reader.string();\n          break;\n        case 4:\n          message.sharesDst = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseRedelegationEntry);\n    message.creationHeight = object.creationHeight !== undefined && object.creationHeight !== null ? long_1.default.fromString(object.creationHeight) : long_1.default.ZERO;\n    message.completionTime = object.completionTime !== undefined && object.completionTime !== null ? fromJsonTimestamp(object.completionTime) : undefined;\n    message.initialBalance = object.initialBalance !== undefined && object.initialBalance !== null ? String(object.initialBalance) : \"\";\n    message.sharesDst = object.sharesDst !== undefined && object.sharesDst !== null ? String(object.sharesDst) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.creationHeight !== undefined && (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n    message.completionTime !== undefined && (obj.completionTime = fromTimestamp(message.completionTime).toISOString());\n    message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n    message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseRedelegationEntry);\n    message.creationHeight = object.creationHeight !== undefined && object.creationHeight !== null ? long_1.default.fromValue(object.creationHeight) : long_1.default.ZERO;\n    message.completionTime = object.completionTime !== undefined && object.completionTime !== null ? timestamp_1.Timestamp.fromPartial(object.completionTime) : undefined;\n    message.initialBalance = (_a = object.initialBalance) !== null && _a !== void 0 ? _a : \"\";\n    message.sharesDst = (_b = object.sharesDst) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nconst baseRedelegation = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexports.Redelegation = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n    for (const v of message.entries) {\n      exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegation);\n    message.entries = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n        case 4:\n          message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseRedelegation);\n    message.delegatorAddress = object.delegatorAddress !== undefined && object.delegatorAddress !== null ? String(object.delegatorAddress) : \"\";\n    message.validatorSrcAddress = object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null ? String(object.validatorSrcAddress) : \"\";\n    message.validatorDstAddress = object.validatorDstAddress !== undefined && object.validatorDstAddress !== null ? String(object.validatorDstAddress) : \"\";\n    message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map(e => exports.RedelegationEntry.fromJSON(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.RedelegationEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d;\n    const message = Object.assign({}, baseRedelegation);\n    message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n    message.validatorSrcAddress = (_b = object.validatorSrcAddress) !== null && _b !== void 0 ? _b : \"\";\n    message.validatorDstAddress = (_c = object.validatorDstAddress) !== null && _c !== void 0 ? _c : \"\";\n    message.entries = ((_d = object.entries) === null || _d === void 0 ? void 0 : _d.map(e => exports.RedelegationEntry.fromPartial(e))) || [];\n    return message;\n  }\n};\nconst baseParams = {\n  maxValidators: 0,\n  maxEntries: 0,\n  historicalEntries: 0,\n  bondDenom: \"\"\n};\nexports.Params = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.unbondingTime !== undefined) {\n      duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.maxValidators !== 0) {\n      writer.uint32(16).uint32(message.maxValidators);\n    }\n    if (message.maxEntries !== 0) {\n      writer.uint32(24).uint32(message.maxEntries);\n    }\n    if (message.historicalEntries !== 0) {\n      writer.uint32(32).uint32(message.historicalEntries);\n    }\n    if (message.bondDenom !== \"\") {\n      writer.uint32(42).string(message.bondDenom);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseParams);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.maxValidators = reader.uint32();\n          break;\n        case 3:\n          message.maxEntries = reader.uint32();\n          break;\n        case 4:\n          message.historicalEntries = reader.uint32();\n          break;\n        case 5:\n          message.bondDenom = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseParams);\n    message.unbondingTime = object.unbondingTime !== undefined && object.unbondingTime !== null ? duration_1.Duration.fromJSON(object.unbondingTime) : undefined;\n    message.maxValidators = object.maxValidators !== undefined && object.maxValidators !== null ? Number(object.maxValidators) : 0;\n    message.maxEntries = object.maxEntries !== undefined && object.maxEntries !== null ? Number(object.maxEntries) : 0;\n    message.historicalEntries = object.historicalEntries !== undefined && object.historicalEntries !== null ? Number(object.historicalEntries) : 0;\n    message.bondDenom = object.bondDenom !== undefined && object.bondDenom !== null ? String(object.bondDenom) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : undefined);\n    message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n    message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n    message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n    message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d;\n    const message = Object.assign({}, baseParams);\n    message.unbondingTime = object.unbondingTime !== undefined && object.unbondingTime !== null ? duration_1.Duration.fromPartial(object.unbondingTime) : undefined;\n    message.maxValidators = (_a = object.maxValidators) !== null && _a !== void 0 ? _a : 0;\n    message.maxEntries = (_b = object.maxEntries) !== null && _b !== void 0 ? _b : 0;\n    message.historicalEntries = (_c = object.historicalEntries) !== null && _c !== void 0 ? _c : 0;\n    message.bondDenom = (_d = object.bondDenom) !== null && _d !== void 0 ? _d : \"\";\n    return message;\n  }\n};\nconst baseDelegationResponse = {};\nexports.DelegationResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.delegation !== undefined) {\n      exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.balance !== undefined) {\n      coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDelegationResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.delegation = exports.Delegation.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.balance = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDelegationResponse);\n    message.delegation = object.delegation !== undefined && object.delegation !== null ? exports.Delegation.fromJSON(object.delegation) : undefined;\n    message.balance = object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromJSON(object.balance) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.delegation !== undefined && (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : undefined);\n    message.balance !== undefined && (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseDelegationResponse);\n    message.delegation = object.delegation !== undefined && object.delegation !== null ? exports.Delegation.fromPartial(object.delegation) : undefined;\n    message.balance = object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : undefined;\n    return message;\n  }\n};\nconst baseRedelegationEntryResponse = {\n  balance: \"\"\n};\nexports.RedelegationEntryResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.redelegationEntry !== undefined) {\n      exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.balance !== \"\") {\n      writer.uint32(34).string(message.balance);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegationEntryResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.balance = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseRedelegationEntryResponse);\n    message.redelegationEntry = object.redelegationEntry !== undefined && object.redelegationEntry !== null ? exports.RedelegationEntry.fromJSON(object.redelegationEntry) : undefined;\n    message.balance = object.balance !== undefined && object.balance !== null ? String(object.balance) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.redelegationEntry !== undefined && (obj.redelegationEntry = message.redelegationEntry ? exports.RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n    message.balance !== undefined && (obj.balance = message.balance);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseRedelegationEntryResponse);\n    message.redelegationEntry = object.redelegationEntry !== undefined && object.redelegationEntry !== null ? exports.RedelegationEntry.fromPartial(object.redelegationEntry) : undefined;\n    message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nconst baseRedelegationResponse = {};\nexports.RedelegationResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.redelegation !== undefined) {\n      exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.entries) {\n      exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseRedelegationResponse);\n    message.entries = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.redelegation = exports.Redelegation.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseRedelegationResponse);\n    message.redelegation = object.redelegation !== undefined && object.redelegation !== null ? exports.Redelegation.fromJSON(object.redelegation) : undefined;\n    message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map(e => exports.RedelegationEntryResponse.fromJSON(e));\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.redelegation !== undefined && (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : undefined);\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.RedelegationEntryResponse.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseRedelegationResponse);\n    message.redelegation = object.redelegation !== undefined && object.redelegation !== null ? exports.Redelegation.fromPartial(object.redelegation) : undefined;\n    message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(e => exports.RedelegationEntryResponse.fromPartial(e))) || [];\n    return message;\n  }\n};\nconst basePool = {\n  notBondedTokens: \"\",\n  bondedTokens: \"\"\n};\nexports.Pool = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.notBondedTokens !== \"\") {\n      writer.uint32(10).string(message.notBondedTokens);\n    }\n    if (message.bondedTokens !== \"\") {\n      writer.uint32(18).string(message.bondedTokens);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePool);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.notBondedTokens = reader.string();\n          break;\n        case 2:\n          message.bondedTokens = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePool);\n    message.notBondedTokens = object.notBondedTokens !== undefined && object.notBondedTokens !== null ? String(object.notBondedTokens) : \"\";\n    message.bondedTokens = object.bondedTokens !== undefined && object.bondedTokens !== null ? String(object.bondedTokens) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n    message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, basePool);\n    message.notBondedTokens = (_a = object.notBondedTokens) !== null && _a !== void 0 ? _a : \"\";\n    message.bondedTokens = (_b = object.bondedTokens) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nfunction toTimestamp(date) {\n  const seconds = numberToLong(date.getTime() / 1000);\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\nfunction fromTimestamp(t) {\n  let millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === \"string\") {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/cosmos/staking/v1beta1/staking.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pool = exports.RedelegationResponse = exports.RedelegationEntryResponse = exports.DelegationResponse = exports.Params = exports.Redelegation = exports.RedelegationEntry = exports.UnbondingDelegationEntry = exports.UnbondingDelegation = exports.Delegation = exports.DVVTriplets = exports.DVVTriplet = exports.DVPairs = exports.DVPair = exports.ValAddresses = exports.Validator = exports.Description = exports.Commission = exports.CommissionRates = exports.HistoricalInfo = exports.bondStatusToJSON = exports.bondStatusFromJSON = exports.BondStatus = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst types_1 = require(\"../../../tendermint/types/types\");\nconst timestamp_1 = require(\"../../../google/protobuf/timestamp\");\nconst any_1 = require(\"../../../google/protobuf/any\");\nconst duration_1 = require(\"../../../google/protobuf/duration\");\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nvar BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));\nfunction bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexports.bondStatusFromJSON = bondStatusFromJSON;\nfunction bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.bondStatusToJSON = bondStatusToJSON;\nconst baseHistoricalInfo = {};\nexports.HistoricalInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.header !== undefined) {\n            types_1.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            exports.Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHistoricalInfo);\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = types_1.Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(exports.Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseHistoricalInfo);\n        message.header =\n            object.header !== undefined && object.header !== null ? types_1.Header.fromJSON(object.header) : undefined;\n        message.valset = ((_a = object.valset) !== null && _a !== void 0 ? _a : []).map((e) => exports.Validator.fromJSON(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? exports.Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseHistoricalInfo);\n        message.header =\n            object.header !== undefined && object.header !== null ? types_1.Header.fromPartial(object.header) : undefined;\n        message.valset = ((_a = object.valset) === null || _a === void 0 ? void 0 : _a.map((e) => exports.Validator.fromPartial(e))) || [];\n        return message;\n    },\n};\nconst baseCommissionRates = { rate: \"\", maxRate: \"\", maxChangeRate: \"\" };\nexports.CommissionRates = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCommissionRates);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCommissionRates);\n        message.rate = object.rate !== undefined && object.rate !== null ? String(object.rate) : \"\";\n        message.maxRate = object.maxRate !== undefined && object.maxRate !== null ? String(object.maxRate) : \"\";\n        message.maxChangeRate =\n            object.maxChangeRate !== undefined && object.maxChangeRate !== null ? String(object.maxChangeRate) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseCommissionRates);\n        message.rate = (_a = object.rate) !== null && _a !== void 0 ? _a : \"\";\n        message.maxRate = (_b = object.maxRate) !== null && _b !== void 0 ? _b : \"\";\n        message.maxChangeRate = (_c = object.maxChangeRate) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nconst baseCommission = {};\nexports.Commission = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            exports.CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.updateTime, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCommission);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = exports.CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCommission);\n        message.commissionRates =\n            object.commissionRates !== undefined && object.commissionRates !== null\n                ? exports.CommissionRates.fromJSON(object.commissionRates)\n                : undefined;\n        message.updateTime =\n            object.updateTime !== undefined && object.updateTime !== null\n                ? fromJsonTimestamp(object.updateTime)\n                : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? exports.CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined && (obj.updateTime = fromTimestamp(message.updateTime).toISOString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCommission);\n        message.commissionRates =\n            object.commissionRates !== undefined && object.commissionRates !== null\n                ? exports.CommissionRates.fromPartial(object.commissionRates)\n                : undefined;\n        message.updateTime =\n            object.updateTime !== undefined && object.updateTime !== null\n                ? timestamp_1.Timestamp.fromPartial(object.updateTime)\n                : undefined;\n        return message;\n    },\n};\nconst baseDescription = { moniker: \"\", identity: \"\", website: \"\", securityContact: \"\", details: \"\" };\nexports.Description = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDescription);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDescription);\n        message.moniker = object.moniker !== undefined && object.moniker !== null ? String(object.moniker) : \"\";\n        message.identity =\n            object.identity !== undefined && object.identity !== null ? String(object.identity) : \"\";\n        message.website = object.website !== undefined && object.website !== null ? String(object.website) : \"\";\n        message.securityContact =\n            object.securityContact !== undefined && object.securityContact !== null\n                ? String(object.securityContact)\n                : \"\";\n        message.details = object.details !== undefined && object.details !== null ? String(object.details) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = Object.assign({}, baseDescription);\n        message.moniker = (_a = object.moniker) !== null && _a !== void 0 ? _a : \"\";\n        message.identity = (_b = object.identity) !== null && _b !== void 0 ? _b : \"\";\n        message.website = (_c = object.website) !== null && _c !== void 0 ? _c : \"\";\n        message.securityContact = (_d = object.securityContact) !== null && _d !== void 0 ? _d : \"\";\n        message.details = (_e = object.details) !== null && _e !== void 0 ? _e : \"\";\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: long_1.default.ZERO,\n    minSelfDelegation: \"\",\n};\nexports.Validator = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            any_1.Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            exports.Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (!message.unbondingHeight.isZero()) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.unbondingTime, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            exports.Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidator);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = exports.Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = reader.int64();\n                    break;\n                case 9:\n                    message.unbondingTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.commission = exports.Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidator);\n        message.operatorAddress =\n            object.operatorAddress !== undefined && object.operatorAddress !== null\n                ? String(object.operatorAddress)\n                : \"\";\n        message.consensusPubkey =\n            object.consensusPubkey !== undefined && object.consensusPubkey !== null\n                ? any_1.Any.fromJSON(object.consensusPubkey)\n                : undefined;\n        message.jailed = object.jailed !== undefined && object.jailed !== null ? Boolean(object.jailed) : false;\n        message.status =\n            object.status !== undefined && object.status !== null ? bondStatusFromJSON(object.status) : 0;\n        message.tokens = object.tokens !== undefined && object.tokens !== null ? String(object.tokens) : \"\";\n        message.delegatorShares =\n            object.delegatorShares !== undefined && object.delegatorShares !== null\n                ? String(object.delegatorShares)\n                : \"\";\n        message.description =\n            object.description !== undefined && object.description !== null\n                ? exports.Description.fromJSON(object.description)\n                : undefined;\n        message.unbondingHeight =\n            object.unbondingHeight !== undefined && object.unbondingHeight !== null\n                ? long_1.default.fromString(object.unbondingHeight)\n                : long_1.default.ZERO;\n        message.unbondingTime =\n            object.unbondingTime !== undefined && object.unbondingTime !== null\n                ? fromJsonTimestamp(object.unbondingTime)\n                : undefined;\n        message.commission =\n            object.commission !== undefined && object.commission !== null\n                ? exports.Commission.fromJSON(object.commission)\n                : undefined;\n        message.minSelfDelegation =\n            object.minSelfDelegation !== undefined && object.minSelfDelegation !== null\n                ? String(object.minSelfDelegation)\n                : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey ? any_1.Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description ? exports.Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = (message.unbondingHeight || long_1.default.ZERO).toString());\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = fromTimestamp(message.unbondingTime).toISOString());\n        message.commission !== undefined &&\n            (obj.commission = message.commission ? exports.Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = Object.assign({}, baseValidator);\n        message.operatorAddress = (_a = object.operatorAddress) !== null && _a !== void 0 ? _a : \"\";\n        message.consensusPubkey =\n            object.consensusPubkey !== undefined && object.consensusPubkey !== null\n                ? any_1.Any.fromPartial(object.consensusPubkey)\n                : undefined;\n        message.jailed = (_b = object.jailed) !== null && _b !== void 0 ? _b : false;\n        message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;\n        message.tokens = (_d = object.tokens) !== null && _d !== void 0 ? _d : \"\";\n        message.delegatorShares = (_e = object.delegatorShares) !== null && _e !== void 0 ? _e : \"\";\n        message.description =\n            object.description !== undefined && object.description !== null\n                ? exports.Description.fromPartial(object.description)\n                : undefined;\n        message.unbondingHeight =\n            object.unbondingHeight !== undefined && object.unbondingHeight !== null\n                ? long_1.default.fromValue(object.unbondingHeight)\n                : long_1.default.ZERO;\n        message.unbondingTime =\n            object.unbondingTime !== undefined && object.unbondingTime !== null\n                ? timestamp_1.Timestamp.fromPartial(object.unbondingTime)\n                : undefined;\n        message.commission =\n            object.commission !== undefined && object.commission !== null\n                ? exports.Commission.fromPartial(object.commission)\n                : undefined;\n        message.minSelfDelegation = (_f = object.minSelfDelegation) !== null && _f !== void 0 ? _f : \"\";\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexports.ValAddresses = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValAddresses);\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseValAddresses);\n        message.addresses = ((_a = object.addresses) !== null && _a !== void 0 ? _a : []).map((e) => String(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseValAddresses);\n        message.addresses = ((_a = object.addresses) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexports.DVPair = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVPair);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDVPair);\n        message.delegatorAddress =\n            object.delegatorAddress !== undefined && object.delegatorAddress !== null\n                ? String(object.delegatorAddress)\n                : \"\";\n        message.validatorAddress =\n            object.validatorAddress !== undefined && object.validatorAddress !== null\n                ? String(object.validatorAddress)\n                : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseDVPair);\n        message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n        message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexports.DVPairs = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.pairs) {\n            exports.DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVPairs);\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(exports.DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseDVPairs);\n        message.pairs = ((_a = object.pairs) !== null && _a !== void 0 ? _a : []).map((e) => exports.DVPair.fromJSON(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? exports.DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseDVPairs);\n        message.pairs = ((_a = object.pairs) === null || _a === void 0 ? void 0 : _a.map((e) => exports.DVPair.fromPartial(e))) || [];\n        return message;\n    },\n};\nconst baseDVVTriplet = { delegatorAddress: \"\", validatorSrcAddress: \"\", validatorDstAddress: \"\" };\nexports.DVVTriplet = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVVTriplet);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDVVTriplet);\n        message.delegatorAddress =\n            object.delegatorAddress !== undefined && object.delegatorAddress !== null\n                ? String(object.delegatorAddress)\n                : \"\";\n        message.validatorSrcAddress =\n            object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null\n                ? String(object.validatorSrcAddress)\n                : \"\";\n        message.validatorDstAddress =\n            object.validatorDstAddress !== undefined && object.validatorDstAddress !== null\n                ? String(object.validatorDstAddress)\n                : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseDVVTriplet);\n        message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n        message.validatorSrcAddress = (_b = object.validatorSrcAddress) !== null && _b !== void 0 ? _b : \"\";\n        message.validatorDstAddress = (_c = object.validatorDstAddress) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexports.DVVTriplets = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.triplets) {\n            exports.DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDVVTriplets);\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(exports.DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseDVVTriplets);\n        message.triplets = ((_a = object.triplets) !== null && _a !== void 0 ? _a : []).map((e) => exports.DVVTriplet.fromJSON(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? exports.DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseDVVTriplets);\n        message.triplets = ((_a = object.triplets) === null || _a === void 0 ? void 0 : _a.map((e) => exports.DVVTriplet.fromPartial(e))) || [];\n        return message;\n    },\n};\nconst baseDelegation = { delegatorAddress: \"\", validatorAddress: \"\", shares: \"\" };\nexports.Delegation = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDelegation);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDelegation);\n        message.delegatorAddress =\n            object.delegatorAddress !== undefined && object.delegatorAddress !== null\n                ? String(object.delegatorAddress)\n                : \"\";\n        message.validatorAddress =\n            object.validatorAddress !== undefined && object.validatorAddress !== null\n                ? String(object.validatorAddress)\n                : \"\";\n        message.shares = object.shares !== undefined && object.shares !== null ? String(object.shares) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseDelegation);\n        message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n        message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n        message.shares = (_c = object.shares) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nconst baseUnbondingDelegation = { delegatorAddress: \"\", validatorAddress: \"\" };\nexports.UnbondingDelegation = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            exports.UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseUnbondingDelegation);\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(exports.UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseUnbondingDelegation);\n        message.delegatorAddress =\n            object.delegatorAddress !== undefined && object.delegatorAddress !== null\n                ? String(object.delegatorAddress)\n                : \"\";\n        message.validatorAddress =\n            object.validatorAddress !== undefined && object.validatorAddress !== null\n                ? String(object.validatorAddress)\n                : \"\";\n        message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map((e) => exports.UnbondingDelegationEntry.fromJSON(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = Object.assign({}, baseUnbondingDelegation);\n        message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n        message.validatorAddress = (_b = object.validatorAddress) !== null && _b !== void 0 ? _b : \"\";\n        message.entries = ((_c = object.entries) === null || _c === void 0 ? void 0 : _c.map((e) => exports.UnbondingDelegationEntry.fromPartial(e))) || [];\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = { creationHeight: long_1.default.ZERO, initialBalance: \"\", balance: \"\" };\nexports.UnbondingDelegationEntry = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.creationHeight.isZero()) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseUnbondingDelegationEntry);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = reader.int64();\n                    break;\n                case 2:\n                    message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseUnbondingDelegationEntry);\n        message.creationHeight =\n            object.creationHeight !== undefined && object.creationHeight !== null\n                ? long_1.default.fromString(object.creationHeight)\n                : long_1.default.ZERO;\n        message.completionTime =\n            object.completionTime !== undefined && object.completionTime !== null\n                ? fromJsonTimestamp(object.completionTime)\n                : undefined;\n        message.initialBalance =\n            object.initialBalance !== undefined && object.initialBalance !== null\n                ? String(object.initialBalance)\n                : \"\";\n        message.balance = object.balance !== undefined && object.balance !== null ? String(object.balance) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n        message.completionTime !== undefined &&\n            (obj.completionTime = fromTimestamp(message.completionTime).toISOString());\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseUnbondingDelegationEntry);\n        message.creationHeight =\n            object.creationHeight !== undefined && object.creationHeight !== null\n                ? long_1.default.fromValue(object.creationHeight)\n                : long_1.default.ZERO;\n        message.completionTime =\n            object.completionTime !== undefined && object.completionTime !== null\n                ? timestamp_1.Timestamp.fromPartial(object.completionTime)\n                : undefined;\n        message.initialBalance = (_a = object.initialBalance) !== null && _a !== void 0 ? _a : \"\";\n        message.balance = (_b = object.balance) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nconst baseRedelegationEntry = { creationHeight: long_1.default.ZERO, initialBalance: \"\", sharesDst: \"\" };\nexports.RedelegationEntry = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.creationHeight.isZero()) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            timestamp_1.Timestamp.encode(message.completionTime, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegationEntry);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = reader.int64();\n                    break;\n                case 2:\n                    message.completionTime = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRedelegationEntry);\n        message.creationHeight =\n            object.creationHeight !== undefined && object.creationHeight !== null\n                ? long_1.default.fromString(object.creationHeight)\n                : long_1.default.ZERO;\n        message.completionTime =\n            object.completionTime !== undefined && object.completionTime !== null\n                ? fromJsonTimestamp(object.completionTime)\n                : undefined;\n        message.initialBalance =\n            object.initialBalance !== undefined && object.initialBalance !== null\n                ? String(object.initialBalance)\n                : \"\";\n        message.sharesDst =\n            object.sharesDst !== undefined && object.sharesDst !== null ? String(object.sharesDst) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = (message.creationHeight || long_1.default.ZERO).toString());\n        message.completionTime !== undefined &&\n            (obj.completionTime = fromTimestamp(message.completionTime).toISOString());\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, baseRedelegationEntry);\n        message.creationHeight =\n            object.creationHeight !== undefined && object.creationHeight !== null\n                ? long_1.default.fromValue(object.creationHeight)\n                : long_1.default.ZERO;\n        message.completionTime =\n            object.completionTime !== undefined && object.completionTime !== null\n                ? timestamp_1.Timestamp.fromPartial(object.completionTime)\n                : undefined;\n        message.initialBalance = (_a = object.initialBalance) !== null && _a !== void 0 ? _a : \"\";\n        message.sharesDst = (_b = object.sharesDst) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nconst baseRedelegation = { delegatorAddress: \"\", validatorSrcAddress: \"\", validatorDstAddress: \"\" };\nexports.Redelegation = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            exports.RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegation);\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(exports.RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseRedelegation);\n        message.delegatorAddress =\n            object.delegatorAddress !== undefined && object.delegatorAddress !== null\n                ? String(object.delegatorAddress)\n                : \"\";\n        message.validatorSrcAddress =\n            object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null\n                ? String(object.validatorSrcAddress)\n                : \"\";\n        message.validatorDstAddress =\n            object.validatorDstAddress !== undefined && object.validatorDstAddress !== null\n                ? String(object.validatorDstAddress)\n                : \"\";\n        message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map((e) => exports.RedelegationEntry.fromJSON(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = Object.assign({}, baseRedelegation);\n        message.delegatorAddress = (_a = object.delegatorAddress) !== null && _a !== void 0 ? _a : \"\";\n        message.validatorSrcAddress = (_b = object.validatorSrcAddress) !== null && _b !== void 0 ? _b : \"\";\n        message.validatorDstAddress = (_c = object.validatorDstAddress) !== null && _c !== void 0 ? _c : \"\";\n        message.entries = ((_d = object.entries) === null || _d === void 0 ? void 0 : _d.map((e) => exports.RedelegationEntry.fromPartial(e))) || [];\n        return message;\n    },\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: \"\" };\nexports.Params = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            duration_1.Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseParams);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = duration_1.Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseParams);\n        message.unbondingTime =\n            object.unbondingTime !== undefined && object.unbondingTime !== null\n                ? duration_1.Duration.fromJSON(object.unbondingTime)\n                : undefined;\n        message.maxValidators =\n            object.maxValidators !== undefined && object.maxValidators !== null ? Number(object.maxValidators) : 0;\n        message.maxEntries =\n            object.maxEntries !== undefined && object.maxEntries !== null ? Number(object.maxEntries) : 0;\n        message.historicalEntries =\n            object.historicalEntries !== undefined && object.historicalEntries !== null\n                ? Number(object.historicalEntries)\n                : 0;\n        message.bondDenom =\n            object.bondDenom !== undefined && object.bondDenom !== null ? String(object.bondDenom) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime ? duration_1.Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = Object.assign({}, baseParams);\n        message.unbondingTime =\n            object.unbondingTime !== undefined && object.unbondingTime !== null\n                ? duration_1.Duration.fromPartial(object.unbondingTime)\n                : undefined;\n        message.maxValidators = (_a = object.maxValidators) !== null && _a !== void 0 ? _a : 0;\n        message.maxEntries = (_b = object.maxEntries) !== null && _b !== void 0 ? _b : 0;\n        message.historicalEntries = (_c = object.historicalEntries) !== null && _c !== void 0 ? _c : 0;\n        message.bondDenom = (_d = object.bondDenom) !== null && _d !== void 0 ? _d : \"\";\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexports.DelegationResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.delegation !== undefined) {\n            exports.Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            coin_1.Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDelegationResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = exports.Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = coin_1.Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDelegationResponse);\n        message.delegation =\n            object.delegation !== undefined && object.delegation !== null\n                ? exports.Delegation.fromJSON(object.delegation)\n                : undefined;\n        message.balance =\n            object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromJSON(object.balance) : undefined;\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation ? exports.Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? coin_1.Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDelegationResponse);\n        message.delegation =\n            object.delegation !== undefined && object.delegation !== null\n                ? exports.Delegation.fromPartial(object.delegation)\n                : undefined;\n        message.balance =\n            object.balance !== undefined && object.balance !== null ? coin_1.Coin.fromPartial(object.balance) : undefined;\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexports.RedelegationEntryResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            exports.RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegationEntryResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = exports.RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRedelegationEntryResponse);\n        message.redelegationEntry =\n            object.redelegationEntry !== undefined && object.redelegationEntry !== null\n                ? exports.RedelegationEntry.fromJSON(object.redelegationEntry)\n                : undefined;\n        message.balance = object.balance !== undefined && object.balance !== null ? String(object.balance) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? exports.RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseRedelegationEntryResponse);\n        message.redelegationEntry =\n            object.redelegationEntry !== undefined && object.redelegationEntry !== null\n                ? exports.RedelegationEntry.fromPartial(object.redelegationEntry)\n                : undefined;\n        message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexports.RedelegationResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.redelegation !== undefined) {\n            exports.Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            exports.RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRedelegationResponse);\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = exports.Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(exports.RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        var _a;\n        const message = Object.assign({}, baseRedelegationResponse);\n        message.redelegation =\n            object.redelegation !== undefined && object.redelegation !== null\n                ? exports.Redelegation.fromJSON(object.redelegation)\n                : undefined;\n        message.entries = ((_a = object.entries) !== null && _a !== void 0 ? _a : []).map((e) => exports.RedelegationEntryResponse.fromJSON(e));\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation ? exports.Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? exports.RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        var _a;\n        const message = Object.assign({}, baseRedelegationResponse);\n        message.redelegation =\n            object.redelegation !== undefined && object.redelegation !== null\n                ? exports.Redelegation.fromPartial(object.redelegation)\n                : undefined;\n        message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map((e) => exports.RedelegationEntryResponse.fromPartial(e))) || [];\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexports.Pool = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePool);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePool);\n        message.notBondedTokens =\n            object.notBondedTokens !== undefined && object.notBondedTokens !== null\n                ? String(object.notBondedTokens)\n                : \"\";\n        message.bondedTokens =\n            object.bondedTokens !== undefined && object.bondedTokens !== null ? String(object.bondedTokens) : \"\";\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = Object.assign({}, basePool);\n        message.notBondedTokens = (_a = object.notBondedTokens) !== null && _a !== void 0 ? _a : \"\";\n        message.bondedTokens = (_b = object.bondedTokens) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds.toNumber() * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return toTimestamp(o);\n    }\n    else if (typeof o === \"string\") {\n        return toTimestamp(new Date(o));\n    }\n    else {\n        return timestamp_1.Timestamp.fromJSON(o);\n    }\n}\nfunction numberToLong(number) {\n    return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=staking.js.map"]},"metadata":{},"sourceType":"script"}