{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ConfigStore_map;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigStore = void 0;\nconst __1 = require(\"..\");\nclass ConfigStore {\n  constructor(source) {\n    _ConfigStore_map.set(this, new Map());\n    this.getString = key => {\n      let ex = __classPrivateFieldGet(this, _ConfigStore_map, \"f\").get(key);\n      if (!ex) {\n        throw Error('Unable to find key ' + key);\n      }\n      return ex;\n    };\n    this.getBuffer = key => {\n      return Buffer.from(this.getString(key), 'hex');\n    };\n    this.getAddress = key => {\n      return __1.Address.parseFriendly(this.getString(key)).address;\n    };\n    this.getInt = key => {\n      return parseInt(this.getString(key));\n    };\n    this.setBuffer = (key, value) => {\n      this.setString(key, value.toString('hex'));\n    };\n    this.setAddress = (key, address) => {\n      this.setString(key, address.toFriendly());\n    };\n    if (source) {\n      let parts = source.split(',');\n      for (let p of parts) {\n        let pp = p.split('=');\n        if (pp.length !== 2) {\n          throw Error('Mailformed input');\n        }\n        if (__classPrivateFieldGet(this, _ConfigStore_map, \"f\").has(pp[0])) {\n          throw Error('Mailformed input');\n        }\n        __classPrivateFieldGet(this, _ConfigStore_map, \"f\").set(pp[0], pp[1]);\n      }\n    }\n  }\n  setString(key, value) {\n    if (key.indexOf('=') >= 0 || key.indexOf(',') >= 0) {\n      throw Error('Mailformed input');\n    }\n    if (value.indexOf('=') >= 0 || value.indexOf(',') >= 0) {\n      throw Error('Mailformed input');\n    }\n    __classPrivateFieldGet(this, _ConfigStore_map, \"f\").set(key, value);\n  }\n  setInt(key, value) {\n    this.setString(key, value.toString(10));\n  }\n  save() {\n    let res = '';\n    for (let e of __classPrivateFieldGet(this, _ConfigStore_map, \"f\")) {\n      if (res !== '') {\n        res += ',';\n      }\n      res += e[0] + '=' + e[1];\n    }\n    return res;\n  }\n}\nexports.ConfigStore = ConfigStore;\n_ConfigStore_map = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_ConfigStore_map","Object","defineProperty","exports","ConfigStore","__1","require","constructor","source","set","Map","getString","key","ex","Error","getBuffer","Buffer","from","getAddress","Address","parseFriendly","address","getInt","parseInt","setBuffer","setString","toString","setAddress","toFriendly","parts","split","p","pp","length","indexOf","setInt","save","res","e","WeakMap"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/utils/ConfigStore.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ConfigStore_map;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigStore = void 0;\nconst __1 = require(\"..\");\nclass ConfigStore {\n    constructor(source) {\n        _ConfigStore_map.set(this, new Map());\n        this.getString = (key) => {\n            let ex = __classPrivateFieldGet(this, _ConfigStore_map, \"f\").get(key);\n            if (!ex) {\n                throw Error('Unable to find key ' + key);\n            }\n            return ex;\n        };\n        this.getBuffer = (key) => {\n            return Buffer.from(this.getString(key), 'hex');\n        };\n        this.getAddress = (key) => {\n            return __1.Address.parseFriendly(this.getString(key)).address;\n        };\n        this.getInt = (key) => {\n            return parseInt(this.getString(key));\n        };\n        this.setBuffer = (key, value) => {\n            this.setString(key, value.toString('hex'));\n        };\n        this.setAddress = (key, address) => {\n            this.setString(key, address.toFriendly());\n        };\n        if (source) {\n            let parts = source.split(',');\n            for (let p of parts) {\n                let pp = p.split('=');\n                if (pp.length !== 2) {\n                    throw Error('Mailformed input');\n                }\n                if (__classPrivateFieldGet(this, _ConfigStore_map, \"f\").has(pp[0])) {\n                    throw Error('Mailformed input');\n                }\n                __classPrivateFieldGet(this, _ConfigStore_map, \"f\").set(pp[0], pp[1]);\n            }\n        }\n    }\n    setString(key, value) {\n        if (key.indexOf('=') >= 0 || key.indexOf(',') >= 0) {\n            throw Error('Mailformed input');\n        }\n        if (value.indexOf('=') >= 0 || value.indexOf(',') >= 0) {\n            throw Error('Mailformed input');\n        }\n        __classPrivateFieldGet(this, _ConfigStore_map, \"f\").set(key, value);\n    }\n    setInt(key, value) {\n        this.setString(key, value.toString(10));\n    }\n    save() {\n        let res = '';\n        for (let e of __classPrivateFieldGet(this, _ConfigStore_map, \"f\")) {\n            if (res !== '') {\n                res += ',';\n            }\n            res += e[0] + '=' + e[1];\n        }\n        return res;\n    }\n}\nexports.ConfigStore = ConfigStore;\n_ConfigStore_map = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}