{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeSignDoc = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nvar encoding_1 = require(\"@cosmjs/encoding\");\nvar math_1 = require(\"@cosmjs/math\");\nfunction sortedObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(sortedObject);\n  }\n  var sortedKeys = Object.keys(obj).sort();\n  var result = {};\n  // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n  sortedKeys.forEach(function (key) {\n    result[key] = sortedObject(obj[key]);\n  });\n  return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n  return JSON.stringify(sortedObject(obj));\n}\nexports.sortedJsonStringify = sortedJsonStringify;\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {\n  return {\n    chain_id: chainId,\n    account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n    sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n    fee: fee,\n    msgs: msgs,\n    memo: memo || \"\"\n  };\n}\nexports.makeSignDoc = makeSignDoc;\nfunction serializeSignDoc(signDoc) {\n  return (0, encoding_1.toUtf8)(sortedJsonStringify(signDoc));\n}\nexports.serializeSignDoc = serializeSignDoc;","map":{"version":3,"sources":["../src/signdoc.ts"],"names":[],"mappings":";;;;;;AAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AA4BA,SAAS,YAAY,CAAC,GAAQ,EAAA;EAC5B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;IAC3C,OAAO,GAAG;EACX;EACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IACtB,OAAO,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC;EAC7B;EACD,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;EAC1C,IAAM,MAAM,GAAwB,CAAA,CAAE;EACtC;EACA,UAAU,CAAC,OAAO,CAAC,UAAC,GAAG,EAAI;IACzB,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtC,CAAC,CAAC;EACF,OAAO,MAAM;AACf;AAEA;AACA;AACA,SAAgB,mBAAmB,CAAC,GAAQ,EAAA;EAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC1C;AAFA,OAAA,CAAA,mBAAA,GAAA,mBAAA;AAIA,SAAgB,WAAW,CACzB,IAAyB,EACzB,GAAW,EACX,OAAe,EACf,IAAwB,EACxB,aAA8B,EAC9B,QAAyB,EAAA;EAEzB,OAAO;IACL,QAAQ,EAAE,OAAO;IACjB,cAAc,EAAE,MAAA,CAAA,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;IACtE,QAAQ,EAAE,MAAA,CAAA,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC3D,GAAG,EAAE,GAAG;IACR,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI,IAAI;GACf;AACH;AAhBA,OAAA,CAAA,WAAA,GAAA,WAAA;AAkBA,SAAgB,gBAAgB,CAAC,OAAmB,EAAA;EAClD,OAAO,CAAA,CAAA,EAAA,UAAA,CAAA,MAAM,EAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;AAC7C;AAFA,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeSignDoc = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst math_1 = require(\"@cosmjs/math\");\nfunction sortedObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(sortedObject);\n    }\n    const sortedKeys = Object.keys(obj).sort();\n    const result = {};\n    // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n    sortedKeys.forEach((key) => {\n        result[key] = sortedObject(obj[key]);\n    });\n    return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n    return JSON.stringify(sortedObject(obj));\n}\nexports.sortedJsonStringify = sortedJsonStringify;\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence) {\n    return {\n        chain_id: chainId,\n        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n        fee: fee,\n        msgs: msgs,\n        memo: memo || \"\",\n    };\n}\nexports.makeSignDoc = makeSignDoc;\nfunction serializeSignDoc(signDoc) {\n    return (0, encoding_1.toUtf8)(sortedJsonStringify(signDoc));\n}\nexports.serializeSignDoc = serializeSignDoc;\n//# sourceMappingURL=signdoc.js.map"]},"metadata":{},"sourceType":"script"}