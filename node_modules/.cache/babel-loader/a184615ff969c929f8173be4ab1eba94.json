{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type).\n *\n * Note: this returns true for arrays, which are objects in JavaScript\n * even though array and object are different types in JSON.\n *\n * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNonNullObject(data) {\n  return typeof data === \"object\" && data !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\nfunction isUint8Array(data) {\n  if (!isNonNullObject(data)) return false;\n  // Avoid instanceof check which is unreliable in some JS environments\n  // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n  // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n  if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\") return false;\n  if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n    // Buffer.isBuffer is available at runtime\n    if (Buffer.isBuffer(data)) return false;\n  }\n  return true;\n}\nexports.isUint8Array = isUint8Array;","map":{"version":3,"sources":["../src/typechecks.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;AAOG;AACH;AACA,SAAgB,eAAe,CAAC,IAAa,EAAA;EAC3C,OAAO,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI;AAClD;AAFA,OAAA,CAAA,eAAA,GAAA,eAAA;AAIA;;AAEG;AACH,SAAgB,YAAY,CAAC,IAAa,EAAA;EACxC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;EAExC;EACA;EAEA;EACA,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,qBAAqB,EAAE,OAAO,KAAK;EAEhF,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,EAAE;IAC3E;IACA,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;EACxC;EAED,OAAO,IAAI;AACb;AAfA,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type).\n *\n * Note: this returns true for arrays, which are objects in JavaScript\n * even though array and object are different types in JSON.\n *\n * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNonNullObject(data) {\n    return typeof data === \"object\" && data !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\nfunction isUint8Array(data) {\n    if (!isNonNullObject(data))\n        return false;\n    // Avoid instanceof check which is unreliable in some JS environments\n    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n    if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\")\n        return false;\n    if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n        // Buffer.isBuffer is available at runtime\n        if (Buffer.isBuffer(data))\n            return false;\n    }\n    return true;\n}\nexports.isUint8Array = isUint8Array;\n//# sourceMappingURL=typechecks.js.map"]},"metadata":{},"sourceType":"script"}