{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupStakingExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nvar query_1 = require(\"cosmjs-types/cosmos/staking/v1beta1/query\");\nvar long_1 = __importDefault(require(\"long\"));\nvar queryclient_1 = require(\"../../queryclient\");\nfunction setupStakingExtension(base) {\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  var rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  var queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    staking: {\n      delegation: function () {\n        var _delegation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delegatorAddress, validatorAddress) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return queryService.Delegation({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress\n                  });\n                case 2:\n                  response = _context.sent;\n                  return _context.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        function delegation(_x, _x2) {\n          return _delegation.apply(this, arguments);\n        }\n        return delegation;\n      }(),\n      delegatorDelegations: function () {\n        var _delegatorDelegations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(delegatorAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return queryService.DelegatorDelegations({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context2.sent;\n                  return _context2.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n        function delegatorDelegations(_x3, _x4) {\n          return _delegatorDelegations.apply(this, arguments);\n        }\n        return delegatorDelegations;\n      }(),\n      delegatorUnbondingDelegations: function () {\n        var _delegatorUnbondingDelegations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delegatorAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return queryService.DelegatorUnbondingDelegations({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context3.sent;\n                  return _context3.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n        function delegatorUnbondingDelegations(_x5, _x6) {\n          return _delegatorUnbondingDelegations.apply(this, arguments);\n        }\n        return delegatorUnbondingDelegations;\n      }(),\n      delegatorValidator: function () {\n        var _delegatorValidator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(delegatorAddress, validatorAddress) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return queryService.DelegatorValidator({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress\n                  });\n                case 2:\n                  response = _context4.sent;\n                  return _context4.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n        function delegatorValidator(_x7, _x8) {\n          return _delegatorValidator.apply(this, arguments);\n        }\n        return delegatorValidator;\n      }(),\n      delegatorValidators: function () {\n        var _delegatorValidators = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(delegatorAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return queryService.DelegatorValidators({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context5.sent;\n                  return _context5.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n        function delegatorValidators(_x9, _x10) {\n          return _delegatorValidators.apply(this, arguments);\n        }\n        return delegatorValidators;\n      }(),\n      historicalInfo: function () {\n        var _historicalInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(height) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return queryService.HistoricalInfo({\n                    height: long_1.default.fromNumber(height, true)\n                  });\n                case 2:\n                  response = _context6.sent;\n                  return _context6.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n        function historicalInfo(_x11) {\n          return _historicalInfo.apply(this, arguments);\n        }\n        return historicalInfo;\n      }(),\n      params: function () {\n        var _params = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return queryService.Params({});\n                case 2:\n                  response = _context7.sent;\n                  return _context7.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n        function params() {\n          return _params.apply(this, arguments);\n        }\n        return params;\n      }(),\n      pool: function () {\n        var _pool = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return queryService.Pool({});\n                case 2:\n                  response = _context8.sent;\n                  return _context8.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n        function pool() {\n          return _pool.apply(this, arguments);\n        }\n        return pool;\n      }(),\n      redelegations: function () {\n        var _redelegations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(delegatorAddress, sourceValidatorAddress, destinationValidatorAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return queryService.Redelegations({\n                    delegatorAddr: delegatorAddress,\n                    srcValidatorAddr: sourceValidatorAddress,\n                    dstValidatorAddr: destinationValidatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context9.sent;\n                  return _context9.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n        function redelegations(_x12, _x13, _x14, _x15) {\n          return _redelegations.apply(this, arguments);\n        }\n        return redelegations;\n      }(),\n      unbondingDelegation: function () {\n        var _unbondingDelegation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(delegatorAddress, validatorAddress) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return queryService.UnbondingDelegation({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress\n                  });\n                case 2:\n                  response = _context10.sent;\n                  return _context10.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n        function unbondingDelegation(_x16, _x17) {\n          return _unbondingDelegation.apply(this, arguments);\n        }\n        return unbondingDelegation;\n      }(),\n      validator: function () {\n        var _validator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(validatorAddress) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return queryService.Validator({\n                    validatorAddr: validatorAddress\n                  });\n                case 2:\n                  response = _context11.sent;\n                  return _context11.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n        function validator(_x18) {\n          return _validator.apply(this, arguments);\n        }\n        return validator;\n      }(),\n      validatorDelegations: function () {\n        var _validatorDelegations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(validatorAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return queryService.ValidatorDelegations({\n                    validatorAddr: validatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context12.sent;\n                  return _context12.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n        function validatorDelegations(_x19, _x20) {\n          return _validatorDelegations.apply(this, arguments);\n        }\n        return validatorDelegations;\n      }(),\n      validators: function () {\n        var _validators = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(status, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return queryService.Validators({\n                    status: status,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context13.sent;\n                  return _context13.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n        function validators(_x21, _x22) {\n          return _validators.apply(this, arguments);\n        }\n        return validators;\n      }(),\n      validatorUnbondingDelegations: function () {\n        var _validatorUnbondingDelegations = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(validatorAddress, paginationKey) {\n          var response;\n          return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return queryService.ValidatorUnbondingDelegations({\n                    validatorAddr: validatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey)\n                  });\n                case 2:\n                  response = _context14.sent;\n                  return _context14.abrupt(\"return\", response);\n                case 4:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n        function validatorUnbondingDelegations(_x23, _x24) {\n          return _validatorUnbondingDelegations.apply(this, arguments);\n        }\n        return validatorUnbondingDelegations;\n      }()\n    }\n  };\n}\nexports.setupStakingExtension = setupStakingExtension;","map":{"version":3,"sources":["../../../src/modules/staking/queries.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupStakingExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst query_1 = require(\"cosmjs-types/cosmos/staking/v1beta1/query\");\nconst long_1 = __importDefault(require(\"long\"));\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupStakingExtension(base) {\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        staking: {\n            delegation: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.Delegation({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress,\n                });\n                return response;\n            },\n            delegatorDelegations: async (delegatorAddress, paginationKey) => {\n                const response = await queryService.DelegatorDelegations({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            delegatorUnbondingDelegations: async (delegatorAddress, paginationKey) => {\n                const response = await queryService.DelegatorUnbondingDelegations({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            delegatorValidator: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.DelegatorValidator({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress,\n                });\n                return response;\n            },\n            delegatorValidators: async (delegatorAddress, paginationKey) => {\n                const response = await queryService.DelegatorValidators({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            historicalInfo: async (height) => {\n                const response = await queryService.HistoricalInfo({\n                    height: long_1.default.fromNumber(height, true),\n                });\n                return response;\n            },\n            params: async () => {\n                const response = await queryService.Params({});\n                return response;\n            },\n            pool: async () => {\n                const response = await queryService.Pool({});\n                return response;\n            },\n            redelegations: async (delegatorAddress, sourceValidatorAddress, destinationValidatorAddress, paginationKey) => {\n                const response = await queryService.Redelegations({\n                    delegatorAddr: delegatorAddress,\n                    srcValidatorAddr: sourceValidatorAddress,\n                    dstValidatorAddr: destinationValidatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            unbondingDelegation: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.UnbondingDelegation({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress,\n                });\n                return response;\n            },\n            validator: async (validatorAddress) => {\n                const response = await queryService.Validator({ validatorAddr: validatorAddress });\n                return response;\n            },\n            validatorDelegations: async (validatorAddress, paginationKey) => {\n                const response = await queryService.ValidatorDelegations({\n                    validatorAddr: validatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            validators: async (status, paginationKey) => {\n                const response = await queryService.Validators({\n                    status: status,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            validatorUnbondingDelegations: async (validatorAddress, paginationKey) => {\n                const response = await queryService.ValidatorUnbondingDelegations({\n                    validatorAddr: validatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupStakingExtension = setupStakingExtension;\n//# sourceMappingURL=queries.js.map"]},"metadata":{},"sourceType":"script"}