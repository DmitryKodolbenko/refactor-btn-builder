{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TupleSlice4 = void 0;\nvar TupleSlice4 = /*#__PURE__*/function () {\n  function TupleSlice4(items) {\n    _classCallCheck(this, TupleSlice4);\n    this.items = _toConsumableArray(items);\n  }\n  _createClass(TupleSlice4, [{\n    key: \"remaining\",\n    get: function get() {\n      return this.items.length;\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (this.items.length === 0) {\n        throw Error('EOF');\n      }\n      var res = this.items[0];\n      this.items.splice(0, 1);\n      return res;\n    }\n  }, {\n    key: \"readBigNumber\",\n    value: function readBigNumber() {\n      var popped = this.pop();\n      if (popped.type !== 'int') {\n        throw Error('Not a number');\n      }\n      return popped.value;\n    }\n  }, {\n    key: \"readNumber\",\n    value: function readNumber() {\n      return this.readBigNumber().toNumber();\n    }\n  }, {\n    key: \"readBoolean\",\n    value: function readBoolean() {\n      var res = this.readNumber();\n      return res === 0 ? false : true;\n    }\n  }, {\n    key: \"readAddress\",\n    value: function readAddress() {\n      return this.readCell().beginParse().readAddress();\n    }\n  }, {\n    key: \"readCell\",\n    value: function readCell() {\n      var popped = this.pop();\n      if (popped.type !== 'cell' && popped.type !== 'slice' && popped.type !== 'builder') {\n        throw Error('Not a cell');\n      }\n      return popped.cell;\n    }\n  }, {\n    key: \"readTuple\",\n    value: function readTuple() {\n      var popped = this.pop();\n      if (popped.type !== 'tuple') {\n        throw Error('Not a number');\n      }\n      return new TupleSlice4(popped.items);\n    }\n  }]);\n  return TupleSlice4;\n}();\nexports.TupleSlice4 = TupleSlice4;","map":{"version":3,"names":["Object","defineProperty","exports","value","TupleSlice4","items","length","Error","res","splice","popped","pop","type","readBigNumber","toNumber","readNumber","readCell","beginParse","readAddress","cell"],"sources":["/Users/sepezho/Work/tonana/fe/node_modules/ton/dist/boc/TupleSlice4.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TupleSlice4 = void 0;\nclass TupleSlice4 {\n    constructor(items) {\n        this.items = [...items];\n    }\n    get remaining() {\n        return this.items.length;\n    }\n    pop() {\n        if (this.items.length === 0) {\n            throw Error('EOF');\n        }\n        let res = this.items[0];\n        this.items.splice(0, 1);\n        return res;\n    }\n    readBigNumber() {\n        let popped = this.pop();\n        if (popped.type !== 'int') {\n            throw Error('Not a number');\n        }\n        return popped.value;\n    }\n    readNumber() {\n        return this.readBigNumber().toNumber();\n    }\n    readBoolean() {\n        let res = this.readNumber();\n        return res === 0 ? false : true;\n    }\n    readAddress() {\n        return this.readCell().beginParse().readAddress();\n    }\n    readCell() {\n        let popped = this.pop();\n        if (popped.type !== 'cell' && popped.type !== 'slice' && popped.type !== 'builder') {\n            throw Error('Not a cell');\n        }\n        return popped.cell;\n    }\n    readTuple() {\n        let popped = this.pop();\n        if (popped.type !== 'tuple') {\n            throw Error('Not a number');\n        }\n        return new TupleSlice4(popped.items);\n    }\n}\nexports.TupleSlice4 = TupleSlice4;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAAC,IACvBA,WAAW;EACb,qBAAYC,KAAK,EAAE;IAAA;IACf,IAAI,CAACA,KAAK,sBAAOA,KAAK,CAAC;EAC3B;EAAC;IAAA;IAAA,KACD,eAAgB;MACZ,OAAO,IAAI,CAACA,KAAK,CAACC,MAAM;IAC5B;EAAC;IAAA;IAAA,OACD,eAAM;MACF,IAAI,IAAI,CAACD,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QACzB,MAAMC,KAAK,CAAC,KAAK,CAAC;MACtB;MACA,IAAIC,GAAG,GAAG,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC;MACvB,IAAI,CAACA,KAAK,CAACI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACvB,OAAOD,GAAG;IACd;EAAC;IAAA;IAAA,OACD,yBAAgB;MACZ,IAAIE,MAAM,GAAG,IAAI,CAACC,GAAG,EAAE;MACvB,IAAID,MAAM,CAACE,IAAI,KAAK,KAAK,EAAE;QACvB,MAAML,KAAK,CAAC,cAAc,CAAC;MAC/B;MACA,OAAOG,MAAM,CAACP,KAAK;IACvB;EAAC;IAAA;IAAA,OACD,sBAAa;MACT,OAAO,IAAI,CAACU,aAAa,EAAE,CAACC,QAAQ,EAAE;IAC1C;EAAC;IAAA;IAAA,OACD,uBAAc;MACV,IAAIN,GAAG,GAAG,IAAI,CAACO,UAAU,EAAE;MAC3B,OAAOP,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI;IACnC;EAAC;IAAA;IAAA,OACD,uBAAc;MACV,OAAO,IAAI,CAACQ,QAAQ,EAAE,CAACC,UAAU,EAAE,CAACC,WAAW,EAAE;IACrD;EAAC;IAAA;IAAA,OACD,oBAAW;MACP,IAAIR,MAAM,GAAG,IAAI,CAACC,GAAG,EAAE;MACvB,IAAID,MAAM,CAACE,IAAI,KAAK,MAAM,IAAIF,MAAM,CAACE,IAAI,KAAK,OAAO,IAAIF,MAAM,CAACE,IAAI,KAAK,SAAS,EAAE;QAChF,MAAML,KAAK,CAAC,YAAY,CAAC;MAC7B;MACA,OAAOG,MAAM,CAACS,IAAI;IACtB;EAAC;IAAA;IAAA,OACD,qBAAY;MACR,IAAIT,MAAM,GAAG,IAAI,CAACC,GAAG,EAAE;MACvB,IAAID,MAAM,CAACE,IAAI,KAAK,OAAO,EAAE;QACzB,MAAML,KAAK,CAAC,cAAc,CAAC;MAC/B;MACA,OAAO,IAAIH,WAAW,CAACM,MAAM,CAACL,KAAK,CAAC;IACxC;EAAC;EAAA;AAAA;AAELH,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script"}