{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{message}from\"antd\";import TonWeb from\"tonweb\";import{Cell}from\"ton\";import{encodeOffChainContent,decodeOffChainContent}from\"./BOCcontent\";var MakeTONTrx=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(activeBtn,setIsload,TONAmount,walletTo,netTo,hexString,openData,add,params){var ton;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(activeBtn){setIsload(true);listener(walletTo,netTo,hexString,setIsload,openData,add,params);//@ts-ignore\nton=window.ton;ton.send(\"ton_sendTransaction\",[{to:process.env.REACT_APP_BACK_TON_WALLET,value:TonWeb.utils.toNano(Number(TONAmount)).toString(),data:encodeOffChainContent(\"\".concat(openData?\"SM#\":\"\").concat(netTo,\"#\").concat(openData?add:walletTo).concat(openData?\"#\".concat(btoa(params)):\"\")).toBoc().toString(\"base64\"),dataType:\"boc\"}]);}else{message.error(\"Fill all forms and connect wallets!\",10);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function MakeTONTrx(_x,_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9){return _ref.apply(this,arguments);};}();var listener=function listener(walletTo,netTo,hexString,setIsload,openData,add,params){var trxs=[];var int=setInterval(function(){message.success(\"Wait BE trx pending...\",2);fetch(\"https://toncenter.com/api/v2/getTransactions?address=\".concat(process.env.REACT_APP_BACK_TON_WALLET,\"&limit=10&to_lt=0&archival=false\")).then(function(e){return e.json();}).then(function(e){var data=e.result.filter(function(e){console.log(e.in_msg.msg_data.body);console.log(Cell.fromBoc(Buffer.from(TonWeb.utils.base64ToBytes(e.in_msg.msg_data.body)))[0]);return decodeOffChainContent(Cell.fromBoc(Buffer.from(TonWeb.utils.base64ToBytes(e.in_msg.msg_data.body)))[0])===\"\".concat(openData?\"SM#\":\"\").concat(netTo,\"#\").concat(openData?add:walletTo).concat(openData?\"#\".concat(btoa(params)):\"\");});if(!data[0]&&trxs.length===0)trxs.push({transaction_id:{hash:\"test\"}});if(trxs.length===0&&data[0])trxs=data;if(data[0].transaction_id.hash!==trxs[0].transaction_id.hash&&trxs.length!==0){clearInterval(int);message.success(\"Done BE trx!\",10);fetch(process.env.REACT_APP_STATE===\"dev\"?\"http://localhost:8092\":process.env.REACT_APP_STATE===\"dev-remote\"?\"https://dev.api.tonana.org\":\"https://api.tonana.org/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({hash:data[0].transaction_id.hash,sourceChain:\"ton\"})});setIsload(false);message.success(\"Done trx!\",10);}});},10000);};export default MakeTONTrx;","map":{"version":3,"names":["message","TonWeb","Cell","encodeOffChainContent","decodeOffChainContent","MakeTONTrx","activeBtn","setIsload","TONAmount","walletTo","netTo","hexString","openData","add","params","listener","ton","window","send","to","process","env","REACT_APP_BACK_TON_WALLET","value","utils","toNano","Number","toString","data","btoa","toBoc","dataType","error","trxs","int","setInterval","success","fetch","then","e","json","result","filter","console","log","in_msg","msg_data","body","fromBoc","Buffer","from","base64ToBytes","length","push","transaction_id","hash","clearInterval","REACT_APP_STATE","method","headers","JSON","stringify","sourceChain"],"sources":["/Users/sepezho/Work/tonana/fe/src/logic/transaction/MakeTONTrx.ts"],"sourcesContent":["import { message } from \"antd\";\nimport TonWeb from \"tonweb\";\nimport { Cell } from \"ton\";\nimport { encodeOffChainContent, decodeOffChainContent } from \"./BOCcontent\";\n\nconst MakeTONTrx = async (\n\tactiveBtn: any,\n\tsetIsload: any,\n\tTONAmount: any,\n\twalletTo: any,\n\tnetTo: string,\n\thexString: any,\n\topenData: boolean,\n\tadd: string,\n\tparams: string\n) => {\n\tif (activeBtn) {\n\t\tsetIsload(true);\n\t\tlistener(walletTo, netTo, hexString, setIsload, openData, add, params);\n\n\t\t//@ts-ignore\n\t\tconst ton = window.ton;\n\t\tton.send(\"ton_sendTransaction\", [\n\t\t\t{\n\t\t\t\tto: process.env.REACT_APP_BACK_TON_WALLET,\n\t\t\t\tvalue: TonWeb.utils.toNano(Number(TONAmount)).toString(),\n\t\t\t\tdata: encodeOffChainContent(\n\t\t\t\t\t`${openData ? \"SM#\" : \"\"}${netTo}#${openData ? add : walletTo}${\n\t\t\t\t\t\topenData ? `#${btoa(params)}` : \"\"\n\t\t\t\t\t}`\n\t\t\t\t)\n\t\t\t\t\t.toBoc()\n\t\t\t\t\t.toString(\"base64\"),\n\t\t\t\tdataType: \"boc\",\n\t\t\t},\n\t\t]);\n\t} else {\n\t\tmessage.error(\"Fill all forms and connect wallets!\", 10);\n\t}\n};\n\nconst listener = (\n\twalletTo: any,\n\tnetTo: string,\n\thexString: any,\n\tsetIsload: any,\n\topenData: boolean,\n\tadd: string,\n\tparams: string\n) => {\n\tlet trxs: any = [];\n\tconst int = setInterval(() => {\n\t\tmessage.success(\"Wait BE trx pending...\", 2);\n\t\tfetch(\n\t\t\t`https://toncenter.com/api/v2/getTransactions?address=${process.env.REACT_APP_BACK_TON_WALLET}&limit=10&to_lt=0&archival=false`\n\t\t)\n\t\t\t.then((e: any) => e.json())\n\t\t\t.then((e: any) => {\n\t\t\t\tconst data = e.result.filter((e: any) => {\n\t\t\t\t\tconsole.log(e.in_msg.msg_data.body);\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tCell.fromBoc(\n\t\t\t\t\t\t\tBuffer.from(TonWeb.utils.base64ToBytes(e.in_msg.msg_data.body))\n\t\t\t\t\t\t)[0]\n\t\t\t\t\t);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tdecodeOffChainContent(\n\t\t\t\t\t\t\tCell.fromBoc(\n\t\t\t\t\t\t\t\tBuffer.from(TonWeb.utils.base64ToBytes(e.in_msg.msg_data.body))\n\t\t\t\t\t\t\t)[0]\n\t\t\t\t\t\t) ===\n\t\t\t\t\t\t`${openData ? \"SM#\" : \"\"}${netTo}#${openData ? add : walletTo}${\n\t\t\t\t\t\t\topenData ? `#${btoa(params)}` : \"\"\n\t\t\t\t\t\t}`\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (!data[0] && trxs.length === 0)\n\t\t\t\t\ttrxs.push({ transaction_id: { hash: \"test\" } });\n\t\t\t\tif (trxs.length === 0 && data[0]) trxs = data;\n\n\t\t\t\tif (\n\t\t\t\t\tdata[0].transaction_id.hash !== trxs[0].transaction_id.hash &&\n\t\t\t\t\ttrxs.length !== 0\n\t\t\t\t) {\n\t\t\t\t\tclearInterval(int);\n\n\t\t\t\t\tmessage.success(\"Done BE trx!\", 10);\n\n\t\t\t\t\tfetch(\n\t\t\t\t\t\tprocess.env.REACT_APP_STATE === \"dev\"\n\t\t\t\t\t\t\t? \"http://localhost:8092\"\n\t\t\t\t\t\t\t: process.env.REACT_APP_STATE === \"dev-remote\"\n\t\t\t\t\t\t\t? \"https://dev.api.tonana.org\"\n\t\t\t\t\t\t\t: \"https://api.tonana.org/\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\thash: data[0].transaction_id.hash,\n\t\t\t\t\t\t\t\tsourceChain: \"ton\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tsetIsload(false);\n\n\t\t\t\t\tmessage.success(\"Done trx!\", 10);\n\t\t\t\t}\n\t\t\t});\n\t}, 10000);\n};\n\nexport default MakeTONTrx;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}