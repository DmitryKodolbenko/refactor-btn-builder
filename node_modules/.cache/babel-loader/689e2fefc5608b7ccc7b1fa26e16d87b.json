{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/sepezho/Work/tonana/fe/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createJsonRpcRequest = void 0;\nvar numbersWithoutZero = \"123456789\";\n/** generates a random numeric character  */\nfunction randomNumericChar() {\n  return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];\n}\n/**\n * An (absolutely not cryptographically secure) random integer > 0.\n */\nfunction randomId() {\n  return parseInt(Array.from({\n    length: 12\n  }).map(function () {\n    return randomNumericChar();\n  }).join(\"\"), 10);\n}\n/** Creates a JSON-RPC request with random ID */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction createJsonRpcRequest(method, params) {\n  var paramsCopy = params ? _objectSpread({}, params) : {};\n  return {\n    jsonrpc: \"2.0\",\n    id: randomId(),\n    method: method,\n    params: paramsCopy\n  };\n}\nexports.createJsonRpcRequest = createJsonRpcRequest;","map":{"version":3,"sources":["../src/jsonrpc.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAM,kBAAkB,GAAG,WAAW;AAEtC;AACA,SAAS,iBAAiB,GAAA;EACxB,OAAO,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAClF;AAEA;;AAEG;AACH,SAAS,QAAQ,GAAA;EACf,OAAO,QAAQ,CACb,KAAK,CAAC,IAAI,CAAC;IAAE,MAAM,EAAE;EAAE,CAAE,CAAC,CACvB,GAAG,CAAC;IAAA,OAAM,iBAAiB,EAAE;EAAA,EAAC,CAC9B,IAAI,CAAC,EAAE,CAAC,EACX,EAAE,CACH;AACH;AAEA;AACA;AACA,SAAgB,oBAAoB,CAAC,MAAc,EAAE,MAAW,EAAA;EAC9D,IAAM,UAAU,GAAG,MAAM,qBAAQ,MAAM,IAAK,CAAA,CAAE;EAC9C,OAAO;IACL,OAAO,EAAE,KAAK;IACd,EAAE,EAAE,QAAQ,EAAE;IACd,MAAM,EAAE,MAAM;IACd,MAAM,EAAE;GACT;AACH;AARA,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createJsonRpcRequest = void 0;\nconst numbersWithoutZero = \"123456789\";\n/** generates a random numeric character  */\nfunction randomNumericChar() {\n    return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];\n}\n/**\n * An (absolutely not cryptographically secure) random integer > 0.\n */\nfunction randomId() {\n    return parseInt(Array.from({ length: 12 })\n        .map(() => randomNumericChar())\n        .join(\"\"), 10);\n}\n/** Creates a JSON-RPC request with random ID */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction createJsonRpcRequest(method, params) {\n    const paramsCopy = params ? { ...params } : {};\n    return {\n        jsonrpc: \"2.0\",\n        id: randomId(),\n        method: method,\n        params: paramsCopy,\n    };\n}\nexports.createJsonRpcRequest = createJsonRpcRequest;\n//# sourceMappingURL=jsonrpc.js.map"]},"metadata":{},"sourceType":"script"}