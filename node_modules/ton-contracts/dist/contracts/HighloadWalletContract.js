"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HighloadWalletContract = void 0;
const ton_1 = require("ton");
const ton_crypto_1 = require("ton-crypto");
const HighloadWalletMessage_1 = require("./messages/HighloadWalletMessage");
class HighloadWalletContract {
    address;
    client;
    constructor(address, client) {
        this.address = address;
        this.client = client;
    }
    async getSeqNo() {
        if (await this.client.isContractDeployed(this.address)) {
            let res = await this.client.callGetMethod(this.address, 'seqno');
            return parseInt(res.stack[0][1], 16);
        }
        else {
            return 0;
        }
    }
    async createTransfer(args) {
        // Prepare message
        const message = new HighloadWalletMessage_1.HighloadWalletMessage({
            seqno: args.seqno,
            walletId: args.walletId,
            timeout: args.timeout,
            messages: args.messages
        });
        // Sign message
        const toSign = new ton_1.Cell();
        message.writeTo(toSign);
        let signature = (0, ton_crypto_1.sign)(await toSign.hash(), args.secretKey);
        // Result
        const body = new ton_1.Cell();
        body.bits.writeBuffer(signature);
        message.writeTo(body);
        return body;
    }
}
exports.HighloadWalletContract = HighloadWalletContract;
