"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerContract = void 0;
const ton_1 = require("ton");
const ton_crypto_1 = require("ton-crypto");
const LoggerContractSource_1 = require("./LoggerContractSource");
class LoggerContract {
    static async create(client, source) {
        return new LoggerContract(client, source, await (0, ton_1.contractAddress)(source));
    }
    static async createRandom(client, workchain = 0) {
        return LoggerContract.create(client, LoggerContractSource_1.LoggerContractSource.create({ seed: await (0, ton_crypto_1.getSecureRandomBytes)(64), workchain }));
    }
    source;
    address;
    client;
    constructor(client, source, address) {
        this.source = source;
        this.address = address;
        this.client = client;
    }
    async getSeqno() {
        if (await this.client.isContractDeployed(this.address)) {
            let res = await this.client.callGetMethod(this.address, 'seqno');
            return parseInt(res.stack[0][1], 16);
        }
        else {
            return 0;
        }
    }
    async getExternalMessages() {
        return (await this.client.getTransactions(this.address, { limit: 100 })).filter((v) => v.inMessage && !v.inMessage.source);
    }
    async getInternalMessages() {
        return (await this.client.getTransactions(this.address, { limit: 100 })).filter((v) => v.inMessage && v.inMessage.source);
    }
}
exports.LoggerContract = LoggerContract;
