"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElectorCommandNewStake = void 0;
const assert_1 = __importDefault(require("assert"));
const ton_1 = require("ton");
class ElectorCommandNewStake {
    queryId;
    publicKey;
    stakeAt;
    maxFactor;
    adnlAddress;
    signature;
    constructor(args) {
        this.queryId = args.queryId;
        this.publicKey = args.publicKey;
        this.stakeAt = args.stakeAt;
        this.maxFactor = args.maxFactor;
        this.adnlAddress = args.adnlAddress;
        this.signature = args.signature;
        (0, assert_1.default)(this.publicKey.length === 32);
        (0, assert_1.default)(this.adnlAddress.length === 32);
    }
    writeTo(cell) {
        cell.bits.writeUint(0x4e73744b, 32);
        cell.bits.writeUint(this.queryId, 64);
        cell.bits.writeBuffer(this.publicKey);
        cell.bits.writeUint(this.stakeAt, 32);
        cell.bits.writeUint(Math.round(this.maxFactor * 65536), 32);
        cell.bits.writeBuffer(this.adnlAddress);
        // Signature
        let sign = new ton_1.Cell();
        sign.bits.writeBuffer(this.signature);
        cell.refs.push(sign);
    }
}
exports.ElectorCommandNewStake = ElectorCommandNewStake;
